{"version":3,"file":"js/669.25ef890c.js","mappings":"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","sources":["webpack://alien_mood/./node_modules/core-js/internals/to-string.js","webpack://alien_mood/./src/views/GameRunner.vue","webpack://alien_mood/../src/config.ts","webpack://alien_mood/../src/util/internals/console.ts","webpack://alien_mood/../src/filters/GLProbes/GLProbe.ts","webpack://alien_mood/../src/filters/GLProbes/WebGLProbe.ts","webpack://alien_mood/../src/env/browser.ts","webpack://alien_mood/../src/env/index.ts","webpack://alien_mood/../src/cache.ts","webpack://alien_mood/../src/constants.ts","webpack://alien_mood/../src/ClassRegistry.ts","webpack://alien_mood/../src/util/animation/AnimationRegistry.ts","webpack://alien_mood/../src/Observable.ts","webpack://alien_mood/../src/util/internals/removeFromArray.ts","webpack://alien_mood/../src/util/misc/cos.ts","webpack://alien_mood/../src/util/misc/sin.ts","webpack://alien_mood/../src/Point.ts","webpack://alien_mood/../src/Collection.ts","webpack://alien_mood/../src/CommonMethods.ts","webpack://alien_mood/../src/util/animation/AnimationFrameProvider.ts","webpack://alien_mood/../src/util/internals/uid.ts","webpack://alien_mood/../src/util/misc/dom.ts","webpack://alien_mood/../src/util/misc/radiansDegreesConversion.ts","webpack://alien_mood/../src/util/misc/matrix.ts","webpack://alien_mood/../src/util/misc/objectEnlive.ts","webpack://alien_mood/../src/util/misc/pick.ts","webpack://alien_mood/../src/util/misc/toFixed.ts","webpack://alien_mood/../src/util/misc/svgExport.ts","webpack://alien_mood/../src/util/typeAssertions.ts","webpack://alien_mood/../src/util/dom_misc.ts","webpack://alien_mood/../src/canvas/DOMManagers/util.ts","webpack://alien_mood/../src/canvas/DOMManagers/StaticCanvasDOMManager.ts","webpack://alien_mood/../src/canvas/StaticCanvasOptions.ts","webpack://alien_mood/../src/canvas/StaticCanvas.ts","webpack://alien_mood/../src/util/dom_event.ts","webpack://alien_mood/../src/util/misc/boundingBoxFromPoints.ts","webpack://alien_mood/../src/util/misc/objectTransforms.ts","webpack://alien_mood/../src/util/misc/planeChange.ts","webpack://alien_mood/../src/controls/fireEvent.ts","webpack://alien_mood/../src/util/misc/resolveOrigin.ts","webpack://alien_mood/../src/controls/util.ts","webpack://alien_mood/../src/controls/drag.ts","webpack://alien_mood/../src/color/color_map.ts","webpack://alien_mood/../src/color/util.ts","webpack://alien_mood/../src/color/Color.ts","webpack://alien_mood/../src/color/constants.ts","webpack://alien_mood/../src/util/misc/svgParsing.ts","webpack://alien_mood/../src/shapes/Object/FabricObjectSVGExportMixin.ts","webpack://alien_mood/../src/parser/getSvgRegex.ts","webpack://alien_mood/../src/shapes/Text/constants.ts","webpack://alien_mood/../src/parser/constants.ts","webpack://alien_mood/../src/util/misc/vectors.ts","webpack://alien_mood/../src/Shadow.ts","webpack://alien_mood/../src/util/misc/capValue.ts","webpack://alien_mood/../src/shapes/Object/defaultValues.ts","webpack://alien_mood/../src/util/animation/easing.ts","webpack://alien_mood/../src/util/animation/AnimationBase.ts","webpack://alien_mood/../src/util/animation/ValueAnimation.ts","webpack://alien_mood/../src/util/animation/ArrayAnimation.ts","webpack://alien_mood/../src/util/animation/ColorAnimation.ts","webpack://alien_mood/../src/util/animation/animate.ts","webpack://alien_mood/../src/Intersection.ts","webpack://alien_mood/../src/shapes/Object/ObjectGeometry.ts","webpack://alien_mood/../src/shapes/Object/Object.ts","webpack://alien_mood/../src/controls/wrapWithFireEvent.ts","webpack://alien_mood/../src/controls/wrapWithFixedAnchor.ts","webpack://alien_mood/../src/controls/changeWidth.ts","webpack://alien_mood/../src/controls/controlRendering.ts","webpack://alien_mood/../src/controls/Control.ts","webpack://alien_mood/../src/controls/rotate.ts","webpack://alien_mood/../src/controls/scale.ts","webpack://alien_mood/../src/controls/skew.ts","webpack://alien_mood/../src/controls/scaleSkew.ts","webpack://alien_mood/../src/controls/commonControls.ts","webpack://alien_mood/../src/shapes/Object/InteractiveObject.ts","webpack://alien_mood/../src/util/applyMixins.ts","webpack://alien_mood/../src/shapes/Object/FabricObject.ts","webpack://alien_mood/../src/util/misc/isTransparent.ts","webpack://alien_mood/../src/util/misc/projectStroke/StrokeProjectionsBase.ts","webpack://alien_mood/../src/util/misc/projectStroke/StrokeLineJoinProjections.ts","webpack://alien_mood/../src/util/misc/projectStroke/StrokeLineCapProjections.ts","webpack://alien_mood/../src/util/misc/projectStroke/index.ts","webpack://alien_mood/../src/util/internals/findRight.ts","webpack://alien_mood/../src/util/internals/cloneStyles.ts","webpack://alien_mood/../src/util/lang_string.ts","webpack://alien_mood/../src/util/misc/textStyles.ts","webpack://alien_mood/../src/parser/attributes.ts","webpack://alien_mood/../src/parser/selectorMatches.ts","webpack://alien_mood/../src/parser/elementMatchesRule.ts","webpack://alien_mood/../src/parser/doesSomeParentMatch.ts","webpack://alien_mood/../src/parser/normalizeAttr.ts","webpack://alien_mood/../src/util/internals/cleanupSvgAttribute.ts","webpack://alien_mood/../src/parser/parseTransformAttribute.ts","webpack://alien_mood/../src/parser/normalizeValue.ts","webpack://alien_mood/../src/parser/parseFontDeclaration.ts","webpack://alien_mood/../src/parser/parseStyleString.ts","webpack://alien_mood/../src/parser/parseStyleAttribute.ts","webpack://alien_mood/../src/parser/parseStyleObject.ts","webpack://alien_mood/../src/parser/setStrokeFillOpacity.ts","webpack://alien_mood/../src/parser/parseAttributes.ts","webpack://alien_mood/../src/parser/getGlobalStylesForElement.ts","webpack://alien_mood/../src/shapes/Rect.ts","webpack://alien_mood/../src/LayoutManager/constants.ts","webpack://alien_mood/../src/LayoutManager/LayoutStrategies/utils.ts","webpack://alien_mood/../src/LayoutManager/LayoutStrategies/LayoutStrategy.ts","webpack://alien_mood/../src/LayoutManager/LayoutStrategies/FitContentLayout.ts","webpack://alien_mood/../src/LayoutManager/LayoutManager.ts","webpack://alien_mood/../src/shapes/Group.ts","webpack://alien_mood/../src/util/misc/groupSVGElements.ts","webpack://alien_mood/../src/util/misc/findScaleTo.ts","webpack://alien_mood/../src/util/path/regex.ts","webpack://alien_mood/../src/util/path/index.ts","webpack://alien_mood/../src/util/dom_style.ts","webpack://alien_mood/../src/util/misc/mergeClipPaths.ts","webpack://alien_mood/../src/util/internals/getRandomInt.ts","webpack://alien_mood/../src/util/internals/dom_request.ts","webpack://alien_mood/../src/util/transform_matrix_removal.ts","webpack://alien_mood/../src/util/misc/rotatePoint.ts","webpack://alien_mood/../src/canvas/DOMManagers/CanvasDOMManager.ts","webpack://alien_mood/../src/canvas/SelectableCanvas.ts","webpack://alien_mood/../src/canvas/CanvasOptions.ts","webpack://alien_mood/../src/canvas/TextEditingManager.ts","webpack://alien_mood/../src/canvas/Canvas.ts","webpack://alien_mood/../src/gradient/constants.ts","webpack://alien_mood/../src/util/internals/ifNaN.ts","webpack://alien_mood/../src/parser/percent.ts","webpack://alien_mood/../src/gradient/parser/parseColorStops.ts","webpack://alien_mood/../src/gradient/parser/misc.ts","webpack://alien_mood/../src/gradient/parser/parseCoords.ts","webpack://alien_mood/../src/gradient/Gradient.ts","webpack://alien_mood/../src/Pattern/Pattern.ts","webpack://alien_mood/../src/brushes/BaseBrush.ts","webpack://alien_mood/../src/shapes/Path.ts","webpack://alien_mood/../src/brushes/PencilBrush.ts","webpack://alien_mood/../src/shapes/Circle.ts","webpack://alien_mood/../src/brushes/PatternBrush.ts","webpack://alien_mood/../src/shapes/Line.ts","webpack://alien_mood/../src/shapes/Triangle.ts","webpack://alien_mood/../src/shapes/Ellipse.ts","webpack://alien_mood/../src/parser/parsePointsAttribute.ts","webpack://alien_mood/../src/shapes/Polyline.ts","webpack://alien_mood/../src/shapes/Polygon.ts","webpack://alien_mood/../src/shapes/Text/StyledText.ts","webpack://alien_mood/../src/shapes/Text/TextSVGExportMixin.ts","webpack://alien_mood/../src/shapes/Text/Text.ts","webpack://alien_mood/../src/shapes/IText/DraggableTextDelegate.ts","webpack://alien_mood/../src/shapes/IText/ITextBehavior.ts","webpack://alien_mood/../src/shapes/IText/ITextKeyBehavior.ts","webpack://alien_mood/../src/shapes/IText/ITextClickBehavior.ts","webpack://alien_mood/../src/shapes/IText/constants.ts","webpack://alien_mood/../src/util/internals/applyCanvasTransform.ts","webpack://alien_mood/../src/shapes/IText/IText.ts","webpack://alien_mood/../src/shapes/Textbox.ts","webpack://alien_mood/../src/LayoutManager/LayoutStrategies/ClipPathLayout.ts","webpack://alien_mood/../src/LayoutManager/LayoutStrategies/FixedLayout.ts","webpack://alien_mood/../src/LayoutManager/ActiveSelectionLayoutManager.ts","webpack://alien_mood/../src/shapes/ActiveSelection.ts","webpack://alien_mood/../src/filters/Canvas2dFilterBackend.ts","webpack://alien_mood/../src/filters/WebGLFilterBackend.ts","webpack://alien_mood/../src/filters/FilterBackend.ts","webpack://alien_mood/../src/shapes/Image.ts","webpack://alien_mood/../src/parser/applyViewboxTransform.ts","webpack://alien_mood/../src/parser/getTagName.ts","webpack://alien_mood/../src/parser/hasInvalidAncestor.ts","webpack://alien_mood/../src/parser/getMultipleNodes.ts","webpack://alien_mood/../src/parser/recursivelyParseGradientsXlink.ts","webpack://alien_mood/../src/parser/getGradientDefs.ts","webpack://alien_mood/../src/parser/getCSSRules.ts","webpack://alien_mood/../src/parser/elements_parser.ts","webpack://alien_mood/../src/parser/parseSVGDocument.ts","webpack://alien_mood/../src/parser/parseUseDirectives.ts","webpack://alien_mood/../src/parser/loadSVGFromURL.ts","webpack://alien_mood/../src/controls/polyControl.ts","webpack://alien_mood/../src/controls/pathControl.ts","webpack://alien_mood/../src/filters/utils.ts","webpack://alien_mood/../src/filters/shaders/baseFilter.ts","webpack://alien_mood/../src/filters/BaseFilter.ts","webpack://alien_mood/../src/filters/shaders/blendColor.ts","webpack://alien_mood/../src/filters/BlendColor.ts","webpack://alien_mood/../src/filters/shaders/blendImage.ts","webpack://alien_mood/../src/filters/BlendImage.ts","webpack://alien_mood/../src/filters/Blur.ts","webpack://alien_mood/../src/filters/shaders/blur.ts","webpack://alien_mood/../src/filters/Brightness.ts","webpack://alien_mood/../src/filters/shaders/brightness.ts","webpack://alien_mood/../src/filters/shaders/colorMatrix.ts","webpack://alien_mood/../src/filters/ColorMatrix.ts","webpack://alien_mood/../src/filters/ColorMatrixFilters.ts","webpack://alien_mood/../src/filters/Composed.ts","webpack://alien_mood/../src/filters/Contrast.ts","webpack://alien_mood/../src/filters/shaders/constrast.ts","webpack://alien_mood/../src/filters/shaders/convolute.ts","webpack://alien_mood/../src/filters/Convolute.ts","webpack://alien_mood/../src/filters/shaders/gamma.ts","webpack://alien_mood/../src/filters/Gamma.ts","webpack://alien_mood/../src/filters/shaders/grayscale.ts","webpack://alien_mood/../src/filters/Grayscale.ts","webpack://alien_mood/../src/filters/HueRotation.ts","webpack://alien_mood/../src/filters/Invert.ts","webpack://alien_mood/../src/filters/shaders/invert.ts","webpack://alien_mood/../src/filters/Noise.ts","webpack://alien_mood/../src/filters/shaders/noise.ts","webpack://alien_mood/../src/filters/Pixelate.ts","webpack://alien_mood/../src/filters/shaders/pixelate.ts","webpack://alien_mood/../src/filters/RemoveColor.ts","webpack://alien_mood/../src/filters/shaders/removeColor.ts","webpack://alien_mood/../src/filters/Resize.ts","webpack://alien_mood/../src/filters/Saturation.ts","webpack://alien_mood/../src/filters/shaders/saturation.ts","webpack://alien_mood/../src/filters/Vibrance.ts","webpack://alien_mood/../src/filters/shaders/vibrance.ts","webpack://alien_mood/./node_modules/@firebase/util/dist/postinstall.mjs","webpack://alien_mood/../src/assert.ts","webpack://alien_mood/../src/crypt.ts","webpack://alien_mood/../src/deepCopy.ts","webpack://alien_mood/../src/global.ts","webpack://alien_mood/../src/defaults.ts","webpack://alien_mood/../src/deferred.ts","webpack://alien_mood/../src/url.ts","webpack://alien_mood/../src/emulator.ts","webpack://alien_mood/../src/environment.ts","webpack://alien_mood/../src/errors.ts","webpack://alien_mood/../src/json.ts","webpack://alien_mood/../src/jwt.ts","webpack://alien_mood/../src/obj.ts","webpack://alien_mood/../src/query.ts","webpack://alien_mood/../src/sha1.ts","webpack://alien_mood/../src/validation.ts","webpack://alien_mood/../src/utf8.ts","webpack://alien_mood/../src/compat.ts","webpack://alien_mood/../../src/component.ts","webpack://alien_mood/../../src/constants.ts","webpack://alien_mood/../../src/provider.ts","webpack://alien_mood/../../src/component_container.ts","webpack://alien_mood/../../src/logger.ts","webpack://alien_mood/./node_modules/idb/build/wrap-idb-value.js","webpack://alien_mood/./node_modules/idb/build/index.js","webpack://alien_mood/../../src/platformLoggerService.ts","webpack://alien_mood/../../src/internal.ts","webpack://alien_mood/../../src/errors.ts","webpack://alien_mood/../../src/firebaseApp.ts","webpack://alien_mood/../../src/api.ts","webpack://alien_mood/../../src/indexeddb.ts","webpack://alien_mood/../../src/heartbeatService.ts","webpack://alien_mood/../../src/registerCoreComponents.ts","webpack://alien_mood/../../src/index.ts","webpack://alien_mood/../../index.ts","webpack://alien_mood/../src/core/version.ts","webpack://alien_mood/../src/core/storage/DOMStorageWrapper.ts","webpack://alien_mood/../src/core/storage/MemoryStorage.ts","webpack://alien_mood/../src/core/storage/storage.ts","webpack://alien_mood/../src/core/util/util.ts","webpack://alien_mood/../src/core/AppCheckTokenProvider.ts","webpack://alien_mood/../src/core/AuthTokenProvider.ts","webpack://alien_mood/../src/realtime/Constants.ts","webpack://alien_mood/../src/core/RepoInfo.ts","webpack://alien_mood/../src/core/stats/StatsCollection.ts","webpack://alien_mood/../src/core/stats/StatsManager.ts","webpack://alien_mood/../src/realtime/polling/PacketReceiver.ts","webpack://alien_mood/../src/realtime/BrowserPollConnection.ts","webpack://alien_mood/../src/realtime/WebSocketConnection.ts","webpack://alien_mood/../src/realtime/TransportManager.ts","webpack://alien_mood/../src/realtime/Connection.ts","webpack://alien_mood/../src/core/ServerActions.ts","webpack://alien_mood/../src/core/util/EventEmitter.ts","webpack://alien_mood/../src/core/util/OnlineMonitor.ts","webpack://alien_mood/../src/core/util/Path.ts","webpack://alien_mood/../src/core/util/VisibilityMonitor.ts","webpack://alien_mood/../src/core/PersistentConnection.ts","webpack://alien_mood/../src/core/snap/Node.ts","webpack://alien_mood/../src/core/snap/indexes/Index.ts","webpack://alien_mood/../src/core/snap/indexes/KeyIndex.ts","webpack://alien_mood/../src/core/util/SortedMap.ts","webpack://alien_mood/../src/core/snap/comparators.ts","webpack://alien_mood/../src/core/snap/snap.ts","webpack://alien_mood/../src/core/snap/LeafNode.ts","webpack://alien_mood/../src/core/snap/indexes/PriorityIndex.ts","webpack://alien_mood/../src/core/snap/childSet.ts","webpack://alien_mood/../src/core/snap/IndexMap.ts","webpack://alien_mood/../src/core/snap/ChildrenNode.ts","webpack://alien_mood/../src/core/snap/nodeFromJSON.ts","webpack://alien_mood/../src/core/snap/indexes/PathIndex.ts","webpack://alien_mood/../src/core/snap/indexes/ValueIndex.ts","webpack://alien_mood/../src/core/view/Change.ts","webpack://alien_mood/../src/core/view/QueryParams.ts","webpack://alien_mood/../src/core/ReadonlyRestClient.ts","webpack://alien_mood/../src/core/SnapshotHolder.ts","webpack://alien_mood/../src/core/SparseSnapshotTree.ts","webpack://alien_mood/../src/core/stats/StatsListener.ts","webpack://alien_mood/../src/core/stats/StatsReporter.ts","webpack://alien_mood/../src/core/operation/Operation.ts","webpack://alien_mood/../src/core/operation/AckUserWrite.ts","webpack://alien_mood/../src/core/operation/Overwrite.ts","webpack://alien_mood/../src/core/operation/Merge.ts","webpack://alien_mood/../src/core/view/CacheNode.ts","webpack://alien_mood/../src/core/view/EventGenerator.ts","webpack://alien_mood/../src/core/view/ViewCache.ts","webpack://alien_mood/../src/core/util/ImmutableTree.ts","webpack://alien_mood/../src/core/CompoundWrite.ts","webpack://alien_mood/../src/core/WriteTree.ts","webpack://alien_mood/../src/core/view/ChildChangeAccumulator.ts","webpack://alien_mood/../src/core/view/CompleteChildSource.ts","webpack://alien_mood/../src/core/view/ViewProcessor.ts","webpack://alien_mood/../src/core/view/View.ts","webpack://alien_mood/../src/core/SyncPoint.ts","webpack://alien_mood/../src/core/SyncTree.ts","webpack://alien_mood/../src/core/util/ServerValues.ts","webpack://alien_mood/../src/core/util/Tree.ts","webpack://alien_mood/../src/core/util/validation.ts","webpack://alien_mood/../src/core/view/EventQueue.ts","webpack://alien_mood/../src/core/Repo.ts","webpack://alien_mood/../src/core/util/libs/parser.ts","webpack://alien_mood/../src/core/util/NextPushId.ts","webpack://alien_mood/../src/api/Reference_impl.ts","webpack://alien_mood/../src/api/Database.ts","webpack://alien_mood/../src/register.ts","webpack://alien_mood/../src/api/test_access.ts","webpack://alien_mood/../src/index.ts","webpack://alien_mood/./src/components/VisitorCounter.vue","webpack://alien_mood/./src/components/VisitorCounter.vue?3dd6","webpack://alien_mood/./src/components/TEST/TestFinal.vue","webpack://alien_mood/./src/components/TEST/TestFinal.vue?7557","webpack://alien_mood/./src/components/MainCanvas.vue","webpack://alien_mood/./src/components/MainCanvas.vue?f1ff","webpack://alien_mood/./src/components/CanvasUI.vue","webpack://alien_mood/./src/components/CanvasUI.vue?25bd","webpack://alien_mood/./src/views/GameRunner.vue?8c93","webpack://alien_mood/./node_modules/core-js/internals/normalize-string-argument.js","webpack://alien_mood/./node_modules/core-js/internals/inherit-if-required.js","webpack://alien_mood/./node_modules/core-js/modules/web.dom-exception.stack.js","webpack://alien_mood/./node_modules/core-js/internals/dom-exception-constants.js","webpack://alien_mood/./src/assets/image/ sync \\.(svg%7Cpng%7Cjpg)$","webpack://alien_mood/./node_modules/core-js/internals/error-stack-clear.js","webpack://alien_mood/./src/assets/image/ sync nonrecursive \\.png$"],"sourcesContent":["'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","<template>\n  <div ref=\"contentArea\" class=\"mobile-wrapper h-[full]\">\n    <!-- 탭 버튼 -->\n    <!-- <div style=\"display: flex; gap: 10px; margin-bottom: 20px\">\n      <button\n        v-for=\"(tab, index) in tabs\"\n        :key=\"index\"\n        @click=\"activeTab = index\"\n        :style=\"{\n          padding: '10px 20px',\n          backgroundColor: activeTab === index ? '#007BFF' : '#E0E0E0',\n          color: activeTab === index ? 'white' : 'black',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }\"\n      >\n        {{ tab.name }}\n      </button>\n    </div> -->\n\n    <!-- 탭 내용 -->\n    <!-- <div>\n      <div v-if=\"activeTab === 0\">\n        <h2>Konva</h2>\n        <TestKonva></TestKonva>\n      </div>\n      <div v-if=\"activeTab === 1\">\n        <h2>Fabric</h2>\n        <TestFabric></TestFabric>\n      </div>\n      <div v-if=\"activeTab === 2\">\n        <h2>삭제 테스트</h2>\n        <deleteTest></deleteTest>\n      </div>\n      <div v-if=\"activeTab === 3\">\n        <h2>점 테스트</h2>\n        <rotationTest></rotationTest>\n      </div>\n      <div v-if=\"activeTab === 1\">\n        <TestFinal></TestFinal>\n      </div>\n      <div v-if=\"activeTab === 0\"></div>\n    </div> -->\n    <CanvasUI ref=\"child\"></CanvasUI>\n    <!-- <MainCanvas ref=\"child\"></MainCanvas> -->\n  </div>\n</template>\n\n<script>\n// import TestKonva from \"@/components/TEST/TestKonva.vue\";\n// import TestFabric from \"@/components/TEST/TestFabric.vue\";\n// import deleteTest from \"@/components/TEST/deleteTest.vue\";\n// import rotationTest from \"@/components/TEST/rotationTest.vue\";\nimport TestFinal from \"@/components/TEST/TestFinal.vue\";\nimport MainCanvas from \"@/components/MainCanvas.vue\";\nimport CanvasUI from \"@/components/CanvasUI.vue\";\nexport default {\n  components: {\n    // TestKonva,\n    // TestFabric,\n    // deleteTest,\n    // rotationTest,\n    // TestFinal,\n    // MainCanvas,\n    CanvasUI,\n  },\n  data() {\n    return {\n      activeTab: 0, // 현재 활성화된 탭 (0부터 시작)\n      tabs: [\n        // { name: \"Konva\" },\n        // { name: \"Fabric\" },\n        // { name: \"추가 삭제\" },\n        // { name: \"삭제 회전 크기\" },\n        // { name: \"메인\" },\n        // { name: \"최종 테스트\" },\n      ],\n      vhRaf: null,\n      lastVh: 0,\n    };\n  },\n  mounted() {\n    this.setRealViewportHeight();\n    window.addEventListener(\"resize\", this.setRealViewportHeight);\n    window.addEventListener(\"orientationchange\", this.setRealViewportHeight);\n    window.addEventListener(\"scroll\", this.setRealViewportHeight, {\n      passive: true,\n    });\n    this.startVhPolling();\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"resize\", this.setRealViewportHeight);\n    window.removeEventListener(\"orientationchange\", this.setRealViewportHeight);\n    window.removeEventListener(\"scroll\", this.setRealViewportHeight);\n    cancelAnimationFrame(this.vhRaf);\n  },\n  methods: {\n    setRealViewportHeight() {\n      const vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n      const content = this.$refs.contentArea;\n      if (content) {\n        content.style.height = `calc(var(--vh, 1vh) * 100)`;\n      }\n      this.lastVh = vh;\n    },\n    startVhPolling() {\n      const check = () => {\n        const vh = window.innerHeight * 0.01;\n        if (vh !== this.lastVh) {\n          this.setRealViewportHeight();\n        }\n        this.vhRaf = requestAnimationFrame(check);\n      };\n      this.vhRaf = requestAnimationFrame(check);\n    },\n  },\n};\n</script>\n\n<style></style>\n","export type TConfiguration = Partial<BaseConfiguration>;\n\nclass BaseConfiguration {\n  /**\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n   * which is unitless and not rendered equally across browsers.\n   *\n   * Values that work quite well (as of October 2017) are:\n   * - Chrome: 1.5\n   * - Edge: 1.75\n   * - Firefox: 0.9\n   * - Safari: 0.95\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default 1\n   */\n  browserShadowBlurConstant = 1;\n\n  /**\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n   */\n  DPI = 96;\n\n  /**\n   * Device Pixel Ratio\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   */\n  devicePixelRatio =\n    typeof window !== 'undefined' ? window.devicePixelRatio : 1; // eslint-disable-line no-restricted-globals\n\n  /**\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  perfLimitSizeTotal = 2097152;\n\n  /**\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  maxCacheSideLimit = 4096;\n\n  /**\n   * Lowest pixel limit for cache canvases, set at 256PX\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  minCacheSideLimit = 256;\n\n  /**\n   * When 'true', style information is not retained when copy/pasting text, making\n   * pasted text use destination style.\n   * Defaults to 'false'.\n   * @type Boolean\n   * @default\n   * @deprecated\n   */\n  disableStyleCopyPaste = false;\n\n  /**\n   * Enable webgl for filtering picture is available\n   * A filtering backend will be initialized, this will both take memory and\n   * time since a default 2048x2048 canvas will be created for the gl context\n   * @since 2.0.0\n   * @type Boolean\n   * @default\n   */\n  enableGLFiltering = true;\n\n  /**\n   * if webgl is enabled and available, textureSize will determine the size\n   * of the canvas backend\n   *\n   * In order to support old hardware set to `2048` to avoid OOM\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  textureSize = 4096;\n\n  /**\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\n   * @type Boolean\n   * @default false\n   */\n  forceGLPutImageData = false;\n\n  /**\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n   * With the standard behaviour of fabric to translate all curves in absolute commands and by not subtracting the starting point from\n   * the curve is very hard to hit any cache.\n   * Enable only if you know why it could be useful.\n   * Candidate for removal/simplification\n   * @default false\n   */\n  cachesBoundsOfCurve = false;\n\n  /**\n   * Map of font files\n   * Map<fontFamily, pathToFile> of font files\n   */\n  fontPaths: Record</** fontFamily */ string, /** pathToFile */ string> = {};\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * Used in exporting methods (`toObject`, `toJSON`, `toSVG`)\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   */\n  NUM_FRACTION_DIGITS = 4;\n}\n\nexport class Configuration extends BaseConfiguration {\n  constructor(config?: TConfiguration) {\n    super();\n    this.configure(config);\n  }\n\n  configure(config: TConfiguration = {}) {\n    Object.assign(this, config);\n  }\n\n  /**\n   * Map<fontFamily, pathToFile> of font files\n   */\n  addFonts(\n    paths: Record</** fontFamily */ string, /** pathToFile */ string> = {},\n  ) {\n    this.fontPaths = {\n      ...this.fontPaths,\n      ...paths,\n    };\n  }\n\n  removeFonts(fontFamilys: string[] = []) {\n    fontFamilys.forEach((fontFamily) => {\n      delete this.fontPaths[fontFamily];\n    });\n  }\n\n  clearFonts() {\n    this.fontPaths = {};\n  }\n\n  restoreDefaults<T extends BaseConfiguration>(keys?: (keyof T)[]) {\n    const defaults = new BaseConfiguration() as T;\n    const config =\n      keys?.reduce((acc, key) => {\n        acc[key] = defaults[key];\n        return acc;\n      }, {} as T) || defaults;\n    this.configure(config);\n  }\n}\n\nexport const config = new Configuration();\n","export const log = (\n  severity: 'log' | 'warn' | 'error',\n  ...optionalParams: any[]\n) =>\n  // eslint-disable-next-line no-restricted-syntax\n  console[severity]('fabric', ...optionalParams);\n\nexport class FabricError extends Error {\n  constructor(message?: string, options?: ErrorOptions) {\n    super(`fabric: ${message}`, options);\n  }\n}\n\nexport class SignalAbortedError extends FabricError {\n  constructor(context: string) {\n    super(`${context} 'options.signal' is in 'aborted' state`);\n  }\n}\n","export type GLPrecision = 'lowp' | 'mediump' | 'highp';\n\nexport abstract class GLProbe {\n  declare GLPrecision: GLPrecision | undefined;\n  abstract queryWebGL(canvas: HTMLCanvasElement): void;\n  abstract isSupported(textureSize: number): boolean;\n}\n","import { log } from '../../util/internals/console';\nimport { GLProbe } from './GLProbe';\nimport type { GLPrecision } from './GLProbe';\n\n/**\n * Lazy initialize WebGL constants\n */\nexport class WebGLProbe extends GLProbe {\n  declare maxTextureSize?: number;\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {GLPrecision} Precision to test can be any of following\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  private testPrecision(\n    gl: WebGLRenderingContext,\n    precision: GLPrecision,\n  ): boolean {\n    const fragmentSource = `precision ${precision} float;\\nvoid main(){}`;\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    if (!fragmentShader) {\n      return false;\n    }\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    return !!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS);\n  }\n\n  /**\n   * query browser for WebGL\n   */\n  queryWebGL(canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl');\n    if (gl) {\n      this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      this.GLPrecision = (['highp', 'mediump', 'lowp'] as const).find(\n        (precision) => this.testPrecision(gl, precision),\n      );\n      gl.getExtension('WEBGL_lose_context')!.loseContext();\n      log('log', `WebGL: max texture size ${this.maxTextureSize}`);\n    }\n  }\n\n  isSupported(textureSize: number) {\n    return !!this.maxTextureSize && this.maxTextureSize >= textureSize;\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport { WebGLProbe } from '../filters/GLProbes/WebGLProbe';\nimport type { TCopyPasteData, TFabricEnv } from './types';\n\nconst copyPasteData: TCopyPasteData = {};\n\nexport const getEnv = (): TFabricEnv => {\n  return {\n    document,\n    window,\n    isTouchSupported:\n      'ontouchstart' in window ||\n      'ontouchstart' in document ||\n      (window && window.navigator && window.navigator.maxTouchPoints > 0),\n    WebGLProbe: new WebGLProbe(),\n    dispose() {\n      // noop\n    },\n    copyPasteData,\n  };\n};\n","/**\n * This file is consumed by fabric.\n * The `./node` and `./browser` files define the env variable that is used by this module.\n * The `./browser` module is defined to be the default env and doesn't set the env at all.\n * This is done in order to support isomorphic usage for browser and node applications\n * since window and document aren't defined at time of import in SSR, we can't set env so we avoid it by deferring to the default env.\n */\n\nimport { config } from '../config';\nimport { getEnv as getBrowserEnv } from './browser';\nimport type { TFabricEnv } from './types';\nimport type { DOMWindow } from 'jsdom';\n\nlet env: TFabricEnv;\n\n/**\n * Sets the environment variables used by fabric.\\\n * This is exposed for special cases, such as configuring a test environment, and should be used with care.\n *\n * **CAUTION**: Must be called before using the package.\n *\n * @example\n * <caption>Passing `window` and `document` objects to fabric (in case they are mocked or something)</caption>\n * import { getEnv, setEnv } from 'fabric';\n * // we want fabric to use the `window` and `document` objects exposed by the environment we are running in.\n * setEnv({ ...getEnv(), window, document });\n * // done with setup, using fabric is now safe\n */\nexport const setEnv = (value: TFabricEnv) => {\n  env = value;\n};\n\n/**\n * In order to support SSR we **MUST** access the browser env only after the window has loaded\n */\nexport const getEnv = () => env || (env = getBrowserEnv());\n\nexport const getFabricDocument = (): Document => getEnv().document;\n\nexport const getFabricWindow = (): (Window & typeof globalThis) | DOMWindow =>\n  getEnv().window;\n\n/**\n * @returns the config value if defined, fallbacks to the environment value\n */\nexport const getDevicePixelRatio = () =>\n  Math.max(config.devicePixelRatio ?? getFabricWindow().devicePixelRatio, 1);\n","import { config } from './config';\nimport type { TRectBounds } from './typedefs';\n\nexport class Cache {\n  /**\n   * Cache of widths of chars in text rendering.\n   */\n  charWidthsCache: Record<\n    /** fontFamily */ string,\n    Record<\n      /** fontStyleCacheKey */ string,\n      Record</** char */ string, /** width */ number>\n    >\n  > = {};\n\n  /**\n   * @return {Object} reference to cache\n   */\n  getFontCache({\n    fontFamily,\n    fontStyle,\n    fontWeight,\n  }: {\n    fontFamily: string;\n    fontStyle: string;\n    fontWeight: string | number;\n  }) {\n    fontFamily = fontFamily.toLowerCase();\n    if (!this.charWidthsCache[fontFamily]) {\n      this.charWidthsCache[fontFamily] = {};\n    }\n    const fontCache = this.charWidthsCache[fontFamily];\n    const cacheKey = `${fontStyle.toLowerCase()}_${(\n      fontWeight + ''\n    ).toLowerCase()}`;\n    if (!fontCache[cacheKey]) {\n      fontCache[cacheKey] = {};\n    }\n    return fontCache[cacheKey];\n  }\n\n  /**\n   * Clear char widths cache for the given font family or all the cache if no\n   * fontFamily is specified.\n   * Use it if you know you are loading fonts in a lazy way and you are not waiting\n   * for custom fonts to load properly when adding text objects to the canvas.\n   * If a text object is added when its own font is not loaded yet, you will get wrong\n   * measurement and so wrong bounding boxes.\n   * After the font cache is cleared, either change the textObject text content or call\n   * initDimensions() to trigger a recalculation\n   * @param {String} [fontFamily] font family to clear\n   */\n  clearFontCache(fontFamily?: string) {\n    fontFamily = (fontFamily || '').toLowerCase();\n    if (!fontFamily) {\n      this.charWidthsCache = {};\n    } else if (this.charWidthsCache[fontFamily]) {\n      delete this.charWidthsCache[fontFamily];\n    }\n  }\n\n  /**\n   * Given current aspect ratio, determines the max width and height that can\n   * respect the total allowed area for the cache.\n   * @param {number} ar aspect ratio\n   * @return {number[]} Limited dimensions X and Y\n   */\n  limitDimsByArea(ar: number) {\n    const { perfLimitSizeTotal } = config;\n    const roughWidth = Math.sqrt(perfLimitSizeTotal * ar);\n    // we are not returning a point on purpose, to avoid circular dependencies\n    // this is an internal utility\n    return [\n      Math.floor(roughWidth),\n      Math.floor(perfLimitSizeTotal / roughWidth),\n    ];\n  }\n\n  /**\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n   * you do not get any speed benefit and you get a big object in memory.\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n   * can eventually clear it.\n   * It was an internal variable, is accessible since version 2.3.4\n   */\n  boundsOfCurveCache: Record<string, TRectBounds> = {};\n}\n\nexport const cache = new Cache();\n","import type { TMat2D } from './typedefs';\n// use this syntax so babel plugin see this import here\nimport { version } from '../package.json';\n\nexport const VERSION = version;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const halfPI = Math.PI / 2;\nexport const twoMathPi = Math.PI * 2;\nexport const PiBy180 = Math.PI / 180;\n\nexport const iMatrix = Object.freeze([1, 0, 0, 1, 0, 0]) as TMat2D;\nexport const DEFAULT_SVG_FONT_SIZE = 16;\nexport const ALIASING_LIMIT = 2;\n\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\nexport const kRect = 1 - 0.5522847498;\n\nexport const CENTER = 'center';\nexport const LEFT = 'left';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const RIGHT = 'right';\nexport const NONE = 'none';\n\nexport const reNewline = /\\r?\\n/;\n\nexport const MOVING = 'moving';\nexport const SCALING = 'scaling';\nexport const ROTATING = 'rotating';\nexport const ROTATE = 'rotate';\nexport const SKEWING = 'skewing';\nexport const RESIZING = 'resizing';\nexport const MODIFY_POLY = 'modifyPoly';\nexport const MODIFY_PATH = 'modifyPath';\nexport const CHANGED = 'changed';\nexport const SCALE = 'scale';\nexport const SCALE_X = 'scaleX';\nexport const SCALE_Y = 'scaleY';\nexport const SKEW_X = 'skewX';\nexport const SKEW_Y = 'skewY';\nexport const FILL = 'fill';\nexport const STROKE = 'stroke';\nexport const MODIFIED = 'modified';\n","import { FabricError } from './util/internals/console';\n\n/*\n * This Map connects the objects type value with their\n * class implementation. It used from any object to understand which are\n * the classes to enlive when requesting a object.type = 'path' for example.\n * Objects uses it for clipPath, Canvas uses it for everything.\n * This is necessary for generic code to run and enlive instances from serialized representation.\n * You can customize which classes get enlived from SVG parsing using this classRegistry.\n * The Registry start empty and gets filled in depending which files you import.\n * If you want to be able to parse arbitrary SVGs or JSON representation of canvases, coming from\n * different sources you will need to import all fabric because you may need all classes.\n */\n\nexport const JSON = 'json';\nexport const SVG = 'svg';\n\nexport class ClassRegistry {\n  declare [JSON]: Map<string, any>;\n  declare [SVG]: Map<string, any>;\n\n  constructor() {\n    this[JSON] = new Map();\n    this[SVG] = new Map();\n  }\n\n  has(classType: string): boolean {\n    return this[JSON].has(classType);\n  }\n\n  getClass<T>(classType: string): T {\n    const constructor = this[JSON].get(classType);\n    if (!constructor) {\n      throw new FabricError(`No class registered for ${classType}`);\n    }\n    return constructor;\n  }\n\n  setClass(classConstructor: any, classType?: string) {\n    if (classType) {\n      this[JSON].set(classType, classConstructor);\n    } else {\n      this[JSON].set(classConstructor.type, classConstructor);\n      // legacy\n      // @TODO: needs to be removed in fabric 7 or 8\n      this[JSON].set(classConstructor.type.toLowerCase(), classConstructor);\n    }\n  }\n\n  getSVGClass(SVGTagName: string): any {\n    return this[SVG].get(SVGTagName);\n  }\n\n  setSVGClass(classConstructor: any, SVGTagName?: string) {\n    this[SVG].set(\n      SVGTagName ?? classConstructor.type.toLowerCase(),\n      classConstructor,\n    );\n  }\n}\n\nexport const classRegistry = new ClassRegistry();\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type { AnimationBase } from './AnimationBase';\n\n/**\n * Array holding all running animations\n */\nclass AnimationRegistry extends Array<AnimationBase> {\n  /**\n   * Remove a single animation using an animation context\n   * @param {AnimationBase} context\n   */\n  remove(context: AnimationBase) {\n    const index = this.indexOf(context);\n    index > -1 && this.splice(index, 1);\n  }\n\n  /**\n   * Cancel all running animations on the next frame\n   */\n  cancelAll() {\n    const animations = this.splice(0);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations attached to a canvas on the next frame\n   * @param {StaticCanvas} canvas\n   */\n  cancelByCanvas(canvas: StaticCanvas) {\n    if (!canvas) {\n      return [];\n    }\n    const animations = this.filter(\n      (animation) =>\n        animation.target === canvas ||\n        (typeof animation.target === 'object' &&\n          (animation.target as FabricObject)?.canvas === canvas),\n    );\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations for target on the next frame\n   * @param target\n   */\n  cancelByTarget(target: AnimationBase['target']) {\n    if (!target) {\n      return [];\n    }\n    const animations = this.filter((animation) => animation.target === target);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n}\n\nexport const runningAnimations = new AnimationRegistry();\n","export type TEventCallback<T = any> = (options: T) => any;\n\ntype EventRegistryObject<E> = {\n  [K in keyof E]?: TEventCallback<E[K]>;\n};\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n * @see {@link http://fabricjs.com/events|Events demo}\n */\nexport class Observable<EventSpec> {\n  private __eventListeners: Record<keyof EventSpec, TEventCallback[]> =\n    {} as Record<keyof EventSpec, TEventCallback[]>;\n\n  /**\n   * Observes specified event\n   * @alias on\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  on(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {} as Record<keyof EventSpec, TEventCallback[]>;\n    }\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this.on(eventName as K, handler as TEventCallback);\n      });\n      return () => this.off(arg0);\n    } else if (handler) {\n      const eventName = arg0;\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n      return () => this.off(eventName, handler);\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * Observes specified event **once**\n   * @alias once\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  once(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      const disposers: VoidFunction[] = [];\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        disposers.push(this.once(eventName as K, handler as TEventCallback));\n      });\n      return () => disposers.forEach((d) => d());\n    } else if (handler) {\n      const disposer = this.on<K, E>(\n        arg0,\n        function onceHandler(this: Observable<EventSpec>, ...args) {\n          handler.call(this, ...args);\n          disposer();\n        },\n      );\n      return disposer;\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} eventName\n   * @param {Function} [handler]\n   */\n  private _removeEventListener<K extends keyof EventSpec>(\n    eventName: K,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    if (handler) {\n      const eventListener = this.__eventListeners[eventName];\n      const index = eventListener.indexOf(handler);\n      index > -1 && eventListener.splice(index, 1);\n    } else {\n      this.__eventListeners[eventName] = [];\n    }\n  }\n\n  /**\n   * Unsubscribe all event listeners for eventname.\n   * Do not use this pattern. You could kill internal fabricJS events.\n   * We know we should have protected events for internal flows, but we don't have yet\n   * @deprecated\n   * @param {string} eventName event name (eg. 'after:render')\n   */\n  off<K extends keyof EventSpec>(eventName: K): void;\n  /**\n   * unsubscribe an event listener\n   * @param {string} eventName event name (eg. 'after:render')\n   * @param {TEventCallback} handler event listener to unsubscribe\n   */\n  off<K extends keyof EventSpec>(eventName: K, handler: TEventCallback): void;\n  /**\n   * unsubscribe event listeners\n   * @param handlers handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   */\n  off(handlers: EventRegistryObject<EventSpec>): void;\n  /**\n   * unsubscribe all event listeners\n   */\n  off(): void;\n  off<K extends keyof EventSpec>(\n    arg0?: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (typeof arg0 === 'undefined') {\n      for (const eventName in this.__eventListeners) {\n        this._removeEventListener(eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (typeof arg0 === 'object') {\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this._removeEventListener(eventName as K, handler as TEventCallback);\n      });\n    } else {\n      this._removeEventListener(arg0, handler);\n    }\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   */\n  fire<K extends keyof EventSpec>(eventName: K, options?: EventSpec[K]) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    const listenersForEvent = this.__eventListeners[eventName]?.concat();\n    if (listenersForEvent) {\n      for (let i = 0; i < listenersForEvent.length; i++) {\n        listenersForEvent[i].call(this, options || {});\n      }\n    }\n  }\n}\n","/**\n * Removes value from an array.\n * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n * @param {Array} array\n * @param {*} value\n * @return {Array} original array\n */\nexport const removeFromArray = <T>(array: T[], value: T): T[] => {\n  const idx = array.indexOf(value);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n  return array;\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the cosin value for angle.\n */\nexport const cos = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 1;\n  }\n  const angleSlice = Math.abs(angle) / halfPI;\n  switch (angleSlice) {\n    case 1:\n    case 3:\n      return 0;\n    case 2:\n      return -1;\n  }\n  return Math.cos(angle);\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the sin value for angle.\n */\nexport const sin = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 0;\n  }\n  const angleSlice = angle / halfPI;\n  const value = Math.sign(angle);\n  switch (angleSlice) {\n    case 1:\n      return value;\n    case 2:\n      return 0;\n    case 3:\n      return -value;\n  }\n  return Math.sin(angle);\n};\n","import type { TMat2D, TRadian } from './typedefs';\nimport { cos } from './util/misc/cos';\nimport { sin } from './util/misc/sin';\n\nexport interface XY {\n  x: number;\n  y: number;\n}\n\n/**\n * Adaptation of work of Kevin Lindsey(kevin@kevlindev.com)\n */\nexport class Point implements XY {\n  declare x: number;\n\n  declare y: number;\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(point?: XY);\n  constructor(arg0: number | XY = 0, y = 0) {\n    if (typeof arg0 === 'object') {\n      this.x = arg0.x;\n      this.y = arg0.y;\n    } else {\n      this.x = arg0;\n      this.y = y;\n    }\n  }\n\n  /**\n   * Adds another point to this one and returns another one\n   * @param {XY} that\n   * @return {Point} new Point instance with added values\n   */\n  add(that: XY): Point {\n    return new Point(this.x + that.x, this.y + that.y);\n  }\n\n  /**\n   * Adds another point to this one\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  addEquals(that: XY): Point {\n    this.x += that.x;\n    this.y += that.y;\n    return this;\n  }\n\n  /**\n   * Adds value to this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point} new Point with added value\n   */\n  scalarAdd(scalar: number): Point {\n    return new Point(this.x + scalar, this.y + scalar);\n  }\n\n  /**\n   * Adds value to this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarAddEquals(scalar: number): Point {\n    this.x += scalar;\n    this.y += scalar;\n    return this;\n  }\n\n  /**\n   * Subtracts another point from this point and returns a new one\n   * @param {XY} that\n   * @return {Point} new Point object with subtracted values\n   */\n  subtract(that: XY): Point {\n    return new Point(this.x - that.x, this.y - that.y);\n  }\n\n  /**\n   * Subtracts another point from this point\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  subtractEquals(that: XY): Point {\n    this.x -= that.x;\n    this.y -= that.y;\n    return this;\n  }\n\n  /**\n   * Subtracts value from this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarSubtract(scalar: number): Point {\n    return new Point(this.x - scalar, this.y - scalar);\n  }\n\n  /**\n   * Subtracts value from this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarSubtractEquals(scalar: number): Point {\n    this.x -= scalar;\n    this.y -= scalar;\n    return this;\n  }\n\n  /**\n   * Multiplies this point by another value and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  multiply(that: XY): Point {\n    return new Point(this.x * that.x, this.y * that.y);\n  }\n\n  /**\n   * Multiplies this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarMultiply(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Multiplies this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarMultiplyEquals(scalar: number): Point {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  /**\n   * Divides this point by another and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  divide(that: XY): Point {\n    return new Point(this.x / that.x, this.y / that.y);\n  }\n\n  /**\n   * Divides this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarDivide(scalar: number): Point {\n    return new Point(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Divides this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarDivideEquals(scalar: number): Point {\n    this.x /= scalar;\n    this.y /= scalar;\n    return this;\n  }\n\n  /**\n   * Returns true if this point is equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  eq(that: XY): boolean {\n    return this.x === that.x && this.y === that.y;\n  }\n\n  /**\n   * Returns true if this point is less than another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lt(that: XY): boolean {\n    return this.x < that.x && this.y < that.y;\n  }\n\n  /**\n   * Returns true if this point is less than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lte(that: XY): boolean {\n    return this.x <= that.x && this.y <= that.y;\n  }\n\n  /**\n\n   * Returns true if this point is greater another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gt(that: XY): boolean {\n    return this.x > that.x && this.y > that.y;\n  }\n\n  /**\n   * Returns true if this point is greater than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gte(that: XY): boolean {\n    return this.x >= that.x && this.y >= that.y;\n  }\n\n  /**\n   * Returns new point which is the result of linear interpolation with this one and another one\n   * @param {XY} that\n   * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n   * @return {Point}\n   */\n  lerp(that: XY, t = 0.5): Point {\n    t = Math.max(Math.min(1, t), 0);\n    return new Point(\n      this.x + (that.x - this.x) * t,\n      this.y + (that.y - this.y) * t,\n    );\n  }\n\n  /**\n   * Returns distance from this point and another one\n   * @param {XY} that\n   * @return {Number}\n   */\n  distanceFrom(that: XY): number {\n    const dx = this.x - that.x,\n      dy = this.y - that.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Returns the point between this point and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  midPointFrom(that: XY): Point {\n    return this.lerp(that);\n  }\n\n  /**\n   * Returns a new point which is the min of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  min(that: XY): Point {\n    return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n  }\n\n  /**\n   * Returns a new point which is the max of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  max(that: XY): Point {\n    return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n  }\n\n  /**\n   * Returns string representation of this point\n   * @return {String}\n   */\n  toString(): string {\n    return `${this.x},${this.y}`;\n  }\n\n  /**\n   * Sets x/y of this point\n   * @param {Number} x\n   * @param {Number} y\n   * @chainable\n   */\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x of this point\n   * @param {Number} x\n   * @chainable\n   */\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Sets y of this point\n   * @param {Number} y\n   * @chainable\n   */\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x/y of this point from another point\n   * @param {XY} that\n   * @chainable\n   */\n  setFromPoint(that: XY) {\n    this.x = that.x;\n    this.y = that.y;\n    return this;\n  }\n\n  /**\n   * Swaps x/y of this point and another point\n   * @param {XY} that\n   */\n  swap(that: XY) {\n    const x = this.x,\n      y = this.y;\n    this.x = that.x;\n    this.y = that.y;\n    that.x = x;\n    that.y = y;\n  }\n\n  /**\n   * return a cloned instance of the point\n   * @return {Point}\n   */\n  clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Rotates `point` around `origin` with `radians`\n   * @static\n   * @memberOf fabric.util\n   * @param {XY} origin The origin of the rotation\n   * @param {TRadian} radians The radians of the angle for the rotation\n   * @return {Point} The new rotated point\n   */\n  rotate(radians: TRadian, origin: XY = ZERO): Point {\n    // TODO benchmark and verify the add and subtract how much cost\n    // and then in case early return if no origin is passed\n    const sinus = sin(radians),\n      cosinus = cos(radians);\n    const p = this.subtract(origin);\n    const rotated = new Point(\n      p.x * cosinus - p.y * sinus,\n      p.x * sinus + p.y * cosinus,\n    );\n    return rotated.add(origin);\n  }\n\n  /**\n   * Apply transform t to point p\n   * @static\n   * @memberOf fabric.util\n   * @param  {TMat2D} t The transform\n   * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n   * @return {Point} The transformed point\n   */\n  transform(t: TMat2D, ignoreOffset = false): Point {\n    return new Point(\n      t[0] * this.x + t[2] * this.y + (ignoreOffset ? 0 : t[4]),\n      t[1] * this.x + t[3] * this.y + (ignoreOffset ? 0 : t[5]),\n    );\n  }\n}\n\nexport const ZERO = new Point(0, 0);\n","import type { Constructor, TBBox } from './typedefs';\nimport { removeFromArray } from './util/internals/removeFromArray';\nimport { Point } from './Point';\nimport type { ActiveSelection } from './shapes/ActiveSelection';\nimport type { Group } from './shapes/Group';\nimport type { InteractiveFabricObject } from './shapes/Object/InteractiveObject';\nimport type { FabricObject } from './shapes/Object/FabricObject';\n\nexport const isCollection = (\n  fabricObject?: FabricObject,\n): fabricObject is Group | ActiveSelection => {\n  return !!fabricObject && Array.isArray((fabricObject as Group)._objects);\n};\n\nexport function createCollectionMixin<TBase extends Constructor>(Base: TBase) {\n  class Collection extends Base {\n    /**\n     * @type {FabricObject[]}\n     * @TODO needs to end up in the constructor too\n     */\n    _objects: FabricObject[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectAdded(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectRemoved(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onStackOrderChanged(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    /**\n     * Adds objects to collection\n     * Objects should be instances of (or inherit from) FabricObject\n     * @param {...FabricObject[]} objects to add\n     * @returns {number} new array length\n     */\n    add(...objects: FabricObject[]): number {\n      const size = this._objects.push(...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return size;\n    }\n\n    /**\n     * Inserts an object into collection at specified index\n     * @param {number} index Index to insert object at\n     * @param {...FabricObject[]} objects Object(s) to insert\n     * @returns {number} new array length\n     */\n    insertAt(index: number, ...objects: FabricObject[]) {\n      this._objects.splice(index, 0, ...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return this._objects.length;\n    }\n\n    /**\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n     * @private\n     * @param {...FabricObject[]} objects objects to remove\n     * @returns {FabricObject[]} removed objects\n     */\n    remove(...objects: FabricObject[]) {\n      const array = this._objects,\n        removed: FabricObject[] = [];\n      objects.forEach((object) => {\n        const index = array.indexOf(object);\n        // only call onObjectRemoved if an object was actually removed\n        if (index !== -1) {\n          array.splice(index, 1);\n          removed.push(object);\n          this._onObjectRemoved(object);\n        }\n      });\n      return removed;\n    }\n\n    /**\n     * Executes given function for each object in this group\n     * A simple shortcut for getObjects().forEach, before es6 was more complicated,\n     * now is just a shortcut.\n     * @param {Function} callback\n     *                   Callback invoked with current object as first argument,\n     *                   index - as second and an array of all objects - as third.\n     */\n    forEachObject(\n      callback: (\n        object: FabricObject,\n        index: number,\n        array: FabricObject[],\n      ) => any,\n    ) {\n      this.getObjects().forEach((object, index, objects) =>\n        callback(object, index, objects),\n      );\n    }\n\n    /**\n     * Returns an array of children objects of this instance\n     * @param {...String} [types] When specified, only objects of these types are returned\n     * @return {Array}\n     */\n    getObjects(...types: string[]) {\n      if (types.length === 0) {\n        return [...this._objects];\n      }\n      return this._objects.filter((o) => o.isType(...types));\n    }\n\n    /**\n     * Returns object at specified index\n     * @param {Number} index\n     * @return {Object} object at index\n     */\n    item(index: number) {\n      return this._objects[index];\n    }\n\n    /**\n     * Returns true if collection contains no objects\n     * @return {Boolean} true if collection is empty\n     */\n    isEmpty() {\n      return this._objects.length === 0;\n    }\n\n    /**\n     * Returns a size of a collection (i.e: length of an array containing its objects)\n     * @return {Number} Collection size\n     */\n    size() {\n      return this._objects.length;\n    }\n\n    /**\n     * Returns true if collection contains an object.\\\n     * **Prefer using {@link FabricObject#isDescendantOf} for performance reasons**\n     * instead of `a.contains(b)` use `b.isDescendantOf(a)`\n     * @param {Object} object Object to check against\n     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n     * @return {Boolean} `true` if collection contains an object\n     */\n    contains(object: FabricObject, deep?: boolean): boolean {\n      if (this._objects.includes(object)) {\n        return true;\n      } else if (deep) {\n        return this._objects.some(\n          (obj) =>\n            obj instanceof Collection &&\n            (obj as unknown as Collection).contains(object, true),\n        );\n      }\n      return false;\n    }\n\n    /**\n     * Returns number representation of a collection complexity\n     * @return {Number} complexity\n     */\n    complexity() {\n      return this._objects.reduce((memo, current) => {\n        memo += current.complexity ? current.complexity() : 0;\n        return memo;\n      }, 0);\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectToBack(object: FabricObject) {\n      if (!object || object === this._objects[0]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.unshift(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectToFront(object: FabricObject) {\n      if (!object || object === this._objects[this._objects.length - 1]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.push(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, `intersecting` allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectBackwards(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== 0) {\n        // if object is not on the bottom of stack\n        const newIdx = this.findNewLowerIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectForward(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== this._objects.length - 1) {\n        // if object is not on top of stack (last item in an array)\n        const newIdx = this.findNewUpperIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {number} index Position to move to\n     * @returns {boolean} true if change occurred\n     */\n    moveObjectTo(object: FabricObject, index: number) {\n      if (object === this._objects[index]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    findNewLowerIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse down the stack looking for the nearest intersecting object\n        for (let i = idx - 1; i >= 0; --i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    }\n\n    findNewUpperIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse up the stack looking for the nearest intersecting object\n        for (let i = idx + 1; i < this._objects.length; ++i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    }\n\n    /**\n     * Given a bounding box, return all the objects of the collection that are contained in the bounding box.\n     * If `includeIntersecting` is true, return also the objects that intersect the bounding box as well.\n     * This is meant to work with selection. Is not a generic method.\n     * @param {TBBox} bbox a bounding box in scene coordinates\n     * @param {{ includeIntersecting?: boolean }} options an object with includeIntersecting\n     * @returns array of objects contained in the bounding box, ordered from top to bottom stacking wise\n     */\n    collectObjects(\n      { left, top, width, height }: TBBox,\n      { includeIntersecting = true }: { includeIntersecting?: boolean } = {},\n    ) {\n      const objects: InteractiveFabricObject[] = [],\n        tl = new Point(left, top),\n        br = tl.add(new Point(width, height));\n\n      // we iterate reverse order to collect top first in case of click.\n      for (let i = this._objects.length - 1; i >= 0; i--) {\n        const object = this._objects[i] as unknown as InteractiveFabricObject;\n        if (\n          object.selectable &&\n          object.visible &&\n          ((includeIntersecting && object.intersectsWithRect(tl, br)) ||\n            object.isContainedWithinRect(tl, br) ||\n            (includeIntersecting && object.containsPoint(tl)) ||\n            (includeIntersecting && object.containsPoint(br)))\n        ) {\n          objects.push(object);\n        }\n      }\n\n      return objects;\n    }\n  }\n\n  // https://github.com/microsoft/TypeScript/issues/32080\n  return Collection as typeof Collection & TBase;\n}\n","import { Observable } from './Observable';\n\nexport class CommonMethods<EventSpec> extends Observable<EventSpec> {\n  /**\n   * Sets object's properties from options, for initialization only\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected _setOptions(options: any = {}) {\n    for (const prop in options) {\n      this.set(prop, options[prop]);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setObject(obj: Record<string, any>) {\n    for (const prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  }\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   */\n  set(key: string | Record<string, any>, value?: any) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      this._set(key, value);\n    }\n    return this;\n  }\n\n  _set(key: string, value: any) {\n    this[key as keyof this] = value;\n  }\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   */\n  toggle(property: string) {\n    const value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  }\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get(property: string): any {\n    return this[property as keyof this];\n  }\n}\n","import { getFabricWindow } from '../../env';\n\nexport function requestAnimFrame(callback: FrameRequestCallback): number {\n  return getFabricWindow().requestAnimationFrame(callback);\n}\n\nexport function cancelAnimFrame(handle: number): void {\n  return getFabricWindow().cancelAnimationFrame(handle);\n}\n","let id = 0;\n\nexport const uid = () => id++;\n","import { getFabricDocument } from '../../env';\nimport type { ImageFormat, TSize } from '../../typedefs';\nimport { FabricError } from '../internals/console';\n/**\n * Creates canvas element\n * @return {CanvasElement} initialized canvas element\n */\nexport const createCanvasElement = (): HTMLCanvasElement => {\n  const element = getFabricDocument().createElement('canvas');\n  if (!element || typeof element.getContext === 'undefined') {\n    throw new FabricError('Failed to create `canvas` element');\n  }\n  return element;\n};\n\n/**\n * Creates image element (works on client and node)\n * @return {HTMLImageElement} HTML image element\n */\nexport const createImage = (): HTMLImageElement =>\n  getFabricDocument().createElement('img');\n\n/**\n * Creates a canvas element that is a copy of another and is also painted\n * @param {CanvasElement} canvas to copy size and content of\n * @return {CanvasElement} initialized canvas element\n */\nexport const copyCanvasElement = (\n  canvas: HTMLCanvasElement,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElementFor(canvas);\n  newCanvas.getContext('2d')?.drawImage(canvas, 0, 0);\n  return newCanvas;\n};\n\n/**\n * Creates a canvas element as big as another\n * @param {CanvasElement} canvas to copy size and content of\n * @return {CanvasElement} initialized canvas element\n */\nexport const createCanvasElementFor = (\n  canvas: HTMLCanvasElement | ImageData | HTMLImageElement | TSize,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElement();\n  newCanvas.width = canvas.width;\n  newCanvas.height = canvas.height;\n  return newCanvas;\n};\n\n/**\n * since 2.6.0 moved from canvas instance to utility.\n * possibly useless\n * @param {CanvasElement} canvasEl to copy size and content of\n * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n * @param {number} quality <= 1 and > 0\n * @return {String} data url\n */\nexport const toDataURL = (\n  canvasEl: HTMLCanvasElement,\n  format: ImageFormat,\n  quality: number,\n) => canvasEl.toDataURL(`image/${format}`, quality);\n\nexport const isHTMLCanvas = (\n  canvas?: HTMLCanvasElement | string,\n): canvas is HTMLCanvasElement => {\n  return !!canvas && (canvas as HTMLCanvasElement).getContext !== undefined;\n};\n\nexport const toBlob = (\n  canvasEl: HTMLCanvasElement,\n  format?: ImageFormat,\n  quality?: number,\n) =>\n  new Promise((resolve, _) => {\n    canvasEl.toBlob(resolve, `image/${format}`, quality);\n  }) as Promise<Blob | null>;\n","import type { TRadian, TDegree } from '../../typedefs';\nimport { PiBy180 } from '../../constants';\n\n/**\n * Transforms degrees to radians.\n * @param {TDegree} degrees value in degrees\n * @return {TRadian} value in radians\n */\nexport const degreesToRadians = (degrees: TDegree): TRadian =>\n  (degrees * PiBy180) as TRadian;\n\n/**\n * Transforms radians to degrees.\n * @param {TRadian} radians value in radians\n * @return {TDegree} value in degrees\n */\nexport const radiansToDegrees = (radians: TRadian): TDegree =>\n  (radians / PiBy180) as TDegree;\n","import { iMatrix } from '../../constants';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TDegree, TRadian, TMat2D } from '../../typedefs';\nimport { cos } from './cos';\nimport { degreesToRadians, radiansToDegrees } from './radiansDegreesConversion';\nimport { sin } from './sin';\n\nexport type TRotateMatrixArgs = {\n  angle?: TDegree;\n};\n\nexport type TTranslateMatrixArgs = {\n  translateX?: number;\n  translateY?: number;\n};\n\nexport type TScaleMatrixArgs = {\n  scaleX?: number;\n  scaleY?: number;\n  flipX?: boolean;\n  flipY?: boolean;\n  skewX?: TDegree;\n  skewY?: TDegree;\n};\n\nexport type TComposeMatrixArgs = TTranslateMatrixArgs &\n  TRotateMatrixArgs &\n  TScaleMatrixArgs;\n\nexport type TQrDecomposeOut = Required<\n  Omit<TComposeMatrixArgs, 'flipX' | 'flipY'>\n>;\n\nexport const isIdentityMatrix = (mat: TMat2D) =>\n  mat.every((value, index) => value === iMatrix[index]);\n\n/**\n * Apply transform t to point p\n * @deprecated use {@link Point#transform}\n * @param  {Point | XY} p The point to transform\n * @param  {Array} t The transform\n * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n * @return {Point} The transformed point\n */\nexport const transformPoint = (\n  p: XY,\n  t: TMat2D,\n  ignoreOffset?: boolean,\n): Point => new Point(p).transform(t, ignoreOffset);\n\n/**\n * Invert transformation t\n * @param {Array} t The transform\n * @return {Array} The inverted transform\n */\nexport const invertTransform = (t: TMat2D): TMat2D => {\n  const a = 1 / (t[0] * t[3] - t[1] * t[2]),\n    r = [a * t[3], -a * t[1], -a * t[2], a * t[0], 0, 0] as TMat2D,\n    { x, y } = new Point(t[4], t[5]).transform(r, true);\n  r[4] = -x;\n  r[5] = -y;\n  return r;\n};\n\n/**\n * Multiply matrix A by matrix B to nest transformations\n * @param  {TMat2D} a First transformMatrix\n * @param  {TMat2D} b Second transformMatrix\n * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n * @return {TMat2D} The product of the two transform matrices\n */\nexport const multiplyTransformMatrices = (\n  a: TMat2D,\n  b: TMat2D,\n  is2x2?: boolean,\n): TMat2D =>\n  [\n    a[0] * b[0] + a[2] * b[1],\n    a[1] * b[0] + a[3] * b[1],\n    a[0] * b[2] + a[2] * b[3],\n    a[1] * b[2] + a[3] * b[3],\n    is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n    is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5],\n  ] as TMat2D;\n\n/**\n * Multiplies {@link TMat2D} such that a matrix defines the plane for the rest of the matrices **after** it\n *\n * `multiplyTransformMatrixArray([A, B, C, D])` is equivalent to `A(B(C(D)))`\n *\n * @param matrices an array of matrices\n * @param [is2x2] flag to multiply matrices as 2x2 matrices\n * @returns the multiplication product\n */\nexport const multiplyTransformMatrixArray = (\n  matrices: (TMat2D | undefined | null | false)[],\n  is2x2?: boolean,\n) =>\n  matrices.reduceRight(\n    (product: TMat2D, curr) =>\n      curr && product\n        ? multiplyTransformMatrices(curr, product, is2x2)\n        : curr || product,\n    undefined as unknown as TMat2D,\n  ) || iMatrix.concat();\n\nexport const calcPlaneRotation = ([a, b]: TMat2D) =>\n  Math.atan2(b, a) as TRadian;\n\n/**\n * Decomposes standard 2x3 matrix into transform components\n * @param  {TMat2D} a transformMatrix\n * @return {Object} Components of transform\n */\nexport const qrDecompose = (a: TMat2D): TQrDecomposeOut => {\n  const angle = calcPlaneRotation(a),\n    denom = Math.pow(a[0], 2) + Math.pow(a[1], 2),\n    scaleX = Math.sqrt(denom),\n    scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n    skewX = Math.atan2(a[0] * a[2] + a[1] * a[3], denom);\n  return {\n    angle: radiansToDegrees(angle),\n    scaleX,\n    scaleY,\n    skewX: radiansToDegrees(skewX),\n    skewY: 0 as TDegree,\n    translateX: a[4] || 0,\n    translateY: a[5] || 0,\n  };\n};\n\n/**\n * Generate a translation matrix\n *\n * A translation matrix in the form of\n * [ 1 0 x ]\n * [ 0 1 y ]\n * [ 0 0 1 ]\n *\n * See @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#translate for more details\n *\n * @param {number} x translation on X axis\n * @param {number} [y] translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createTranslateMatrix = (x: number, y = 0): TMat2D => [\n  1,\n  0,\n  0,\n  1,\n  x,\n  y,\n];\n\n/**\n * Generate a rotation matrix around around a point (x,y), defaulting to (0,0)\n *\n * A matrix in the form of\n * [cos(a) -sin(a) -x*cos(a)+y*sin(a)+x]\n * [sin(a)  cos(a) -x*sin(a)-y*cos(a)+y]\n * [0       0      1                 ]\n *\n *\n * @param {TDegree} angle rotation in degrees\n * @param {XY} [pivotPoint] pivot point to rotate around\n * @returns {TMat2D} matrix\n */\nexport function createRotateMatrix(\n  { angle = 0 }: TRotateMatrixArgs = {},\n  { x = 0, y = 0 }: Partial<XY> = {},\n): TMat2D {\n  const angleRadiant = degreesToRadians(angle),\n    cosValue = cos(angleRadiant),\n    sinValue = sin(angleRadiant);\n  return [\n    cosValue,\n    sinValue,\n    -sinValue,\n    cosValue,\n    x ? x - (cosValue * x - sinValue * y) : 0,\n    y ? y - (sinValue * x + cosValue * y) : 0,\n  ];\n}\n\n/**\n * Generate a scale matrix around the point (0,0)\n *\n * A matrix in the form of\n * [x 0 0]\n * [0 y 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#scale\n *\n * @param {number} x scale on X axis\n * @param {number} [y] scale on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createScaleMatrix = (x: number, y: number = x): TMat2D => [\n  x,\n  0,\n  0,\n  y,\n  0,\n  0,\n];\n\nexport const angleToSkew = (angle: TDegree) =>\n  Math.tan(degreesToRadians(angle));\n\nexport const skewToAngle = (value: TRadian) =>\n  radiansToDegrees(Math.atan(value));\n\n/**\n * Generate a skew matrix for the X axis\n *\n * A matrix in the form of\n * [1 x 0]\n * [0 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewx\n *\n * @param {TDegree} skewValue translation on X axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewXMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  0,\n  angleToSkew(skewValue),\n  1,\n  0,\n  0,\n];\n\n/**\n * Generate a skew matrix for the Y axis\n *\n * A matrix in the form of\n * [1 0 0]\n * [y 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewy\n *\n * @param {TDegree} skewValue translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewYMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  angleToSkew(skewValue),\n  0,\n  1,\n  0,\n  0,\n];\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet.\n * is called DimensionsTransformMatrix because those properties are the one that influence\n * the size of the resulting box of the object.\n * @param  {Object} options\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @return {Number[]} transform matrix\n */\nexport const calcDimensionsMatrix = ({\n  scaleX = 1,\n  scaleY = 1,\n  flipX = false,\n  flipY = false,\n  skewX = 0 as TDegree,\n  skewY = 0 as TDegree,\n}: TScaleMatrixArgs) => {\n  let matrix = createScaleMatrix(\n    flipX ? -scaleX : scaleX,\n    flipY ? -scaleY : scaleY,\n  );\n  if (skewX) {\n    matrix = multiplyTransformMatrices(matrix, createSkewXMatrix(skewX), true);\n  }\n  if (skewY) {\n    matrix = multiplyTransformMatrices(matrix, createSkewYMatrix(skewY), true);\n  }\n  return matrix;\n};\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet\n * Before changing this function look at: src/benchmarks/calcTransformMatrix.mjs\n * @param  {Object} options\n * @param  {Number} [options.angle]\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @param  {Number} [options.translateX]\n * @param  {Number} [options.translateY]\n * @return {Number[]} transform matrix\n */\nexport const composeMatrix = (options: TComposeMatrixArgs): TMat2D => {\n  const { translateX = 0, translateY = 0, angle = 0 as TDegree } = options;\n  let matrix = createTranslateMatrix(translateX, translateY);\n  if (angle) {\n    matrix = multiplyTransformMatrices(matrix, createRotateMatrix({ angle }));\n  }\n  const scaleMatrix = calcDimensionsMatrix(options);\n  if (!isIdentityMatrix(scaleMatrix)) {\n    matrix = multiplyTransformMatrices(matrix, scaleMatrix);\n  }\n  return matrix;\n};\n","import { noop } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type {\n  Abortable,\n  Constructor,\n  TCrossOrigin,\n  TFiller,\n} from '../../typedefs';\nimport { createImage } from './dom';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { BaseFilter } from '../../filters/BaseFilter';\nimport type { FabricObject as BaseFabricObject } from '../../shapes/Object/Object';\nimport { FabricError, SignalAbortedError } from '../internals/console';\nimport type { Shadow } from '../../Shadow';\n\nexport type LoadImageOptions = Abortable & {\n  /**\n   * cors value for the image loading, default to anonymous\n   */\n  crossOrigin?: TCrossOrigin;\n};\n\n/**\n * Loads image element from given url and resolve it, or catch.\n * @param {String} url URL representing an image\n * @param {LoadImageOptions} [options] image loading options\n * @returns {Promise<HTMLImageElement>} the loaded image.\n */\nexport const loadImage = (\n  url: string,\n  { signal, crossOrigin = null }: LoadImageOptions = {},\n) =>\n  new Promise<HTMLImageElement>(function (resolve, reject) {\n    if (signal && signal.aborted) {\n      return reject(new SignalAbortedError('loadImage'));\n    }\n    const img = createImage();\n    let abort: EventListenerOrEventListenerObject;\n    if (signal) {\n      abort = function (err: Event) {\n        img.src = '';\n        reject(err);\n      };\n      signal.addEventListener('abort', abort, { once: true });\n    }\n    const done = function () {\n      img.onload = img.onerror = null;\n      abort && signal?.removeEventListener('abort', abort);\n      resolve(img);\n    };\n    if (!url) {\n      done();\n      return;\n    }\n    img.onload = done;\n    img.onerror = function () {\n      abort && signal?.removeEventListener('abort', abort);\n      reject(new FabricError(`Error loading ${img.src}`));\n    };\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n  });\n\nexport type EnlivenObjectOptions = Abortable & {\n  /**\n   * Method for further parsing of object elements,\n   * called after each fabric object created.\n   */\n  reviver?: <\n    T extends\n      | BaseFabricObject\n      | FabricObject\n      | BaseFilter<string>\n      | Shadow\n      | TFiller,\n  >(\n    serializedObj: Record<string, any>,\n    instance: T,\n  ) => void;\n};\n\n/**\n * @TODO type this correctly.\n * Creates corresponding fabric instances from their object representations\n * @param {Object[]} objects Objects to enliven\n * @param {EnlivenObjectOptions} [options]\n * @param {(serializedObj: object, instance: FabricObject) => any} [options.reviver] Method for further parsing of object elements,\n * called after each fabric object created.\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<FabricObject[]>}\n */\nexport const enlivenObjects = <\n  T extends\n    | BaseFabricObject\n    | FabricObject\n    | BaseFilter<string>\n    | Shadow\n    | TFiller,\n>(\n  objects: any[],\n  { signal, reviver = noop }: EnlivenObjectOptions = {},\n) =>\n  new Promise<T[]>((resolve, reject) => {\n    const instances: T[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    Promise.all(\n      objects.map((obj) =>\n        classRegistry\n          .getClass<\n            Constructor<T> & {\n              fromObject(options: any, context: Abortable): Promise<T>;\n            }\n          >(obj.type)\n          .fromObject(obj, { signal })\n          .then((fabricInstance) => {\n            reviver(obj, fabricInstance);\n            instances.push(fabricInstance);\n            return fabricInstance;\n          }),\n      ),\n    )\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance) => {\n          (instance as FabricObject).dispose &&\n            (instance as FabricObject).dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n\n/**\n * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n * @param {Object} object with properties to enlive ( fill, stroke, clipPath, path )\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<Record<string, FabricObject | TFiller | null>>} the input object with enlived values\n */\nexport const enlivenObjectEnlivables = <\n  R = Record<string, FabricObject | TFiller | null>,\n>(\n  serializedObject: any,\n  { signal }: Abortable = {},\n) =>\n  new Promise<R>((resolve, reject) => {\n    const instances: (FabricObject | TFiller | Shadow)[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    // enlive every possible property\n    const promises = Object.values(serializedObject).map((value: any) => {\n      if (!value) {\n        return value;\n      }\n      /**\n       * clipPath or shadow or gradient or text on a path or a pattern,\n       * or the backgroundImage or overlayImage of canvas\n       * If we have a type and there is a classe registered for it, we enlive it.\n       * If there is no class registered for it we return the value as is\n       * */\n      if (value.type && classRegistry.has(value.type)) {\n        return enlivenObjects<FabricObject | Shadow | TFiller>([value], {\n          signal,\n        }).then(([enlived]) => {\n          instances.push(enlived);\n          return enlived;\n        });\n      }\n      return value;\n    });\n    const keys = Object.keys(serializedObject);\n    Promise.all(promises)\n      .then((enlived) => {\n        return enlived.reduce((acc, instance, index) => {\n          acc[keys[index]] = instance;\n          return acc;\n        }, {});\n      })\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance: any) => {\n          instance.dispose && instance.dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n","/**\n * Populates an object with properties of another object\n * @param {Object} source Source object\n * @param {string[]} properties Properties names to include\n * @returns object populated with the picked keys\n */\nexport const pick = <T extends Record<string, any>>(\n  source: T,\n  keys: (keyof T)[] = [],\n) => {\n  return keys.reduce((o, key) => {\n    if (key in source) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n\nexport const pickBy = <T extends Record<string, any>>(\n  source: T,\n  predicate: <K extends keyof T>(value: T[K], key: K, collection: T) => boolean,\n) => {\n  return (Object.keys(source) as (keyof T)[]).reduce((o, key) => {\n    if (predicate(source[key], key, source)) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n","/**\n * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n * @param {number|string} number number to operate on\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {number}\n */\nexport const toFixed = (number: number | string, fractionDigits: number) =>\n  parseFloat(Number(number).toFixed(fractionDigits));\n","import type { TMat2D } from '../../typedefs';\nimport { toFixed } from './toFixed';\nimport { config } from '../../config';\n\n/**\n * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n * @param {TMat2D} transform an array with 6 numbers\n * @return {String} transform matrix for svg\n */\nexport const matrixToSVG = (transform: TMat2D) =>\n  'matrix(' +\n  transform\n    .map((value) => toFixed(value, config.NUM_FRACTION_DIGITS))\n    .join(' ') +\n  ')';\n","import type { FabricObject } from '../shapes/Object/Object';\nimport type { TFiller } from '../typedefs';\nimport type { FabricText } from '../shapes/Text/Text';\nimport type { Pattern } from '../Pattern';\nimport type { Path } from '../shapes/Path';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\n\nexport const isFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && (filler as TFiller).toLive !== undefined;\n};\n\nexport const isSerializableFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && typeof (filler as TFiller).toObject === 'function';\n};\n\nexport const isPattern = (filler: TFiller): filler is Pattern => {\n  return (\n    !!filler && (filler as Pattern).offsetX !== undefined && 'source' in filler\n  );\n};\n\nexport const isTextObject = (\n  fabricObject?: FabricObject,\n): fabricObject is FabricText => {\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as FabricText)._renderText === 'function'\n  );\n};\n\nexport const isPath = (fabricObject?: FabricObject): fabricObject is Path => {\n  // we could use instanceof but that would mean pulling in Text code for a simple check\n  // @todo discuss what to do and how to do\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as Path)._renderPathCommands === 'function'\n  );\n};\n\nexport const isActiveSelection = (\n  fabricObject?: FabricObject,\n): fabricObject is ActiveSelection =>\n  !!fabricObject && 'multiSelectionStacking' in fabricObject;\n","/**\n * Returns element scroll offsets\n * @param {HTMLElement} element Element to operate on\n * @return {Object} Object with left/top values\n */\nexport function getScrollLeftTop(element: HTMLElement | null) {\n  const doc = element && getDocumentFromElement(element);\n  let left = 0,\n    top = 0;\n  if (!element || !doc) {\n    return { left, top };\n  }\n  let elementLoop: HTMLElement | Document | ShadowRoot = element;\n  const docElement = doc.documentElement,\n    body = doc.body || {\n      scrollLeft: 0,\n      scrollTop: 0,\n    };\n  // While loop checks (and then sets element to) .parentNode OR .host\n  //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n  //  but the .parentNode of a root ShadowDOM node will always be null, instead\n  //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n  while (\n    elementLoop &&\n    (elementLoop.parentNode || (elementLoop as unknown as ShadowRoot).host)\n  ) {\n    elementLoop = (elementLoop.parentNode ||\n      (elementLoop as unknown as ShadowRoot).host) as\n      | HTMLElement\n      | Document\n      | ShadowRoot;\n    if (elementLoop === doc) {\n      left = body.scrollLeft || docElement.scrollLeft || 0;\n      top = body.scrollTop || docElement.scrollTop || 0;\n    } else {\n      left += (elementLoop as HTMLElement).scrollLeft || 0;\n      top += (elementLoop as HTMLElement).scrollTop || 0;\n    }\n\n    if (\n      elementLoop.nodeType === 1 &&\n      (elementLoop as HTMLElement).style.position === 'fixed'\n    ) {\n      break;\n    }\n  }\n\n  return { left, top };\n}\n\nexport const getDocumentFromElement = (el: HTMLElement) =>\n  el.ownerDocument || null;\n\nexport const getWindowFromElement = (el: HTMLElement) =>\n  el.ownerDocument?.defaultView || null;\n","import { NONE } from '../../constants';\nimport type { TSize } from '../../typedefs';\nimport {\n  getDocumentFromElement,\n  getWindowFromElement,\n  getScrollLeftTop,\n} from '../../util/dom_misc';\n\nexport const setCanvasDimensions = (\n  el: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  { width, height }: TSize,\n  retinaScaling = 1,\n) => {\n  el.width = width;\n  el.height = height;\n  if (retinaScaling > 1) {\n    el.setAttribute('width', (width * retinaScaling).toString());\n    el.setAttribute('height', (height * retinaScaling).toString());\n    ctx.scale(retinaScaling, retinaScaling);\n  }\n};\n\nexport type CSSDimensions = {\n  width: number | string;\n  height: number | string;\n};\n\nexport const setCSSDimensions = (\n  el: HTMLElement,\n  { width, height }: Partial<CSSDimensions>,\n) => {\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\n  height &&\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\n};\n\n/**\n * Returns offset for a given element\n * @param {HTMLElement} element Element to get offset for\n * @return {Object} Object with \"left\" and \"top\" properties\n */\nexport function getElementOffset(element: HTMLElement) {\n  const doc = element && getDocumentFromElement(element),\n    offset = { left: 0, top: 0 };\n\n  if (!doc) {\n    return offset;\n  }\n  const elemStyle: CSSStyleDeclaration =\n    getWindowFromElement(element)?.getComputedStyle(element, null) ||\n    ({} as CSSStyleDeclaration);\n  offset.left += parseInt(elemStyle.borderLeftWidth, 10) || 0;\n  offset.top += parseInt(elemStyle.borderTopWidth, 10) || 0;\n  offset.left += parseInt(elemStyle.paddingLeft, 10) || 0;\n  offset.top += parseInt(elemStyle.paddingTop, 10) || 0;\n\n  let box = { left: 0, top: 0 };\n\n  const docElem = doc.documentElement;\n  if (typeof element.getBoundingClientRect !== 'undefined') {\n    box = element.getBoundingClientRect();\n  }\n\n  const scrollLeftTop = getScrollLeftTop(element);\n\n  return {\n    left:\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\n  };\n}\n\n/**\n * Makes element unselectable\n * @param {HTMLElement} element Element to make unselectable\n * @return {HTMLElement} Element that was passed in\n */\nexport function makeElementUnselectable(element: HTMLElement) {\n  if (typeof element.onselectstart !== 'undefined') {\n    element.onselectstart = () => false;\n  }\n  element.style.userSelect = NONE;\n  return element;\n}\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport type { CSSDimensions } from './util';\nimport { setCSSDimensions, getElementOffset } from './util';\nimport { createCanvasElement, isHTMLCanvas } from '../../util/misc/dom';\nimport { setCanvasDimensions } from './util';\nimport { FabricError } from '../../util/internals/console';\n\nexport type CanvasItem = {\n  el: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n};\n\nexport class StaticCanvasDOMManager {\n  /**\n   * Keeps a copy of the canvas style before setting retina scaling and other potions\n   * in order to return it to original state on dispose\n   * @type string\n   */\n  private _originalCanvasStyle?: string;\n\n  lower: CanvasItem;\n\n  constructor(arg0?: string | HTMLCanvasElement) {\n    const el = this.createLowerCanvas(arg0);\n    this.lower = { el, ctx: el.getContext('2d')! };\n  }\n\n  protected createLowerCanvas(arg0?: HTMLCanvasElement | string) {\n    // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n    const el = isHTMLCanvas(arg0)\n      ? arg0\n      : (arg0 &&\n          (getFabricDocument().getElementById(arg0) as HTMLCanvasElement)) ||\n        createCanvasElement();\n    if (el.hasAttribute('data-fabric')) {\n      throw new FabricError(\n        'Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?',\n      );\n    }\n    this._originalCanvasStyle = el.style.cssText;\n    el.setAttribute('data-fabric', 'main');\n    el.classList.add('lower-canvas');\n    return el;\n  }\n\n  cleanupDOM({ width, height }: TSize) {\n    const { el } = this.lower;\n    // restore canvas style and attributes\n    el.classList.remove('lower-canvas');\n    el.removeAttribute('data-fabric');\n    // restore canvas size to original size in case retina scaling was applied\n    el.setAttribute('width', `${width}`);\n    el.setAttribute('height', `${height}`);\n    el.style.cssText = this._originalCanvasStyle || '';\n    this._originalCanvasStyle = undefined;\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    const { el, ctx } = this.lower;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>) {\n    setCSSDimensions(this.lower.el, size);\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   */\n  calcOffset() {\n    return getElementOffset(this.lower.el);\n  }\n\n  dispose() {\n    getEnv().dispose(this.lower.el);\n    // @ts-expect-error disposing\n    delete this.lower;\n  }\n}\n","import { iMatrix } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TFiller, TMat2D, TOptions } from '../typedefs';\n\ninterface CanvasDrawableOptions {\n  /**\n   * if set to false background image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  backgroundVpt: boolean;\n\n  /**\n   * Background color of canvas instance.\n   * @type {(String|TFiller)}\n   * @default\n   */\n  backgroundColor: TFiller | string;\n\n  /**\n   * Background image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as background, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  backgroundImage?: FabricObject;\n\n  /**\n   * if set to false overlay image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  overlayVpt: boolean;\n\n  /**\n   * Overlay color of canvas instance.\n   * @since 1.3.9\n   * @type {(String|TFiller)}\n   * @default\n   */\n  overlayColor: TFiller | string;\n\n  /**\n   * Overlay image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  overlayImage?: FabricObject;\n}\n\ninterface CanvasRenderingOptions {\n  /**\n   * Indicates whether {@link StaticCanvas#add}, {@link StaticCanvas#insertAt} and {@link StaticCanvas#remove},\n   * {@link StaticCanvas#moveTo}, {@link StaticCanvas#clear} and many more, should also re-render canvas.\n   * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n   * since the renders are queued and executed one per frame.\n   * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n   * Left default to true to do not break documentation and old app, fiddles.\n   * @type Boolean\n   * @default\n   */\n  renderOnAddRemove: boolean;\n\n  /**\n   * Based on vptCoords and object.aCoords, skip rendering of objects that\n   * are not included in current viewport.\n   * May greatly help in applications with crowded canvas and use of zoom/pan\n   * If One of the corner of the bounding box of the object is on the canvas\n   * the objects get rendered.\n   * @type Boolean\n   * @default true\n   */\n  skipOffscreen: boolean;\n\n  /**\n   * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n   * @type Boolean\n   * @default\n   */\n  enableRetinaScaling: boolean;\n\n  /**\n   * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n   * @type Boolean\n   * @default\n   */\n  imageSmoothingEnabled: boolean;\n\n  /**\n   * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n   * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n   * top left corner of the canvas.\n   * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n   * @type FabricObject\n   */\n  clipPath?: FabricObject;\n}\n\nexport interface CanvasExportOptions {\n  /**\n   * Indicates whether toObject/toDatalessObject should include default values\n   * if set to false, takes precedence over the object value.\n   * @type Boolean\n   * @default\n   */\n  includeDefaultValues: boolean;\n\n  /**\n   * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n   * a zoomed canvas will then produce zoomed SVG output.\n   * @type Boolean\n   * @default\n   */\n  svgViewportTransformation: boolean;\n}\n\nexport interface StaticCanvasOptions\n  extends CanvasDrawableOptions,\n    CanvasRenderingOptions,\n    CanvasExportOptions {\n  /**\n   * Width in virtual/logical pixels of the canvas.\n   * The canvas can be larger than width if retina scaling is active\n   * @type number\n   */\n  width: number;\n\n  /**\n   * Height in virtual/logical pixels of the canvas.\n   * The canvas can be taller than width if retina scaling is active\n   * @type height\n   */\n  height: number;\n\n  /**\n   * Indicates whether object controls (borders/controls) are rendered above overlay image\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: boolean;\n\n  /**\n   * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n   * It gives PRIORITY to DOM scrolling, it doesn't make it always possible.\n   * If is true, when using a touch event on the canvas, the canvas will scroll if scroll is possible.\n   * If we are in drawing mode or if we are selecting an object the canvas preventDefault and so it won't scroll\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: boolean;\n\n  /**\n   * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n   * @type Array\n   * @example <caption>Default transform</caption>\n   * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n   * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n   * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n   * @default\n   */\n  viewportTransform: TMat2D;\n}\n\nexport const staticCanvasDefaults: TOptions<StaticCanvasOptions> = {\n  backgroundVpt: true,\n  backgroundColor: '',\n  overlayVpt: true,\n  overlayColor: '',\n\n  includeDefaultValues: true,\n  svgViewportTransformation: true,\n\n  renderOnAddRemove: true,\n  skipOffscreen: true,\n  enableRetinaScaling: true,\n  imageSmoothingEnabled: true,\n\n  /**\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: false,\n  /**\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: false,\n\n  viewportTransform: [...iMatrix],\n};\n","import { config } from '../config';\nimport { CENTER, VERSION } from '../constants';\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\nimport type { Gradient } from '../gradient/Gradient';\nimport { createCollectionMixin, isCollection } from '../Collection';\nimport { CommonMethods } from '../CommonMethods';\nimport type { Pattern } from '../Pattern';\nimport { Point } from '../Point';\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\nimport type {\n  Abortable,\n  Constructor,\n  TCornerPoint,\n  TDataUrlOptions,\n  TFiller,\n  TMat2D,\n  TSize,\n  TSVGReviver,\n  TToCanvasElementOptions,\n  TValidToObjectMethod,\n  TOptions,\n} from '../typedefs';\nimport {\n  cancelAnimFrame,\n  requestAnimFrame,\n} from '../util/animation/AnimationFrameProvider';\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor, toBlob, toDataURL } from '../util/misc/dom';\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgExport';\nimport { toFixed } from '../util/misc/toFixed';\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\nimport type { CSSDimensions } from './DOMManagers/util';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\nimport { log, FabricError } from '../util/internals/console';\nimport { getDevicePixelRatio } from '../env';\n\n/**\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\n * Better try to restrict with types to avoid confusion.\n */\nexport type TCanvasSizeOptions =\n  | {\n      backstoreOnly?: true;\n      cssOnly?: false;\n    }\n  | {\n      backstoreOnly?: false;\n      cssOnly?: true;\n    };\n\nexport type TSVGExportOptions = {\n  suppressPreamble?: boolean;\n  viewBox?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\n  width?: string;\n  height?: string;\n  reviver?: TSVGReviver;\n};\n\n/**\n * Static canvas class\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n * @fires before:render\n * @fires after:render\n * @fires canvas:cleared\n * @fires object:added\n * @fires object:removed\n */\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\nexport class StaticCanvas<\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents,\n  >\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\n  implements StaticCanvasOptions\n{\n  declare width: number;\n  declare height: number;\n\n  // background\n  declare backgroundVpt: boolean;\n  declare backgroundColor: TFiller | string;\n  declare backgroundImage?: FabricObject;\n  // overlay\n  declare overlayVpt: boolean;\n  declare overlayColor: TFiller | string;\n  declare overlayImage?: FabricObject;\n\n  declare clipPath?: FabricObject;\n\n  declare includeDefaultValues: boolean;\n\n  // rendering config\n  declare renderOnAddRemove: boolean;\n  declare skipOffscreen: boolean;\n  declare enableRetinaScaling: boolean;\n  declare imageSmoothingEnabled: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare controlsAboveOverlay: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare allowTouchScrolling: boolean;\n\n  declare viewportTransform: TMat2D;\n\n  /**\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\n   */\n  declare vptCoords: TCornerPoint;\n\n  /**\n   * A reference to the canvas actual HTMLCanvasElement.\n   * Can be use to read the raw pixels, but never write or manipulate\n   * @type HTMLCanvasElement\n   */\n  get lowerCanvasEl() {\n    return this.elements.lower?.el;\n  }\n\n  get contextContainer() {\n    return this.elements.lower?.ctx;\n  }\n\n  /**\n   * If true the Canvas is in the process or has been disposed/destroyed.\n   * No more rendering operation will be executed on this canvas.\n   * @type boolean\n   */\n  declare destroyed?: boolean;\n\n  /**\n   * Started the process of disposing but not done yet.\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\n   * @type boolean\n   */\n  declare disposed?: boolean;\n\n  declare _offset: { left: number; top: number };\n  protected declare hasLostContext: boolean;\n  protected declare nextRenderHandle: number;\n\n  declare elements: StaticCanvasDOMManager;\n\n  /**\n   * When true control drawing is skipped.\n   * This boolean is used to avoid toDataURL to export controls.\n   * Usage of this boolean to build up other flows and features is not supported\n   * @type Boolean\n   * @default false\n   */\n  protected declare skipControlsDrawing: boolean;\n\n  static ownDefaults = staticCanvasDefaults;\n\n  // reference to\n  protected declare __cleanupTask?: {\n    (): void;\n    kill: (reason?: any) => void;\n  };\n\n  static getDefaults(): Record<string, any> {\n    return StaticCanvas.ownDefaults;\n  }\n\n  constructor(\n    el?: string | HTMLCanvasElement,\n    options: TOptions<StaticCanvasOptions> = {},\n  ) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof StaticCanvas).getDefaults(),\n    );\n    this.set(options);\n    this.initElements(el);\n    this._setDimensionsImpl({\n      width: this.width || this.elements.lower.el.width || 0,\n      height: this.height || this.elements.lower.el.height || 0,\n    });\n    this.skipControlsDrawing = false;\n    this.viewportTransform = [...this.viewportTransform];\n    this.calcViewportBoundaries();\n  }\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new StaticCanvasDOMManager(el);\n  }\n\n  add(...objects: FabricObject[]) {\n    const size = super.add(...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const size = super.insertAt(index, ...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return removed;\n  }\n\n  _onObjectAdded(obj: FabricObject) {\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\n      log(\n        'warn',\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas',\n      );\n      obj.canvas.remove(obj);\n    }\n    obj._set('canvas', this);\n    obj.setCoords();\n    this.fire('object:added', { target: obj });\n    obj.fire('added', { target: this });\n  }\n\n  _onObjectRemoved(obj: FabricObject) {\n    obj._set('canvas', undefined);\n    this.fire('object:removed', { target: obj });\n    obj.fire('removed', { target: this });\n  }\n\n  _onStackOrderChanged() {\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   * @return {Number} retinaScaling if applied, otherwise 1;\n   */\n  getRetinaScaling() {\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   * This method is also attached as \"resize\" event handler of window\n   */\n  calcOffset() {\n    return (this._offset = this.elements.calcOffset());\n  }\n\n  /**\n   * Returns canvas width (in px)\n   * @return {Number}\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * Returns canvas height (in px)\n   * @return {Number}\n   */\n  getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * Sets width of this canvas instance\n   * @param {Number|String} value                         Value to set width to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setWidth(\n    value: TSize['width'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setWidth(\n    value: CSSDimensions['width'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setWidth(value: number, options?: never) {\n    return this.setDimensions({ width: value }, options);\n  }\n\n  /**s\n   * Sets height of this canvas instance\n   * @param {Number|String} value                         Value to set height to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setHeight(\n    value: TSize['height'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setHeight(\n    value: CSSDimensions['height'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setHeight(value: CSSDimensions['height'], options?: never) {\n    return this.setDimensions({ height: value }, options);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: Partial<TSize | CSSDimensions>,\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {},\n  ) {\n    if (!cssOnly) {\n      const size = {\n        width: this.width,\n        height: this.height,\n        ...(dimensions as Partial<TSize>),\n      };\n      this.elements.setDimensions(size, this.getRetinaScaling());\n      this.hasLostContext = true;\n      this.width = size.width;\n      this.height = size.height;\n    }\n    if (!backstoreOnly) {\n      this.elements.setCSSDimensions(dimensions);\n    }\n\n    this.calcOffset();\n  }\n\n  /**\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n   * @param {Object}        dimensions                    Object with width/height properties\n   * @param {Number|String} [dimensions.width]            Width of canvas element\n   * @param {Number|String} [dimensions.height]           Height of canvas element\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   */\n  setDimensions(\n    dimensions: Partial<CSSDimensions>,\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setDimensions(\n    dimensions: Partial<TSize>,\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\n  setDimensions(\n    dimensions: Partial<TSize | CSSDimensions>,\n    options?: TCanvasSizeOptions,\n  ) {\n    this._setDimensionsImpl(dimensions, options);\n    if (!options || !options.cssOnly) {\n      this.requestRenderAll();\n    }\n  }\n\n  /**\n   * Returns canvas zoom level\n   * @return {Number}\n   */\n  getZoom() {\n    return this.viewportTransform[0];\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    this.viewportTransform = vpt;\n    this.calcViewportBoundaries();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Sets zoom level of this canvas instance, the zoom centered around point\n   * meaning that following zoom to point with the same point will have the visual\n   * effect of the zoom originating from that point. The point won't move.\n   * It has nothing to do with canvas center or visual center of the viewport.\n   * @param {Point} point to zoom with respect to\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  zoomToPoint(point: Point, value: number) {\n    // TODO: just change the scale, preserve other transformations\n    const before = point,\n      vpt: TMat2D = [...this.viewportTransform];\n    const newPoint = transformPoint(point, invertTransform(vpt));\n    vpt[0] = value;\n    vpt[3] = value;\n    const after = transformPoint(newPoint, vpt);\n    vpt[4] += before.x - after.x;\n    vpt[5] += before.y - after.y;\n    this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Sets zoom level of this canvas instance\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  setZoom(value: number) {\n    this.zoomToPoint(new Point(0, 0), value);\n  }\n\n  /**\n   * Pan viewport so as to place point at top left corner of canvas\n   * @param {Point} point to move to\n   */\n  absolutePan(point: Point) {\n    const vpt: TMat2D = [...this.viewportTransform];\n    vpt[4] = -point.x;\n    vpt[5] = -point.y;\n    return this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Pans viewpoint relatively\n   * @param {Point} point (position vector) to move by\n   */\n  relativePan(point: Point) {\n    return this.absolutePan(\n      new Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5],\n      ),\n    );\n  }\n\n  /**\n   * Returns &lt;canvas> element corresponding to this instance\n   * @return {HTMLCanvasElement}\n   */\n  getElement(): HTMLCanvasElement {\n    return this.elements.lower.el;\n  }\n\n  /**\n   * Clears specified context of canvas element\n   * @param {CanvasRenderingContext2D} ctx Context to clear\n   */\n  clearContext(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Returns context of canvas where objects are drawn\n   * @return {CanvasRenderingContext2D}\n   */\n  getContext(): CanvasRenderingContext2D {\n    return this.elements.lower.ctx;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    this.remove(...this.getObjects());\n    this.backgroundImage = undefined;\n    this.overlayImage = undefined;\n    this.backgroundColor = '';\n    this.overlayColor = '';\n    this.clearContext(this.getContext());\n    this.fire('canvas:cleared');\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Renders the canvas\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    this.renderCanvas(this.getContext(), this._objects);\n  }\n\n  /**\n   * Function created to be instance bound at initialization\n   * used in requestAnimationFrame rendering\n   * Let the fabricJS call it. If you call it manually you could have more\n   * animationFrame stacking on to of each other\n   * for an imperative rendering, use canvas.renderAll\n   * @private\n   */\n  renderAndReset() {\n    this.nextRenderHandle = 0;\n    this.renderAll();\n  }\n\n  /**\n   * Append a renderAll request to next animation frame.\n   * unless one is already in progress, in that case nothing is done\n   * a boolean flag will avoid appending more.\n   */\n  requestRenderAll() {\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\n    }\n  }\n\n  /**\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\n   * helps to determinate when an object is in the current rendering viewport\n   */\n  calcViewportBoundaries(): TCornerPoint {\n    const width = this.width,\n      height = this.height,\n      iVpt = invertTransform(this.viewportTransform),\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\n      b = transformPoint({ x: width, y: height }, iVpt),\n      // we don't support vpt flipping\n      // but the code is robust enough to mostly work with flipping\n      min = a.min(b),\n      max = a.max(b);\n    return (this.vptCoords = {\n      tl: min,\n      tr: new Point(max.x, min.y),\n      bl: new Point(min.x, max.y),\n      br: max,\n    });\n  }\n\n  cancelRequestedRender() {\n    if (this.nextRenderHandle) {\n      cancelAnimFrame(this.nextRenderHandle);\n      this.nextRenderHandle = 0;\n    }\n  }\n\n  drawControls(_ctx: CanvasRenderingContext2D) {\n    // Static canvas has no controls\n  }\n\n  /**\n   * Renders background, objects, overlay and controls.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Array} objects to render\n   */\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    if (this.destroyed) {\n      return;\n    }\n\n    const v = this.viewportTransform,\n      path = this.clipPath;\n    this.calcViewportBoundaries();\n    this.clearContext(ctx);\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    // @ts-expect-error node-canvas stuff\n    ctx.patternQuality = 'best';\n    this.fire('before:render', { ctx });\n    this._renderBackground(ctx);\n\n    ctx.save();\n    //apply viewport transform once for all rendering process\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this._renderObjects(ctx, objects);\n    ctx.restore();\n    if (!this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    if (path) {\n      path._set('canvas', this);\n      // needed to setup a couple of variables\n      // todo migrate to the newer one\n      path.shouldCache();\n      path._transformDone = true;\n      (path as TCachedFabricObject).renderCache({ forClipping: true });\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\n    }\n    this._renderOverlay(ctx);\n    if (this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    this.fire('after:render', { ctx });\n\n    if (this.__cleanupTask) {\n      this.__cleanupTask();\n      this.__cleanupTask = undefined;\n    }\n  }\n\n  /**\n   * Paint the cached clipPath on the lowerCanvasEl\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawClipPathOnCanvas(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject,\n  ) {\n    const v = this.viewportTransform;\n    ctx.save();\n    ctx.transform(...v);\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4;\n    ctx.globalCompositeOperation = 'destination-in';\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY,\n    );\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} objects to render\n   */\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    for (let i = 0, len = objects.length; i < len; ++i) {\n      objects[i] && objects[i].render(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {string} property 'background' or 'overlay'\n   */\n  _renderBackgroundOrOverlay(\n    ctx: CanvasRenderingContext2D,\n    property: 'background' | 'overlay',\n  ) {\n    const fill = this[`${property}Color`],\n      object = this[`${property}Image`],\n      v = this.viewportTransform,\n      needsVpt = this[`${property}Vpt`];\n    if (!fill && !object) {\n      return;\n    }\n    const isAFiller = isFiller(fill);\n    if (fill) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.width, 0);\n      ctx.lineTo(this.width, this.height);\n      ctx.lineTo(0, this.height);\n      ctx.closePath();\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      if (isAFiller) {\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\n          (fill as Pattern).patternTransform) as TMat2D;\n        m && ctx.transform(...m);\n      }\n      ctx.fill();\n      ctx.restore();\n    }\n    if (object) {\n      ctx.save();\n      const { skipOffscreen } = this;\n      // if the object doesn't move with the viewport,\n      // the offscreen concept does not apply;\n      this.skipOffscreen = needsVpt;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      object.render(ctx);\n      this.skipOffscreen = skipOffscreen;\n      ctx.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'background');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * Returned value is an object with top and left properties\n   * @return {Object} object with \"top\" and \"left\" number values\n   * @deprecated migrate to `getCenterPoint`\n   */\n  getCenter() {\n    return {\n      top: this.height / 2,\n      left: this.width / 2,\n    };\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * @return {Point}\n   */\n  getCenterPoint() {\n    return new Point(this.width / 2, this.height / 2);\n  }\n\n  /**\n   * Centers object horizontally in the canvas\n   */\n  centerObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically in the canvas\n   * @param {FabricObject} object Object to center vertically\n   */\n  centerObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically and horizontally in the canvas\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  centerObject(object: FabricObject) {\n    return this._centerObject(object, this.getCenterPoint());\n  }\n\n  /**\n   * Centers object vertically and horizontally in the viewport\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObject(object: FabricObject) {\n    return this._centerObject(object, this.getVpCenter());\n  }\n\n  /**\n   * Centers object horizontally in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getVpCenter().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object Vertically in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getVpCenter().y),\n    );\n  }\n\n  /**\n   * Calculate the point in canvas that correspond to the center of actual viewport.\n   * @return {Point} vpCenter, viewport center\n   */\n  getVpCenter(): Point {\n    return transformPoint(\n      this.getCenterPoint(),\n      invertTransform(this.viewportTransform),\n    );\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object Object to center\n   * @param {Point} center Center point\n   */\n  _centerObject(object: FabricObject, center: Point) {\n    object.setXY(center, CENTER, CENTER);\n    object.setCoords();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Returns dataless JSON representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} json string\n   */\n  toDatalessJSON(propertiesToInclude?: string[]) {\n    return this.toDatalessObject(propertiesToInclude);\n  }\n\n  /**\n   * Returns object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toObject', propertiesToInclude);\n  }\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * var json = canvas.toJSON();\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Returns dataless object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n  }\n\n  /**\n   * @private\n   */\n  _toObjectMethod(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const clipPath = this.clipPath;\n    const clipPathData =\n      clipPath && !clipPath.excludeFromExport\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\n        : null;\n    return {\n      version: VERSION,\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      objects: this._objects\n        .filter((object) => !object.excludeFromExport)\n        .map((instance) =>\n          this._toObject(instance, methodName, propertiesToInclude),\n        ),\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    let originalValue;\n\n    if (!this.includeDefaultValues) {\n      originalValue = instance.includeDefaultValues;\n      instance.includeDefaultValues = false;\n    }\n\n    const object = instance[methodName](propertiesToInclude);\n    if (!this.includeDefaultValues) {\n      instance.includeDefaultValues = !!originalValue;\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   */\n  __serializeBgOverlay(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const data: any = {},\n      bgImage = this.backgroundImage,\n      overlayImage = this.overlayImage,\n      bgColor = this.backgroundColor,\n      overlayColor = this.overlayColor;\n\n    if (isFiller(bgColor)) {\n      if (!bgColor.excludeFromExport) {\n        data.background = bgColor.toObject(propertiesToInclude);\n      }\n    } else if (bgColor) {\n      data.background = bgColor;\n    }\n\n    if (isFiller(overlayColor)) {\n      if (!overlayColor.excludeFromExport) {\n        data.overlay = overlayColor.toObject(propertiesToInclude);\n      }\n    } else if (overlayColor) {\n      data.overlay = overlayColor;\n    }\n\n    if (bgImage && !bgImage.excludeFromExport) {\n      data.backgroundImage = this._toObject(\n        bgImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n    if (overlayImage && !overlayImage.excludeFromExport) {\n      data.overlayImage = this._toObject(\n        overlayImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n\n    return data;\n  }\n\n  /* _TO_SVG_START_ */\n\n  declare svgViewportTransformation: boolean;\n\n  /**\n   * Returns SVG representation of canvas\n   * @function\n   * @param {Object} [options] Options object for SVG output\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n   * @param {Object} [options.viewBox] SVG viewbox object\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n   * @param {Number} [options.viewBox.width] Width of viewbox\n   * @param {Number} [options.viewBox.height] Height of viewbox\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n   * @param {String} [options.width] desired width of svg with or without units\n   * @param {String} [options.height] desired height of svg with or without units\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n   * @return {String} SVG string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n   * @example <caption>Normal SVG output</caption>\n   * var svg = canvas.toSVG();\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n   * var svg = canvas.toSVG({suppressPreamble: true});\n   * @example <caption>SVG output with viewBox attribute</caption>\n   * var svg = canvas.toSVG({\n   *   viewBox: {\n   *     x: 100,\n   *     y: 100,\n   *     width: 200,\n   *     height: 300\n   *   }\n   * });\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n   * @example <caption>Modify SVG output with reviver function</caption>\n   * var svg = canvas.toSVG(null, function(svg) {\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n   * });\n   */\n  toSVG(options: TSVGExportOptions = {}, reviver?: TSVGReviver) {\n    options.reviver = reviver;\n    const markup: string[] = [];\n\n    this._setSVGPreamble(markup, options);\n    this._setSVGHeader(markup, options);\n    if (this.clipPath) {\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\n    }\n    this._setSVGBgOverlayColor(markup, 'background');\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n    this._setSVGObjects(markup, reviver);\n    if (this.clipPath) {\n      markup.push('</g>\\n');\n    }\n    this._setSVGBgOverlayColor(markup, 'overlay');\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n    markup.push('</svg>');\n\n    return markup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\n    if (options.suppressPreamble) {\n      return;\n    }\n    markup.push(\n      '<?xml version=\"1.0\" encoding=\"',\n      options.encoding || 'UTF-8',\n      '\" standalone=\"no\" ?>\\n',\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n',\n    );\n  }\n\n  /**\n   * @private\n   */\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\n    const width = options.width || `${this.width}`,\n      height = options.height || `${this.height}`,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      optViewBox = options.viewBox;\n    let viewBox: string;\n    if (optViewBox) {\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\n    } else if (this.svgViewportTransformation) {\n      const vpt = this.viewportTransform;\n      viewBox = `viewBox=\"${toFixed(\n        -vpt[4] / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\n        this.width / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\n    } else {\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\n    }\n\n    markup.push(\n      '<svg ',\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n      'version=\"1.1\" ',\n      'width=\"',\n      width,\n      '\" ',\n      'height=\"',\n      height,\n      '\" ',\n      viewBox,\n      'xml:space=\"preserve\">\\n',\n      '<desc>Created with Fabric.js ',\n      VERSION,\n      '</desc>\\n',\n      '<defs>\\n',\n      this.createSVGFontFacesMarkup(),\n      this.createSVGRefElementsMarkup(),\n      this.createSVGClipPathMarkup(options),\n      '</defs>\\n',\n    );\n  }\n\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\n    const clipPath = this.clipPath;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\n        options.reviver,\n      )}</clipPath>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\n   * @return {String}\n   */\n  createSVGRefElementsMarkup(): string {\n    return (['background', 'overlay'] as const)\n      .map((prop) => {\n        const fill = this[`${prop}Color`];\n        if (isFiller(fill)) {\n          const shouldTransform = this[`${prop}Vpt`],\n            vpt = this.viewportTransform,\n            object = {\n              // otherwise circular dependency\n              isType: () => false,\n              width: this.width / (shouldTransform ? vpt[0] : 1),\n              height: this.height / (shouldTransform ? vpt[3] : 1),\n            };\n          return fill.toSVG(object as FabricObject, {\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\n          });\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Creates markup containing SVG font faces,\n   * font URLs for font faces must be collected by developers\n   * and are not extracted from the DOM by fabricjs\n   * @param {Array} objects Array of fabric objects\n   * @return {String}\n   */\n  createSVGFontFacesMarkup(): string {\n    const objects: FabricObject[] = [],\n      fontList: Record<string, boolean> = {},\n      fontPaths = config.fontPaths;\n\n    this._objects.forEach(function add(object) {\n      objects.push(object);\n      if (isCollection(object)) {\n        object._objects.forEach(add);\n      }\n    });\n\n    objects.forEach((obj) => {\n      if (!isTextObject(obj)) {\n        return;\n      }\n      const { styles, fontFamily } = obj;\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\n        return;\n      }\n      fontList[fontFamily] = true;\n      if (!styles) {\n        return;\n      }\n      Object.values(styles).forEach((styleRow) => {\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n            fontList[fontFamily] = true;\n          }\n        });\n      });\n    });\n\n    const fontListMarkup = Object.keys(fontList)\n      .map(\n        (fontFamily) =>\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`,\n      )\n      .join('');\n\n    if (fontListMarkup) {\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObjects(markup: string[], reviver?: TSVGReviver) {\n    this.forEachObject((fabricObject) => {\n      if (fabricObject.excludeFromExport) {\n        return;\n      }\n      this._setSVGObject(markup, fabricObject, reviver);\n    });\n  }\n\n  /**\n   * This is its own function because the Canvas ( non static ) requires extra code here\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    markup.push(instance.toSVG(reviver));\n  }\n\n  /**\n   * @private\n   */\n  _setSVGBgOverlayImage(\n    markup: string[],\n    property: 'overlayImage' | 'backgroundImage',\n    reviver?: TSVGReviver,\n  ) {\n    const bgOrOverlay = this[property];\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\n      markup.push(bgOrOverlay.toSVG(reviver));\n    }\n  }\n\n  /**\n   * @TODO this seems to handle patterns but fail at gradients.\n   * @private\n   */\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\n    const filler = this[`${property}Color`];\n    if (!filler) {\n      return;\n    }\n    if (isFiller(filler)) {\n      const repeat = (filler as Pattern).repeat || '',\n        finalWidth = this.width,\n        finalHeight = this.height,\n        shouldInvert = this[`${property}Vpt`],\n        additionalTransform = shouldInvert\n          ? matrixToSVG(invertTransform(this.viewportTransform))\n          : '';\n      markup.push(\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\n          finalHeight / 2\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\n          filler.offsetY - finalHeight / 2\n        }\" width=\"${\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).width\n            : finalWidth\n        }\" height=\"${\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).height\n            : finalHeight\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`,\n      );\n    } else {\n      markup.push(\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n        'fill=\"',\n        filler,\n        '\"',\n        '></rect>\\n',\n      );\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   *\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   *\n   * @param {String|Object} json JSON string or object\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @param {Object} [options] options\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @return {Promise<Canvas | StaticCanvas>} instance\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * }).then((canvas) => {\n   *   ... canvas is restored, add your code.\n   * });\n   *\n   */\n  loadFromJSON(\n    json: string | Record<string, any>,\n    reviver?: EnlivenObjectOptions['reviver'],\n    { signal }: Abortable = {},\n  ): Promise<this> {\n    if (!json) {\n      return Promise.reject(new FabricError('`json` is undefined'));\n    }\n\n    // parse json if it wasn't already\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      objects = [],\n      backgroundImage,\n      background,\n      overlayImage,\n      overlay,\n      clipPath,\n    } = serialized;\n    const renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, {\n        reviver,\n        signal,\n      }),\n      enlivenObjectEnlivables(\n        {\n          backgroundImage,\n          backgroundColor: background,\n          overlayImage,\n          overlayColor: overlay,\n          clipPath,\n        },\n        { signal },\n      ),\n    ]).then(([enlived, enlivedMap]) => {\n      this.clear();\n      this.add(...enlived);\n      this.set(serialized);\n      this.set(enlivedMap);\n      this.renderOnAddRemove = renderOnAddRemove;\n      return this;\n    });\n  }\n\n  /**\n   * Clones canvas instance\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone(properties: string[]) {\n    const data = this.toObject(properties);\n    const canvas = this.cloneWithoutData();\n    return canvas.loadFromJSON(data);\n  }\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\n   */\n  cloneWithoutData() {\n    const el = createCanvasElementFor(this);\n    return new (this.constructor as Constructor<this>)(el);\n  }\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\n   * var myObject;\n   * var dataURL = canvas.toDataURL({\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\n   * });\n   */\n  toDataURL(options = {} as TDataUrlOptions): string {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toDataURL(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n  toBlob(options = {} as TDataUrlOptions): Promise<Blob | null> {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toBlob(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n\n  /**\n   * Create a new HTMLCanvas element painted with the current canvas content.\n   * No need to resize the actual one or repaint it.\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\n   * create quick image copies of a canvas without passing for the dataUrl string\n   * @param {Number} [multiplier] a zoom factor.\n   * @param {Object} [options] Cropping informations\n   * @param {Number} [options.left] Cropping left offset.\n   * @param {Number} [options.top] Cropping top offset.\n   * @param {Number} [options.width] Cropping width.\n   * @param {Number} [options.height] Cropping height.\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   */\n  toCanvasElement(\n    multiplier = 1,\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions,\n  ): HTMLCanvasElement {\n    const scaledWidth = (width || this.width) * multiplier,\n      scaledHeight = (height || this.height) * multiplier,\n      zoom = this.getZoom(),\n      originalWidth = this.width,\n      originalHeight = this.height,\n      originalSkipControlsDrawing = this.skipControlsDrawing,\n      newZoom = zoom * multiplier,\n      vp = this.viewportTransform,\n      translateX = (vp[4] - (left || 0)) * multiplier,\n      translateY = (vp[5] - (top || 0)) * multiplier,\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\n      originalRetina = this.enableRetinaScaling,\n      canvasEl = createCanvasElementFor({\n        width: scaledWidth,\n        height: scaledHeight,\n      }),\n      objectsToRender = filter\n        ? this._objects.filter((obj) => filter(obj))\n        : this._objects;\n    this.enableRetinaScaling = false;\n    this.viewportTransform = newVp;\n    this.width = scaledWidth;\n    this.height = scaledHeight;\n    this.skipControlsDrawing = true;\n    this.calcViewportBoundaries();\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\n    this.viewportTransform = vp;\n    this.width = originalWidth;\n    this.height = originalHeight;\n    this.calcViewportBoundaries();\n    this.enableRetinaScaling = originalRetina;\n    this.skipControlsDrawing = originalSkipControlsDrawing;\n    return canvasEl;\n  }\n\n  /**\n   * Waits until rendering has settled to destroy the canvas\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\n   * @throws if aborted by a consequent call\n   */\n  dispose() {\n    !this.disposed &&\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\n    runningAnimations.cancelByCanvas(this);\n    this.disposed = true;\n    return new Promise<boolean>((resolve, reject) => {\n      const task = () => {\n        this.destroy();\n        resolve(true);\n      };\n      task.kill = reject;\n      if (this.__cleanupTask) {\n        this.__cleanupTask.kill('aborted');\n      }\n\n      if (this.destroyed) {\n        resolve(false);\n      } else if (this.nextRenderHandle) {\n        this.__cleanupTask = task;\n      } else {\n        task();\n      }\n    });\n  }\n\n  /**\n   * Clears the canvas element, disposes objects and frees resources.\n   *\n   * Invoked as part of the **async** operation of {@link dispose}.\n   *\n   * **CAUTION**:\n   *\n   * This method is **UNSAFE**.\n   * You may encounter a race condition using it if there's a requested render.\n   * Call this method only if you are sure rendering has settled.\n   * Consider using {@link dispose} as it is **SAFE**\n   *\n   * @private\n   */\n  destroy() {\n    this.destroyed = true;\n    this.cancelRequestedRender();\n    this.forEachObject((object) => object.dispose());\n    this._objects = [];\n    if (this.backgroundImage) {\n      this.backgroundImage.dispose();\n    }\n    this.backgroundImage = undefined;\n    if (this.overlayImage) {\n      this.overlayImage.dispose();\n    }\n    this.overlayImage = undefined;\n    this.elements.dispose();\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String} string representation of an instance\n   */\n  toString() {\n    return `#<Canvas (${this.complexity()}): { objects: ${\n      this._objects.length\n    } }>`;\n  }\n}\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { getScrollLeftTop } from './dom_misc';\n\nconst touchEvents = ['touchstart', 'touchmove', 'touchend'];\n\nfunction getTouchInfo(event: TouchEvent | MouseEvent): MouseEvent | Touch {\n  const touchProp = (event as TouchEvent).changedTouches;\n  if (touchProp && touchProp[0]) {\n    return touchProp[0];\n  }\n  return event as MouseEvent;\n}\n\nexport const getPointer = (event: TPointerEvent): Point => {\n  const element = event.target as HTMLElement,\n    scroll = getScrollLeftTop(element),\n    _evt = getTouchInfo(event);\n  return new Point(_evt.clientX + scroll.left, _evt.clientY + scroll.top);\n};\n\nexport const isTouchEvent = (event: TPointerEvent) =>\n  touchEvents.includes(event.type) ||\n  (event as PointerEvent).pointerType === 'touch';\n\nexport const stopEvent = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n","import type { XY } from '../../Point';\nimport type { TBBox } from '../../typedefs';\n\n/**\n * Calculates bounding box (left, top, width, height) from given `points`\n * @param {XY[]} points\n * @return {Object} Object with left, top, width, height properties\n */\nexport const makeBoundingBoxFromPoints = (points: XY[]): TBBox => {\n  let left = 0,\n    top = 0,\n    width = 0,\n    height = 0;\n\n  for (let i = 0, len = points.length; i < len; i++) {\n    const { x, y } = points[i];\n    if (x > width || !i) width = x;\n    if (x < left || !i) left = x;\n    if (y > height || !i) height = y;\n    if (y < top || !i) top = y;\n  }\n\n  return {\n    left,\n    top,\n    width: width - left,\n    height: height - top,\n  };\n};\n","import { Point } from '../../Point';\nimport { CENTER } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { makeBoundingBoxFromPoints } from './boundingBoxFromPoints';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from './matrix';\n\n/**\n * given an object and a transform, apply the inverse transform to the object,\n * this is equivalent to remove from that object that transformation, so that\n * added in a space with the removed transform, the object will be the same as before.\n * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n * Removing from an object a transform that rotate by 30deg is like rotating by 30deg\n * in the opposite direction.\n * This util is used to add objects inside transformed groups or nested groups.\n * @param {FabricObject} object the object you want to transform\n * @param {TMat2D} transform the destination transform\n */\nexport const removeTransformFromObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const inverted = invertTransform(transform),\n    finalTransform = multiplyTransformMatrices(\n      inverted,\n      object.calcOwnMatrix(),\n    );\n  applyTransformToObject(object, finalTransform);\n};\n\n/**\n * given an object and a transform, apply the transform to the object.\n * this is equivalent to change the space where the object is drawn.\n * Adding to an object a transform that scale by 2 is like scaling it by 2.\n * This is used when removing an object from an active selection for example.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const addTransformToObject = (object: FabricObject, transform: TMat2D) =>\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(transform, object.calcOwnMatrix()),\n  );\n\n/**\n * discard an object transform state and apply the one from the matrix.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const applyTransformToObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const { translateX, translateY, scaleX, scaleY, ...otherOptions } =\n      qrDecompose(transform),\n    center = new Point(translateX, translateY);\n  object.flipX = false;\n  object.flipY = false;\n  Object.assign(object, otherOptions);\n  object.set({ scaleX, scaleY });\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n/**\n * reset an object transform state to neutral. Top and left are not accounted for\n * @param  {FabricObject} target object to transform\n */\nexport const resetObjectTransform = (target: FabricObject) => {\n  target.scaleX = 1;\n  target.scaleY = 1;\n  target.skewX = 0;\n  target.skewY = 0;\n  target.flipX = false;\n  target.flipY = false;\n  target.rotate(0);\n};\n\n/**\n * Extract Object transform values\n * @param  {FabricObject} target object to read from\n * @return {Object} Components of transform\n */\nexport const saveObjectTransform = (target: FabricObject) => ({\n  scaleX: target.scaleX,\n  scaleY: target.scaleY,\n  skewX: target.skewX,\n  skewY: target.skewY,\n  angle: target.angle,\n  left: target.left,\n  flipX: target.flipX,\n  flipY: target.flipY,\n  top: target.top,\n});\n\n/**\n * given a width and height, return the size of the bounding box\n * that can contains the box with width/height with applied transform.\n * Use to calculate the boxes around objects for controls.\n * @param {Number} width\n * @param {Number} height\n * @param {TMat2D} t\n * @returns {Point} size\n */\nexport const sizeAfterTransform = (\n  width: number,\n  height: number,\n  t: TMat2D,\n) => {\n  const dimX = width / 2,\n    dimY = height / 2,\n    points = [\n      new Point(-dimX, -dimY),\n      new Point(dimX, -dimY),\n      new Point(-dimX, dimY),\n      new Point(dimX, dimY),\n    ].map((p) => p.transform(t)),\n    bbox = makeBoundingBoxFromPoints(points);\n  return new Point(bbox.width, bbox.height);\n};\n","import { iMatrix } from '../../constants';\nimport type { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { invertTransform, multiplyTransformMatrices } from './matrix';\nimport { applyTransformToObject } from './objectTransforms';\n\n/**\n * We are actually looking for the transformation from the destination plane to the source plane (change of basis matrix)\\\n * The object will exist on the destination plane and we want it to seem unchanged by it so we invert the destination matrix (`to`) and then apply the source matrix (`from`)\n * @param [from]\n * @param [to]\n * @returns\n */\nexport const calcPlaneChangeMatrix = (\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n) => multiplyTransformMatrices(invertTransform(to), from);\n\n/**\n * Sends a point from the source coordinate plane to the destination coordinate plane.\\\n * From the canvas/viewer's perspective the point remains unchanged.\n *\n * @example <caption>Send point from canvas plane to group plane</caption>\n * var obj = new Rect({ left: 20, top: 20, width: 60, height: 60, strokeWidth: 0 });\n * var group = new Group([obj], { strokeWidth: 0 });\n * var sentPoint1 = sendPointToPlane(new Point(50, 50), undefined, group.calcTransformMatrix());\n * var sentPoint2 = sendPointToPlane(new Point(50, 50), iMatrix, group.calcTransformMatrix());\n * console.log(sentPoint1, sentPoint2) //  both points print (0,0) which is the center of group\n *\n * @param {Point} point\n * @param {TMat2D} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `point` exists in the canvas coordinate plane.\n * @param {TMat2D} [to] destination plane matrix to contain object. Passing `undefined` means `point` should be sent to the canvas coordinate plane.\n * @returns {Point} transformed point\n */\nexport const sendPointToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to));\n\n/**\n * See {@link sendPointToPlane}\n */\nexport const sendVectorToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to), true);\n\n/**\n *\n * A util that abstracts applying transform to objects.\\\n * Sends `object` to the destination coordinate plane by applying the relevant transformations.\\\n * Changes the space/plane where `object` is drawn.\\\n * From the canvas/viewer's perspective `object` remains unchanged.\n *\n * @example <caption>Move clip path from one object to another while preserving it's appearance as viewed by canvas/viewer</caption>\n * let obj, obj2;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * // render\n * sendObjectToPlane(clipPath, obj.calcTransformMatrix(), obj2.calcTransformMatrix());\n * obj.clipPath = undefined;\n * obj2.clipPath = clipPath;\n * // render, clipPath now clips obj2 but seems unchanged from the eyes of the viewer\n *\n * @example <caption>Clip an object's clip path with an existing object</caption>\n * let obj, existingObj;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * let transformTo = multiplyTransformMatrices(obj.calcTransformMatrix(), clipPath.calcTransformMatrix());\n * sendObjectToPlane(existingObj, existingObj.group?.calcTransformMatrix(), transformTo);\n * clipPath.clipPath = existingObj;\n *\n * @param {FabricObject} object\n * @param {Matrix} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `object` is a direct child of canvas.\n * @param {Matrix} [to] destination plane matrix to contain object. Passing `undefined` means `object` should be sent to the canvas coordinate plane.\n * @returns {Matrix} the transform matrix that was applied to `object`\n */\nexport const sendObjectToPlane = (\n  object: FabricObject,\n  from?: TMat2D,\n  to?: TMat2D,\n): TMat2D => {\n  const t = calcPlaneChangeMatrix(from, to);\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(t, object.calcOwnMatrix()),\n  );\n  return t;\n};\n","import type {\n  ObjectModificationEvents,\n  TModificationEvents,\n} from '../EventTypeDefs';\n\nexport const fireEvent = (\n  eventName: TModificationEvents,\n  options: ObjectModificationEvents[typeof eventName],\n) => {\n  const {\n    transform: { target },\n  } = options;\n  target.canvas?.fire(`object:${eventName}`, {\n    ...options,\n    target,\n  });\n  target.fire(eventName, options);\n};\n","import type { TOriginX, TOriginY } from '../../typedefs';\n\nconst originOffset = {\n  left: -0.5,\n  top: -0.5,\n  center: 0,\n  bottom: 0.5,\n  right: 0.5,\n};\n/**\n * Resolves origin value relative to center\n * @private\n * @param {TOriginX | TOriginY} originValue originX / originY\n * @returns number\n */\n\nexport const resolveOrigin = (\n  originValue: TOriginX | TOriginY | number,\n): number =>\n  typeof originValue === 'string'\n    ? originOffset[originValue]\n    : originValue - 0.5;\n","import type {\n  TPointerEvent,\n  Transform,\n  TransformAction,\n  BasicTransformEvent,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TOriginX, TOriginY } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\nimport { CENTER } from '../constants';\n\nexport const NOT_ALLOWED_CURSOR = 'not-allowed';\n\n/**\n * @param {Boolean} alreadySelected true if target is already selected\n * @param {String} corner a string representing the corner ml, mr, tl ...\n * @param {Event} e Event object\n * @param {FabricObject} [target] inserted back to help overriding. Unused\n */\nexport const getActionFromCorner = (\n  alreadySelected: boolean,\n  corner: string | undefined,\n  e: TPointerEvent,\n  target: FabricObject,\n) => {\n  if (!corner || !alreadySelected) {\n    return 'drag';\n  }\n  const control = target.controls[corner];\n  return control.getActionName(e, control, target);\n};\n\n/**\n * Checks if transform is centered\n * @param {Object} transform transform data\n * @return {Boolean} true if transform is centered\n */\nexport function isTransformCentered(transform: Transform) {\n  return (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) &&\n    resolveOrigin(transform.originY) === resolveOrigin(CENTER)\n  );\n}\n\nexport function invertOrigin(origin: TOriginX | TOriginY) {\n  return -resolveOrigin(origin) + 0.5;\n}\n\nexport const isLocked = (\n  target: FabricObject,\n  lockingKey:\n    | 'lockMovementX'\n    | 'lockMovementY'\n    | 'lockRotation'\n    | 'lockScalingX'\n    | 'lockScalingY'\n    | 'lockSkewingX'\n    | 'lockSkewingY'\n    | 'lockScalingFlip',\n) => target[lockingKey];\n\nexport const commonEventInfo: TransformAction<\n  Transform,\n  BasicTransformEvent\n> = (eventData, transform, x, y) => {\n  return {\n    e: eventData,\n    transform,\n    pointer: new Point(x, y),\n  };\n};\n\n/**\n * Combine control position and object angle to find the control direction compared\n * to the object center.\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n * @param {Control} control the control class\n * @return {Number} 0 - 7 a quadrant number\n */\nexport function findCornerQuadrant(\n  fabricObject: FabricObject,\n  control: Control,\n): number {\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle(),\n    cornerAngle =\n      angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n  return Math.round((cornerAngle % 360) / 45);\n}\n\n/**\n * @returns the normalized point (rotated relative to center) in local coordinates\n */\nfunction normalizePoint(\n  target: FabricObject,\n  point: Point,\n  originX: TOriginX,\n  originY: TOriginY,\n): Point {\n  const center = target.getRelativeCenterPoint(),\n    p =\n      typeof originX !== 'undefined' && typeof originY !== 'undefined'\n        ? target.translateToGivenOrigin(\n            center,\n            CENTER,\n            CENTER,\n            originX,\n            originY,\n          )\n        : new Point(target.left, target.top),\n    p2 = target.angle\n      ? point.rotate(-degreesToRadians(target.angle), center)\n      : point;\n  return p2.subtract(p);\n}\n\n/**\n * Transforms a point to the offset from the given origin\n * @param {Object} transform\n * @param {String} originX\n * @param {String} originY\n * @param {number} x\n * @param {number} y\n * @return {Fabric.Point} the normalized point\n */\nexport function getLocalPoint(\n  { target, corner }: Transform,\n  originX: TOriginX,\n  originY: TOriginY,\n  x: number,\n  y: number,\n) {\n  const control = target.controls[corner],\n    zoom = target.canvas?.getZoom() || 1,\n    padding = target.padding / zoom,\n    localPoint = normalizePoint(target, new Point(x, y), originX, originY);\n  if (localPoint.x >= padding) {\n    localPoint.x -= padding;\n  }\n  if (localPoint.x <= -padding) {\n    localPoint.x += padding;\n  }\n  if (localPoint.y >= padding) {\n    localPoint.y -= padding;\n  }\n  if (localPoint.y <= padding) {\n    localPoint.y += padding;\n  }\n  localPoint.x -= control.offsetX;\n  localPoint.y -= control.offsetY;\n  return localPoint;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { LEFT, TOP, MOVING } from '../constants';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo, isLocked } from './util';\n\n/**\n * Action handler\n * @private\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if the translation occurred\n */\nexport const dragHandler: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const { target, offsetX, offsetY } = transform,\n    newLeft = x - offsetX,\n    newTop = y - offsetY,\n    moveX = !isLocked(target, 'lockMovementX') && target.left !== newLeft,\n    moveY = !isLocked(target, 'lockMovementY') && target.top !== newTop;\n  moveX && target.set(LEFT, newLeft);\n  moveY && target.set(TOP, newTop);\n  if (moveX || moveY) {\n    fireEvent(MOVING, commonEventInfo(eventData, transform, x, y));\n  }\n  return moveX || moveY;\n};\n","/**\n * Map of the 148 color names with HEX code\n * @see: https://www.w3.org/TR/css3-color/#svg-color\n */\nexport const ColorNameMap = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#0FF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#00F',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#0FF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgrey: '#A9A9A9',\n  darkgreen: '#006400',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#F0F',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  grey: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgrey: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#789',\n  lightslategrey: '#789',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#0F0',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#F0F',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#639',\n  red: '#F00',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FF0',\n  yellowgreen: '#9ACD32',\n};\n","import type { TRGBAColorSource } from './typedefs';\n\n/**\n * @param {Number} p\n * @param {Number} q\n * @param {Number} t\n * @return {Number}\n */\nexport const hue2rgb = (p: number, q: number, t: number): number => {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\n\n/**\n * Adapted from {@link https://gist.github.com/mjackson/5311256 https://gist.github.com/mjackson}\n * @param {Number} r Red color value\n * @param {Number} g Green color value\n * @param {Number} b Blue color value\n * @param {Number} a Alpha color value pass through\n * @return {TRGBColorSource} Hsl color\n */\nexport const rgb2Hsl = (\n  r: number,\n  g: number,\n  b: number,\n  a: number,\n): TRGBAColorSource => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const maxValue = Math.max(r, g, b),\n    minValue = Math.min(r, g, b);\n\n  let h!: number, s: number;\n  const l = (maxValue + minValue) / 2;\n\n  if (maxValue === minValue) {\n    h = s = 0; // achromatic\n  } else {\n    const d = maxValue - minValue;\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\n    switch (maxValue) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100), a];\n};\n\nexport const fromAlphaToFloat = (value = '1') =>\n  parseFloat(value) / (value.endsWith('%') ? 100 : 1);\n\n/**\n * Convert a value in the inclusive range [0, 255] to hex\n */\nexport const hexify = (value: number) =>\n  Math.min(Math.round(value), 255).toString(16).toUpperCase().padStart(2, '0');\n\n/**\n * Calculate the grey average value for rgb and pass through alpha\n */\nexport const greyAverage = ([\n  r,\n  g,\n  b,\n  a = 1,\n]: TRGBAColorSource): TRGBAColorSource => {\n  const avg = Math.round(r * 0.3 + g * 0.59 + b * 0.11);\n  return [avg, avg, avg, a];\n};\n","import { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { ColorNameMap } from './color_map';\nimport { reHSLa, reHex, reRGBa } from './constants';\nimport type { TRGBAColorSource, TColorArg } from './typedefs';\nimport {\n  hue2rgb,\n  hexify,\n  rgb2Hsl,\n  fromAlphaToFloat,\n  greyAverage,\n} from './util';\n\n/**\n * @class Color common color operations\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors colors}\n */\nexport class Color {\n  private declare _source: TRGBAColorSource;\n  isUnrecognised = false;\n\n  /**\n   *\n   * @param {string} [color] optional in hex or rgb(a) or hsl format or from known color list\n   */\n  constructor(color?: TColorArg) {\n    if (!color) {\n      // we default to black as canvas does\n      this.setSource([0, 0, 0, 1]);\n    } else if (color instanceof Color) {\n      this.setSource([...color._source]);\n    } else if (Array.isArray(color)) {\n      const [r, g, b, a = 1] = color;\n      this.setSource([r, g, b, a]);\n    } else {\n      this.setSource(this._tryParsingColor(color));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} [color] Color value to parse\n   * @returns {TRGBAColorSource}\n   */\n  protected _tryParsingColor(color: string) {\n    color = color.toLowerCase();\n    if (color in ColorNameMap) {\n      color = ColorNameMap[color as keyof typeof ColorNameMap];\n    }\n    return color === 'transparent'\n      ? ([255, 255, 255, 0] as TRGBAColorSource)\n      : Color.sourceFromHex(color) ||\n          Color.sourceFromRgb(color) ||\n          Color.sourceFromHsl(color) ||\n          // color is not recognized\n          // we default to black as canvas does\n          // eslint-disable-next-line no-constant-binary-expression\n          ((this.isUnrecognised = true) && ([0, 0, 0, 1] as TRGBAColorSource));\n  }\n\n  /**\n   * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @return {TRGBAColorSource}\n   */\n  getSource() {\n    return this._source;\n  }\n\n  /**\n   * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @param {TRGBAColorSource} source\n   */\n  setSource(source: TRGBAColorSource) {\n    this._source = source;\n  }\n\n  /**\n   * Returns color representation in RGB format\n   * @return {String} ex: rgb(0-255,0-255,0-255)\n   */\n  toRgb() {\n    const [r, g, b] = this.getSource();\n    return `rgb(${r},${g},${b})`;\n  }\n\n  /**\n   * Returns color representation in RGBA format\n   * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n   */\n  toRgba() {\n    return `rgba(${this.getSource().join(',')})`;\n  }\n\n  /**\n   * Returns color representation in HSL format\n   * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n   */\n  toHsl() {\n    const [h, s, l] = rgb2Hsl(...this.getSource());\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n  /**\n   * Returns color representation in HSLA format\n   * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n   */\n  toHsla() {\n    const [h, s, l, a] = rgb2Hsl(...this.getSource());\n    return `hsla(${h},${s}%,${l}%,${a})`;\n  }\n\n  /**\n   * Returns color representation in HEX format\n   * @return {String} ex: FF5555\n   */\n  toHex() {\n    const fullHex = this.toHexa();\n    return fullHex.slice(0, 6);\n  }\n\n  /**\n   * Returns color representation in HEXA format\n   * @return {String} ex: FF5555CC\n   */\n  toHexa() {\n    const [r, g, b, a] = this.getSource();\n    return `${hexify(r)}${hexify(g)}${hexify(b)}${hexify(Math.round(a * 255))}`;\n  }\n\n  /**\n   * Gets value of alpha channel for this color\n   * @return {Number} 0-1\n   */\n  getAlpha() {\n    return this.getSource()[3];\n  }\n\n  /**\n   * Sets value of alpha channel for this color\n   * @param {Number} alpha Alpha value 0-1\n   * @return {Color} thisArg\n   */\n  setAlpha(alpha: number) {\n    this._source[3] = alpha;\n    return this;\n  }\n\n  /**\n   * Transforms color to its grayscale representation\n   * @return {Color} thisArg\n   */\n  toGrayscale() {\n    this.setSource(greyAverage(this.getSource()));\n    return this;\n  }\n\n  /**\n   * Transforms color to its black and white representation\n   * @param {Number} threshold\n   * @return {Color} thisArg\n   */\n  toBlackWhite(threshold: number) {\n    const [average, , , a] = greyAverage(this.getSource()),\n      bOrW = average < (threshold || 127) ? 0 : 255;\n    this.setSource([bOrW, bOrW, bOrW, a]);\n    return this;\n  }\n\n  /**\n   * Overlays color with another color\n   * @param {String|Color} otherColor\n   * @return {Color} thisArg\n   */\n  overlayWith(otherColor: string | Color) {\n    if (!(otherColor instanceof Color)) {\n      otherColor = new Color(otherColor);\n    }\n\n    const source = this.getSource(),\n      otherAlpha = 0.5,\n      otherSource = otherColor.getSource(),\n      [R, G, B] = source.map((value, index) =>\n        Math.round(value * (1 - otherAlpha) + otherSource[index] * otherAlpha),\n      );\n\n    this.setSource([R, G, B, source[3]]);\n    return this;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {Color}\n   */\n  static fromRgb(color: string): Color {\n    return Color.fromRgba(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromRgba(color: string): Color {\n    return new Color(Color.sourceFromRgb(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromRgb(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reRGBa());\n    if (match) {\n      const [r, g, b] = match.slice(1, 4).map((value) => {\n        const parsedValue = parseFloat(value);\n        return value.endsWith('%')\n          ? Math.round(parsedValue * 2.55)\n          : parsedValue;\n      });\n      return [r, g, b, fromAlphaToFloat(match[4])];\n    }\n  }\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf Color\n   * @return {Color}\n   */\n  static fromHsl(color: string): Color {\n    return Color.fromHsla(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromHsla(color: string): Color {\n    return new Color(Color.sourceFromHsl(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {TRGBAColorSource | undefined} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  static sourceFromHsl(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reHSLa());\n    if (!match) {\n      return;\n    }\n    const match1degrees = Color.parseAngletoDegrees(match[1]);\n\n    const h = (((match1degrees % 360) + 360) % 360) / 360,\n      s = parseFloat(match[2]) / 100,\n      l = parseFloat(match[3]) / 100;\n    let r: number, g: number, b: number;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      const q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n        p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      fromAlphaToFloat(match[4]),\n    ];\n  }\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color Color value ex: FF5555\n   * @return {Color}\n   */\n  static fromHex(color: string): Color {\n    return new Color(Color.sourceFromHex(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromHex(color: string): TRGBAColorSource | undefined {\n    if (color.match(reHex())) {\n      const value = color.slice(color.indexOf('#') + 1),\n        isShortNotation = value.length <= 4;\n      let expandedValue: string[];\n      if (isShortNotation) {\n        expandedValue = value.split('').map((hex) => hex + hex);\n      } else {\n        expandedValue = value.match(/.{2}/g)!;\n      }\n      const [r, g, b, a = 255] = expandedValue.map((hexCouple) =>\n        parseInt(hexCouple, 16),\n      );\n      return [r, g, b, a / 255];\n    }\n  }\n\n  /**\n   * Converts a string that could be any angle notation (50deg, 0.5turn, 2rad)\n   * into degrees without the 'deg' suffix\n   * @static\n   * @memberOf Color\n   * @param {String} value ex: 0deg, 0.5turn, 2rad\n   * @return {Number} number in degrees or NaN if inputs are invalid\n   */\n  static parseAngletoDegrees(value: string): number {\n    const lowercase = value.toLowerCase();\n    const numeric = parseFloat(lowercase);\n\n    if (lowercase.includes('rad')) {\n      return radiansToDegrees(numeric);\n    }\n\n    if (lowercase.includes('turn')) {\n      return numeric * 360;\n    }\n\n    // Value is probably just a number already in degrees eg '50'\n    return numeric;\n  }\n}\n","/**\n * Regex matching color in RGB or RGBA formats (ex: `rgb(0, 0, 0)`, `rgba(255, 100, 10, 0.5)`, `rgba( 255 , 100 , 10 , 0.5 )`, `rgb(1,1,1)`, `rgba(100%, 60%, 10%, 0.5)`)\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\n * Formal syntax at the time of writing:\n * <rgb()> =\n *  rgb( [ <percentage> | none ]{3} [ / [ <alpha-value> | none ] ]? )  |\n *  rgb( [ <number> | none ]{3} [ / [ <alpha-value> | none ] ]? )\n * <alpha-value> = <number> | <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an rgba or rgb CSS color value\n *\n * /^          # Beginning of the string\n * rgba?       # \"rgb\" or \"rgba\"\n * \\(\\s*       # Opening parenthesis and optional whitespace\n * (\\d{0,3}    # 0 to three digits R channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the first color component\n * %?          # Optional percent sign after the first color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits G channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the second color component\n * %?          # Optional percent sign after the second color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits B channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the third color component\n * %?          # Optional percent sign after the third color component\n * \\s*         # Optional whitespace\n * (?:         # Beginning of non-capturing group for alpha value\n *  \\s*        # Optional whitespace\n *  [,/]       # Comma or slash separator for alpha value\n *  \\s*        # Optional whitespace\n *  (\\d{0,3}   # Zero to three digits\n *    (?:\\.\\d+)? # Optional decimal with one or more digits\n *  )          # End of capturing group for alpha value\n *  %?         # Optional percent sign after alpha value\n *  \\s*        # Optional whitespace\n * )?          # End of non-capturing group for alpha value (optional)\n * \\)          # Closing parenthesis\n * $           # End of the string\n *\n * The alpha channel can be in the format 0.4 .7 or 1 or 73%\n *\n * WARNING this regex doesn't fail on off spec colors. it matches everything that could be a color.\n * So the spec does not allow for `rgba(30 , 45%  35, 49%)` but this will work anyways for us\n */\nexport const reRGBa = () =>\n  /^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HSL or HSLA formats (ex: hsl(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\n * Formal syntax at the time of writing:\n * <hsl()> =\n *   hsl( [ <hue> | none ] [ <percentage> | none ] [ <percentage> | none ] [ / [ <alpha-value> | none ] ]? )\n *\n * <hue> =\n *   <number>  |\n *   <angle>\n *\n * <alpha-value> =\n *   <number>      |\n *   <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an hsla or hsl CSS color value\n *\n * /^hsla?\\(         // Matches the beginning of the string and the opening parenthesis of \"hsl\" or \"hsla\"\n * \\s*               // Matches any whitespace characters (space, tab, etc.) zero or more times\n * (\\d{0,3}          // Hue: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Hue: Optional (non capture group) decimal with one or more digits.\n * (?:deg|turn|rad)? // Hue: Optionally include suffix deg or turn or rad\n * )                 // Hue: End capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Saturation: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Saturation: Optional decimal with one or more digits in a non-capturing group\n * %?)               // Saturation: match optional % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Lightness: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Lightness: Optional decimal with one or more digits in a non-capturing group\n * %?)                // Lightness: match % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * (?:               // Alpha: Begins a non-capturing group for the alpha value\n *   \\s*             // Matches any whitespace characters zero or more times\n *   [,/]            // Matches a comma or forward slash\n *   \\s*             // Matches any whitespace characters zero or more times\n *   (\\d*(?:\\.\\d+)?%?) // Matches zero or more digits, optionally followed by a decimal point and one or more digits, followed by an optional percentage sign and captures it in a group\n *   \\s*             // Matches any whitespace characters zero or more times\n * )?                // Makes the alpha value group optional\n * \\)                // Matches the closing parenthesis\n * $/i               // Matches the end of the string and sets the regular expression to case-insensitive mode\n *\n * WARNING this regex doesn't fail on off spec colors. It matches everything that could be a color.\n * So the spec does not allow `hsl(30 , 45%  35, 49%)` but this will work anyways for us.\n */\nexport const reHSLa = () =>\n  /^hsla?\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?(?:deg|turn|rad)?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n */\nexport const reHex = () => /^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i;\n","import { Color } from '../../color/Color';\nimport { config } from '../../config';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, NONE } from '../../constants';\nimport type { TBBox, SVGElementName, SupportedSVGUnit } from '../../typedefs';\nimport { toFixed } from './toFixed';\n\n/**\n * Returns array of attributes for given svg that fabric parses\n * @param {SVGElementName} type Type of svg element (eg. 'circle')\n * @return {Array} string names of supported attributes\n */\nexport const getSvgAttributes = (type: SVGElementName) => {\n  const commonAttributes = ['instantiated_by_use', 'style', 'id', 'class'];\n  switch (type) {\n    case 'linearGradient':\n      return commonAttributes.concat([\n        'x1',\n        'y1',\n        'x2',\n        'y2',\n        'gradientUnits',\n        'gradientTransform',\n      ]);\n    case 'radialGradient':\n      return commonAttributes.concat([\n        'gradientUnits',\n        'gradientTransform',\n        'cx',\n        'cy',\n        'r',\n        'fx',\n        'fy',\n        'fr',\n      ]);\n    case 'stop':\n      return commonAttributes.concat(['offset', 'stop-color', 'stop-opacity']);\n  }\n  return commonAttributes;\n};\n\n/**\n * Converts from attribute value to pixel value if applicable.\n * Returns converted pixels or original value not converted.\n * @param {string} value number to operate on\n * @param {number} fontSize\n * @return {number}\n */\nexport const parseUnit = (value: string, fontSize = DEFAULT_SVG_FONT_SIZE) => {\n  const unit = /\\D{0,2}$/.exec(value),\n    number = parseFloat(value);\n  const dpi = config.DPI;\n  switch (unit?.[0] as SupportedSVGUnit) {\n    case 'mm':\n      return (number * dpi) / 25.4;\n\n    case 'cm':\n      return (number * dpi) / 2.54;\n\n    case 'in':\n      return number * dpi;\n\n    case 'pt':\n      return (number * dpi) / 72; // or * 4 / 3\n\n    case 'pc':\n      return ((number * dpi) / 72) * 12; // or * 16\n\n    case 'em':\n      return number * fontSize;\n\n    default:\n      return number;\n  }\n};\n\nexport type MeetOrSlice = 'meet' | 'slice';\n\nexport type MinMidMax = 'Min' | 'Mid' | 'Max' | 'none';\n\nexport type TPreserveArParsed = {\n  meetOrSlice: MeetOrSlice;\n  alignX: MinMidMax;\n  alignY: MinMidMax;\n};\n\n// align can be either none or undefined or a combination of mid/max\nconst parseAlign = (align: string): MinMidMax[] => {\n  //divide align in alignX and alignY\n  if (align && align !== NONE) {\n    return [align.slice(1, 4) as MinMidMax, align.slice(5, 8) as MinMidMax];\n  } else if (align === NONE) {\n    return [align, align];\n  }\n  return ['Mid', 'Mid'];\n};\n\n/**\n * Parse preserveAspectRatio attribute from element\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n * @param {string} attribute to be parsed\n * @return {Object} an object containing align and meetOrSlice attribute\n */\nexport const parsePreserveAspectRatioAttribute = (\n  attribute: string,\n): TPreserveArParsed => {\n  const [firstPart, secondPart] = attribute.trim().split(' ') as [\n    MinMidMax,\n    MeetOrSlice | undefined,\n  ];\n  const [alignX, alignY] = parseAlign(firstPart);\n  return {\n    meetOrSlice: secondPart || 'meet',\n    alignX,\n    alignY,\n  };\n};\n\n/**\n * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n * @param prop\n * @param value\n * @param {boolean} inlineStyle The default is inline style, the separator used is \":\", The other is \"=\"\n * @returns\n */\nexport const colorPropToSVG = (\n  prop: string,\n  value?: any,\n  inlineStyle = true,\n) => {\n  let colorValue;\n  let opacityValue;\n  if (!value) {\n    colorValue = 'none';\n  } else if (value.toLive) {\n    colorValue = `url(#SVGID_${value.id})`;\n  } else {\n    const color = new Color(value),\n      opacity = color.getAlpha();\n\n    colorValue = color.toRgb();\n    if (opacity !== 1) {\n      opacityValue = opacity.toString();\n    }\n  }\n  if (inlineStyle) {\n    return `${prop}: ${colorValue}; ${\n      opacityValue ? `${prop}-opacity: ${opacityValue}; ` : ''\n    }`;\n  } else {\n    return `${prop}=\"${colorValue}\" ${\n      opacityValue ? `${prop}-opacity=\"${opacityValue}\" ` : ''\n    }`;\n  }\n};\n\nexport const createSVGRect = (\n  color: string,\n  { left, top, width, height }: TBBox,\n  precision = config.NUM_FRACTION_DIGITS,\n) => {\n  const svgColor = colorPropToSVG(FILL, color, false);\n  const [x, y, w, h] = [left, top, width, height].map((value) =>\n    toFixed(value, precision),\n  );\n  return `<rect ${svgColor} x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"></rect>`;\n};\n","import type { TSVGReviver } from '../../typedefs';\nimport { uid } from '../../util/internals/uid';\nimport { colorPropToSVG } from '../../util/misc/svgParsing';\nimport { FILL, NONE, STROKE } from '../../constants';\nimport type { FabricObject } from './FabricObject';\nimport { isFiller } from '../../util/typeAssertions';\nimport { matrixToSVG } from '../../util/misc/svgExport';\n\nexport class FabricObjectSVGExportMixin {\n  /**\n   * When an object is being exported as SVG as a clippath, a reference inside the SVG is needed.\n   * This reference is a UID in the fabric namespace and is temporary stored here.\n   * @type {String}\n   */\n  declare clipPathId?: string;\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    skipShadow?: boolean,\n  ) {\n    const fillRule = this.fillRule ? this.fillRule : 'nonzero',\n      strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n      strokeDashArray = this.strokeDashArray\n        ? this.strokeDashArray.join(' ')\n        : NONE,\n      strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n      strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n      strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n      strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n      opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n      visibility = this.visible ? '' : ' visibility: hidden;',\n      filter = skipShadow ? '' : this.getSvgFilter(),\n      fill = colorPropToSVG(FILL, this.fill),\n      stroke = colorPropToSVG(STROKE, this.stroke);\n\n    return [\n      stroke,\n      'stroke-width: ',\n      strokeWidth,\n      '; ',\n      'stroke-dasharray: ',\n      strokeDashArray,\n      '; ',\n      'stroke-linecap: ',\n      strokeLineCap,\n      '; ',\n      'stroke-dashoffset: ',\n      strokeDashOffset,\n      '; ',\n      'stroke-linejoin: ',\n      strokeLineJoin,\n      '; ',\n      'stroke-miterlimit: ',\n      strokeMiterLimit,\n      '; ',\n      fill,\n      'fill-rule: ',\n      fillRule,\n      '; ',\n      'opacity: ',\n      opacity,\n      ';',\n      filter,\n      visibility,\n    ].join('');\n  }\n\n  /**\n   * Returns filter for svg shadow\n   * @return {String}\n   */\n  getSvgFilter(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.shadow ? `filter: url(#SVGID_${this.shadow.id});` : '';\n  }\n\n  /**\n   * Returns id attribute for svg output\n   * @return {String}\n   */\n  getSvgCommons(\n    this: FabricObjectSVGExportMixin & FabricObject & { id?: string },\n  ) {\n    return [\n      this.id ? `id=\"${this.id}\" ` : '',\n      this.clipPath\n        ? `clip-path=\"url(#${\n            (this.clipPath as FabricObjectSVGExportMixin & FabricObject)\n              .clipPathId\n          })\" `\n        : '',\n    ].join('');\n  }\n\n  /**\n   * Returns transform-string for svg-export\n   * @param {Boolean} use the full transform or the single object one.\n   * @return {String}\n   */\n  getSvgTransform(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    full?: boolean,\n    additionalTransform = '',\n  ) {\n    const transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n      svgTransform = `transform=\"${matrixToSVG(transform)}`;\n    return `${svgTransform}${additionalTransform}\" `;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * This function is implemented in each subclass\n   * This is just because typescript otherwise cryies all the time\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(_reviver?: TSVGReviver): string[] {\n    return [''];\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return this._createBaseSVGMarkup(this._toSVG(reviver), {\n      reviver,\n    });\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver,\n      })\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createBaseClipPathSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      reviver,\n      additionalTransform = '',\n    }: { reviver?: TSVGReviver; additionalTransform?: string } = {},\n  ) {\n    const commonPieces = [\n        this.getSvgTransform(true, additionalTransform),\n        this.getSvgCommons(),\n      ].join(''),\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    objectMarkup[index] = commonPieces;\n    return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _createBaseSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      noStyle,\n      reviver,\n      withShadow,\n      additionalTransform,\n    }: {\n      noStyle?: boolean;\n      reviver?: TSVGReviver;\n      withShadow?: boolean;\n      additionalTransform?: string;\n    } = {},\n  ): string {\n    const styleInfo = noStyle ? '' : `style=\"${this.getSvgStyles()}\" `,\n      shadowInfo = withShadow ? `style=\"${this.getSvgFilter()}\" ` : '',\n      clipPath = this.clipPath as FabricObjectSVGExportMixin & FabricObject,\n      vectorEffect = this.strokeUniform\n        ? 'vector-effect=\"non-scaling-stroke\" '\n        : '',\n      absoluteClipPath = clipPath && clipPath.absolutePositioned,\n      stroke = this.stroke,\n      fill = this.fill,\n      shadow = this.shadow,\n      markup = [],\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    let clipPathMarkup;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      clipPathMarkup = `<clipPath id=\"${\n        clipPath.clipPathId\n      }\" >\\n${clipPath.toClipPathSVG(reviver)}</clipPath>\\n`;\n    }\n    if (absoluteClipPath) {\n      markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n    }\n    markup.push(\n      '<g ',\n      this.getSvgTransform(false),\n      !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n      ' >\\n',\n    );\n    const commonPieces = [\n      styleInfo,\n      vectorEffect,\n      noStyle ? '' : this.addPaintOrder(),\n      ' ',\n      additionalTransform ? `transform=\"${additionalTransform}\" ` : '',\n    ].join('');\n    objectMarkup[index] = commonPieces;\n    if (isFiller(fill)) {\n      markup.push(fill.toSVG(this));\n    }\n    if (isFiller(stroke)) {\n      markup.push(stroke.toSVG(this));\n    }\n    if (shadow) {\n      markup.push(shadow.toSVG(this));\n    }\n    if (clipPath) {\n      markup.push(clipPathMarkup);\n    }\n    markup.push(objectMarkup.join(''));\n    markup.push('</g>\\n');\n    absoluteClipPath && markup.push('</g>\\n');\n    return reviver ? reviver(markup.join('')) : markup.join('');\n  }\n\n  addPaintOrder(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.paintFirst !== FILL ? ` paint-order=\"${this.paintFirst}\" ` : '';\n  }\n}\n","export function getSvgRegex(arr: string[]) {\n  return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n}\n","import { FILL, LEFT, STROKE, reNewline } from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { FabricText } from './Text';\n\nexport const TEXT_DECORATION_THICKNESS = 'textDecorationThickness';\n\nconst fontProperties = [\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontStyle',\n] as const;\n\nexport const textDecorationProperties = [\n  'underline',\n  'overline',\n  'linethrough',\n] as const;\n\nexport const textLayoutProperties: string[] = [\n  ...fontProperties,\n  'lineHeight',\n  'text',\n  'charSpacing',\n  'textAlign',\n  'styles',\n  'path',\n  'pathStartOffset',\n  'pathSide',\n  'pathAlign',\n];\n\nexport const additionalProps = [\n  ...textLayoutProperties,\n  ...textDecorationProperties,\n  'textBackgroundColor',\n  'direction',\n  TEXT_DECORATION_THICKNESS,\n] as const;\n\nexport type StylePropertiesType =\n  | 'fill'\n  | 'stroke'\n  | 'strokeWidth'\n  | 'fontSize'\n  | 'fontFamily'\n  | 'fontWeight'\n  | 'fontStyle'\n  | 'textBackgroundColor'\n  | 'deltaY'\n  | 'overline'\n  | 'underline'\n  | 'linethrough'\n  | typeof TEXT_DECORATION_THICKNESS;\n\nexport const styleProperties: Readonly<StylePropertiesType[]> = [\n  ...fontProperties,\n  ...textDecorationProperties,\n  STROKE,\n  'strokeWidth',\n  FILL,\n  'deltaY',\n  'textBackgroundColor',\n  TEXT_DECORATION_THICKNESS,\n] as const;\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textDefaultValues: Partial<TClassProperties<FabricText>> = {\n  _reNewline: reNewline,\n  _reSpacesAndTabs: /[ \\t\\r]/g,\n  _reSpaceAndTab: /[ \\t\\r]/,\n  _reWords: /\\S+/g,\n  fontSize: 40,\n  fontWeight: 'normal',\n  fontFamily: 'Times New Roman',\n  underline: false,\n  overline: false,\n  linethrough: false,\n  textAlign: LEFT,\n  fontStyle: 'normal',\n  lineHeight: 1.16,\n  textBackgroundColor: '',\n  stroke: null,\n  shadow: null,\n  path: undefined,\n  pathStartOffset: 0,\n  pathSide: LEFT,\n  pathAlign: 'baseline',\n  charSpacing: 0,\n  deltaY: 0,\n  direction: 'ltr',\n  CACHE_FONT_SIZE: 400,\n  MIN_TEXT_WIDTH: 2,\n  // Text magic numbers\n  superscript: {\n    size: 0.6, // fontSize factor\n    baseline: -0.35, // baseline-shift factor (upwards)\n  },\n  subscript: {\n    size: 0.6, // fontSize factor\n    baseline: 0.11, // baseline-shift factor (downwards)\n  },\n  _fontSizeFraction: 0.222,\n  offsets: {\n    underline: 0.1,\n    linethrough: -0.28167, // added 1/30 to original number\n    overline: -0.81333, // added 1/15 to original number\n  },\n  _fontSizeMult: 1.13,\n  [TEXT_DECORATION_THICKNESS]: 66.667, // before implementation was 1/15\n};\n\nexport const JUSTIFY = 'justify';\nexport const JUSTIFY_LEFT = 'justify-left';\nexport const JUSTIFY_RIGHT = 'justify-right';\nexport const JUSTIFY_CENTER = 'justify-center';\n","import { getSvgRegex } from './getSvgRegex';\nimport { LEFT, TOP } from '../constants';\nimport { TEXT_DECORATION_THICKNESS } from '../shapes/Text/constants';\n\n// matches, e.g.: +14.56e-12, etc.\nexport const reNum = String.raw`[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?`;\nexport const viewportSeparator = String.raw`(?:\\s*,?\\s+|\\s*,\\s*)`;\n\nexport const svgNS = 'http://www.w3.org/2000/svg';\n\nexport const reFontDeclaration = new RegExp(\n  '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n    reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' +\n    reNum +\n    '))?\\\\s+(.*)',\n);\n\nexport const svgValidTagNames = [\n    'path',\n    'circle',\n    'polygon',\n    'polyline',\n    'ellipse',\n    'rect',\n    'line',\n    'image',\n    'text',\n  ],\n  svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n  svgInvalidAncestors = [\n    'pattern',\n    'defs',\n    'symbol',\n    'metadata',\n    'clipPath',\n    'mask',\n    'desc',\n  ],\n  svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n  attributesMap = {\n    cx: LEFT,\n    x: LEFT,\n    r: 'radius',\n    cy: TOP,\n    y: TOP,\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform',\n    'image-rendering': 'imageSmoothing',\n    'text-decoration-thickness': TEXT_DECORATION_THICKNESS,\n  },\n  fSize = 'font-size',\n  cPath = 'clip-path';\n\nexport const svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n\nexport const svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n\nexport const svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n// http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\nexport const reViewBoxAttrValue = new RegExp(\n  String.raw`^\\s*(${reNum})${viewportSeparator}(${reNum})${viewportSeparator}(${reNum})${viewportSeparator}(${reNum})\\s*$`,\n);\n","import type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n\nconst unitVectorX = new Point(1, 0);\nconst zero = new Point();\n\n/**\n * Rotates `vector` with `radians`\n * @param {Point} vector The vector to rotate (x and y)\n * @param {Number} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotateVector = (vector: Point, radians: TRadian) =>\n  vector.rotate(radians);\n\n/**\n * Creates a vector from points represented as a point\n *\n * @param {Point} from\n * @param {Point} to\n * @returns {Point} vector\n */\nexport const createVector = (from: XY, to: XY): Point =>\n  new Point(to).subtract(from);\n\n/**\n * return the magnitude of a vector\n * @return {number}\n */\nexport const magnitude = (point: Point) => point.distanceFrom(zero);\n\n/**\n * Calculates the angle between 2 vectors\n * @param {Point} a\n * @param {Point} b\n * @returns the angle in radians from `a` to `b`\n */\nexport const calcAngleBetweenVectors = (a: Point, b: Point): TRadian =>\n  Math.atan2(crossProduct(a, b), dotProduct(a, b)) as TRadian;\n\n/**\n * Calculates the angle between the x axis and the vector\n * @param {Point} v\n * @returns the angle in radians of `v`\n */\nexport const calcVectorRotation = (v: Point) =>\n  calcAngleBetweenVectors(unitVectorX, v);\n\n/**\n * @param {Point} v\n * @returns {Point} vector representing the unit vector pointing to the direction of `v`\n */\nexport const getUnitVector = (v: Point): Point =>\n  v.eq(zero) ? v : v.scalarDivide(magnitude(v));\n\n/**\n * @param {Point} v\n * @param {Boolean} [counterClockwise] the direction of the orthogonal vector, defaults to `true`\n * @returns {Point} the unit orthogonal vector\n */\nexport const getOrthonormalVector = (\n  v: Point,\n  counterClockwise = true,\n): Point =>\n  getUnitVector(new Point(-v.y, v.x).scalarMultiply(counterClockwise ? 1 : -1));\n\n/**\n * Cross product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number} the magnitude of Z vector\n */\nexport const crossProduct = (a: Point, b: Point): number =>\n  a.x * b.y - a.y * b.x;\n\n/**\n * Dot product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number}\n */\nexport const dotProduct = (a: Point, b: Point): number => a.x * b.x + a.y * b.y;\n\n/**\n * Checks if the vector is between two others. It is considered\n * to be inside when the vector to be tested is between the\n * initial vector and the final vector (included) in a counterclockwise direction.\n * @param {Point} t vector to be tested\n * @param {Point} a initial vector\n * @param {Point} b final vector\n * @returns {boolean} true if the vector is among the others\n */\nexport const isBetweenVectors = (t: Point, a: Point, b: Point): boolean => {\n  if (t.eq(a) || t.eq(b)) return true;\n  const AxB = crossProduct(a, b),\n    AxT = crossProduct(a, t),\n    BxT = crossProduct(b, t);\n  return AxB >= 0 ? AxT >= 0 && BxT <= 0 : !(AxT <= 0 && BxT >= 0);\n};\n","import { classRegistry } from './ClassRegistry';\nimport { Color } from './color/Color';\nimport { config } from './config';\nimport { reNum } from './parser/constants';\nimport { Point } from './Point';\nimport type { FabricObject } from './shapes/Object/FabricObject';\nimport type { TClassProperties } from './typedefs';\nimport { uid } from './util/internals/uid';\nimport { pickBy } from './util/misc/pick';\nimport { degreesToRadians } from './util/misc/radiansDegreesConversion';\nimport { toFixed } from './util/misc/toFixed';\nimport { rotateVector } from './util/misc/vectors';\n\n/**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * - (?:\\s|^): This part captures either a whitespace character (\\s) or the beginning of a line (^). It's non-capturing (due to (?:...)), meaning it doesn't create a capturing group.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: This captures the first component of the shadow, which is the horizontal offset. Breaking it down:\n   *   - (-?\\d+): Captures an optional minus sign followed by one or more digits (integer part of the number).\n   *   - (?:\\.\\d*)?: Optionally captures a decimal point followed by zero or more digits (decimal part of the number).\n   *   - (?:px)?: Optionally captures the \"px\" unit.\n   *   - (?:\\s?|$): Captures either an optional whitespace or the end of the line. This whole part is wrapped in a non-capturing group and marked as optional with ?.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: Similar to the previous step, this captures the vertical offset.\n\n(\\d+(?:\\.\\d*)?(?:px)?)?: This captures the blur radius. It's similar to the horizontal offset but without the optional minus sign.\n\n(?:\\s+(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?){0,1}: This captures an optional part for the color. It allows for whitespace followed by a component with an optional minus sign, digits, decimal point, and \"px\" unit.\n\n(?:$|\\s): This captures either the end of the line or a whitespace character. It ensures that the match ends either at the end of the string or with a whitespace character.\n   */\n// eslint-disable-next-line max-len\n\nconst shadowOffsetRegex = '(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?';\n\nconst reOffsetsAndBlur = new RegExp(\n  '(?:\\\\s|^)' +\n    shadowOffsetRegex +\n    shadowOffsetRegex +\n    '(' +\n    reNum +\n    '?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)',\n);\n\nexport const shadowDefaultValues: Partial<TClassProperties<Shadow>> = {\n  color: 'rgb(0,0,0)',\n  blur: 0,\n  offsetX: 0,\n  offsetY: 0,\n  affectStroke: false,\n  includeDefaultValues: true,\n  nonScaling: false,\n};\n\nexport type SerializedShadowOptions = {\n  color: string;\n  blur: number;\n  offsetX: number;\n  offsetY: number;\n  affectStroke: boolean;\n  nonScaling: boolean;\n  type: string;\n};\n\nexport class Shadow {\n  /**\n   * Shadow color\n   * @type String\n   * @default\n   */\n  declare color: string;\n\n  /**\n   * Shadow blur\n   * @type Number\n   */\n  declare blur: number;\n\n  /**\n   * Shadow horizontal offset\n   * @type Number\n   * @default\n   */\n  declare offsetX: number;\n\n  /**\n   * Shadow vertical offset\n   * @type Number\n   * @default\n   */\n  declare offsetY: number;\n\n  /**\n   * Whether the shadow should affect stroke operations\n   * @type Boolean\n   * @default\n   */\n  declare affectStroke: boolean;\n\n  /**\n   * Indicates whether toObject should include default values\n   * @type Boolean\n   * @default\n   */\n  declare includeDefaultValues: boolean;\n\n  /**\n   * When `false`, the shadow will scale with the object.\n   * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n   * default to false\n   * @type Boolean\n   * @default\n   */\n  declare nonScaling: boolean;\n\n  declare id: number;\n\n  static ownDefaults = shadowDefaultValues;\n\n  static type = 'shadow';\n\n  /**\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n   */\n  constructor(options: Partial<TClassProperties<Shadow>>);\n  constructor(svgAttribute: string);\n  constructor(arg0: string | Partial<TClassProperties<Shadow>>) {\n    const options: Partial<TClassProperties<Shadow>> =\n      typeof arg0 === 'string' ? Shadow.parseShadow(arg0) : arg0;\n    Object.assign(this, Shadow.ownDefaults, options);\n    this.id = uid();\n  }\n\n  /**\n   * @param {String} value Shadow value to parse\n   * @return {Object} Shadow object with color, offsetX, offsetY and blur\n   */\n  static parseShadow(value: string) {\n    const shadowStr = value.trim(),\n      [, offsetX = 0, offsetY = 0, blur = 0] = (\n        reOffsetsAndBlur.exec(shadowStr) || []\n      ).map((value) => parseFloat(value) || 0),\n      color = (shadowStr.replace(reOffsetsAndBlur, '') || 'rgb(0,0,0)').trim();\n\n    return {\n      color,\n      offsetX,\n      offsetY,\n      blur,\n    };\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n   * @return {String} Returns CSS3 text-shadow declaration\n   */\n  toString() {\n    return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n  }\n\n  /**\n   * Returns SVG representation of a shadow\n   * @param {FabricObject} object\n   * @return {String} SVG representation of a shadow\n   */\n  toSVG(object: FabricObject) {\n    const offset = rotateVector(\n        new Point(this.offsetX, this.offsetY),\n        degreesToRadians(-object.angle),\n      ),\n      BLUR_BOX = 20,\n      color = new Color(this.color);\n    let fBoxX = 40,\n      fBoxY = 40;\n\n    if (object.width && object.height) {\n      //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n      // we add some extra space to filter box to contain the blur ( 20 )\n      fBoxX =\n        toFixed(\n          (Math.abs(offset.x) + this.blur) / object.width,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n      fBoxY =\n        toFixed(\n          (Math.abs(offset.y) + this.blur) / object.height,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n    }\n    if (object.flipX) {\n      offset.x *= -1;\n    }\n    if (object.flipY) {\n      offset.y *= -1;\n    }\n\n    return `<filter id=\"SVGID_${this.id}\" y=\"-${fBoxY}%\" height=\"${\n      100 + 2 * fBoxY\n    }%\" x=\"-${fBoxX}%\" width=\"${\n      100 + 2 * fBoxX\n    }%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"${toFixed(\n      this.blur ? this.blur / 2 : 0,\n      config.NUM_FRACTION_DIGITS,\n    )}\"></feGaussianBlur>\\n\\t<feOffset dx=\"${toFixed(\n      offset.x,\n      config.NUM_FRACTION_DIGITS,\n    )}\" dy=\"${toFixed(\n      offset.y,\n      config.NUM_FRACTION_DIGITS,\n    )}\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"${color.toRgb()}\" flood-opacity=\"${color.getAlpha()}\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n`;\n  }\n\n  /**\n   * Returns object representation of a shadow\n   * @return {Object} Object representation of a shadow instance\n   */\n  toObject() {\n    const data: SerializedShadowOptions = {\n      color: this.color,\n      blur: this.blur,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      affectStroke: this.affectStroke,\n      nonScaling: this.nonScaling,\n      type: (this.constructor as typeof Shadow).type,\n    };\n    const defaults = Shadow.ownDefaults as SerializedShadowOptions;\n    return !this.includeDefaultValues\n      ? pickBy(data, (value, key) => value !== defaults[key])\n      : data;\n  }\n\n  static async fromObject(options: Partial<TClassProperties<Shadow>>) {\n    return new this(options);\n  }\n}\n\nclassRegistry.setClass(Shadow, 'shadow');\n","export const capValue = (min: number, value: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n","import {\n  TOP,\n  LEFT,\n  SCALE_Y,\n  SCALE_X,\n  SKEW_X,\n  SKEW_Y,\n  FILL,\n  STROKE,\n} from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { InteractiveFabricObject } from './InteractiveObject';\nimport type { FabricObject } from './Object';\n\nexport const stateProperties = [\n  TOP,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  'flipX',\n  'flipY',\n  'originX',\n  'originY',\n  'angle',\n  'opacity',\n  'globalCompositeOperation',\n  'shadow',\n  'visible',\n  SKEW_X,\n  SKEW_Y,\n];\n\nexport const cacheProperties = [\n  FILL,\n  STROKE,\n  'strokeWidth',\n  'strokeDashArray',\n  'width',\n  'height',\n  'paintFirst',\n  'strokeUniform',\n  'strokeLineCap',\n  'strokeDashOffset',\n  'strokeLineJoin',\n  'strokeMiterLimit',\n  'backgroundColor',\n  'clipPath',\n];\n\nexport const fabricObjectDefaultValues: Partial<\n  TClassProperties<FabricObject>\n> = {\n  // see composeMatrix() to see order of transforms. First defaults listed based on this\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  angle: 0,\n  flipX: false,\n  flipY: false,\n  scaleX: 1,\n  scaleY: 1,\n  minScaleLimit: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: LEFT,\n  originY: TOP,\n  strokeWidth: 1,\n  strokeUniform: false,\n  padding: 0,\n  opacity: 1,\n  paintFirst: FILL,\n  fill: 'rgb(0,0,0)',\n  fillRule: 'nonzero',\n  stroke: null,\n  strokeDashArray: null,\n  strokeDashOffset: 0,\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  strokeMiterLimit: 4,\n  globalCompositeOperation: 'source-over',\n  backgroundColor: '',\n  shadow: null,\n  visible: true,\n  includeDefaultValues: true,\n  excludeFromExport: false,\n  objectCaching: true,\n  clipPath: undefined,\n  inverted: false,\n  absolutePositioned: false,\n  centeredRotation: true,\n  centeredScaling: false,\n  dirty: true,\n} as const;\n\nexport const interactiveObjectDefaultValues: Partial<\n  TClassProperties<InteractiveFabricObject>\n> = {\n  noScaleCache: true,\n  lockMovementX: false,\n  lockMovementY: false,\n  lockRotation: false,\n  lockScalingX: false,\n  lockScalingY: false,\n  lockSkewingX: false,\n  lockSkewingY: false,\n  lockScalingFlip: false,\n  cornerSize: 13,\n  touchCornerSize: 24,\n  transparentCorners: true,\n  cornerColor: 'rgb(178,204,255)',\n  cornerStrokeColor: '',\n  cornerStyle: 'rect',\n  cornerDashArray: null,\n  hasControls: true,\n  borderColor: 'rgb(178,204,255)',\n  borderDashArray: null,\n  borderOpacityWhenMoving: 0.4,\n  borderScaleFactor: 1,\n  hasBorders: true,\n  selectionBackgroundColor: '',\n  selectable: true,\n  evented: true,\n  perPixelTargetFind: false,\n  activeOn: 'down',\n  hoverCursor: null,\n  moveCursor: null,\n};\n","/**\n * Easing functions\n * @see {@link http://gizma.com/easing/ Easing Equations by Robert Penner}\n */\n\nimport { twoMathPi, halfPI } from '../../constants';\nimport type { TEasingFunction } from './types';\n\nconst normalize = (a: number, c: number, p: number, s: number) => {\n  if (a < Math.abs(c)) {\n    a = c;\n    s = p / 4;\n  } else {\n    //handle the 0/0 case:\n    if (c === 0 && a === 0) {\n      s = (p / twoMathPi) * Math.asin(1);\n    } else {\n      s = (p / twoMathPi) * Math.asin(c / a);\n    }\n  }\n  return { a, c, p, s };\n};\n\nconst elastic = (\n  a: number,\n  s: number,\n  p: number,\n  t: number,\n  d: number,\n): number =>\n  a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * twoMathPi) / p);\n\n/**\n * Default sinusoidal easing\n */\nexport const defaultEasing: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Cubic easing in\n */\nexport const easeInCubic: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 3 + b;\n\n/**\n * Cubic easing out\n */\nexport const easeOutCubic: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 3 + 1) + b;\n\n/**\n * Cubic easing in and out\n */\nexport const easeInOutCubic: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 3 + b;\n  }\n  return (c / 2) * ((t - 2) ** 3 + 2) + b;\n};\n\n/**\n * Quartic easing in\n */\nexport const easeInQuart: TEasingFunction = (t, b, c, d) =>\n  c * (t /= d) * t ** 3 + b;\n\n/**\n * Quartic easing out\n */\nexport const easeOutQuart: TEasingFunction = (t, b, c, d) =>\n  -c * ((t = t / d - 1) * t ** 3 - 1) + b;\n\n/**\n * Quartic easing in and out\n */\nexport const easeInOutQuart: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 4 + b;\n  }\n  return (-c / 2) * ((t -= 2) * t ** 3 - 2) + b;\n};\n\n/**\n * Quintic easing in\n */\nexport const easeInQuint: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 5 + b;\n\n/**\n * Quintic easing out\n */\nexport const easeOutQuint: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 5 + 1) + b;\n\n/**\n * Quintic easing in and out\n */\nexport const easeInOutQuint: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 5 + b;\n  }\n  return (c / 2) * ((t - 2) ** 5 + 2) + b;\n};\n\n/**\n * Sinusoidal easing in\n */\nexport const easeInSine: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Sinusoidal easing out\n */\nexport const easeOutSine: TEasingFunction = (t, b, c, d) =>\n  c * Math.sin((t / d) * halfPI) + b;\n\n/**\n * Sinusoidal easing in and out\n */\nexport const easeInOutSine: TEasingFunction = (t, b, c, d) =>\n  (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n\n/**\n * Exponential easing in\n */\nexport const easeInExpo: TEasingFunction = (t, b, c, d) =>\n  t === 0 ? b : c * 2 ** (10 * (t / d - 1)) + b;\n\n/**\n * Exponential easing out\n */\nexport const easeOutExpo: TEasingFunction = (t, b, c, d) =>\n  t === d ? b + c : c * -(2 ** ((-10 * t) / d) + 1) + b;\n\n/**\n * Exponential easing in and out\n */\nexport const easeInOutExpo: TEasingFunction = (t, b, c, d) => {\n  if (t === 0) {\n    return b;\n  }\n  if (t === d) {\n    return b + c;\n  }\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * 2 ** (10 * (t - 1)) + b;\n  }\n  return (c / 2) * -(2 ** (-10 * --t) + 2) + b;\n};\n\n/**\n * Circular easing in\n */\nexport const easeInCirc: TEasingFunction = (t, b, c, d) =>\n  -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\n/**\n * Circular easing out\n */\nexport const easeOutCirc: TEasingFunction = (t, b, c, d) =>\n  c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\n/**\n * Circular easing in and out\n */\nexport const easeInOutCirc: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (-c / 2) * (Math.sqrt(1 - t ** 2) - 1) + b;\n  }\n  return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n};\n\n/**\n * Elastic easing in\n */\nexport const easeInElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP } = normalize(a, c, p, s);\n  return -elastic(normA, normS, normP, t, d) + b;\n};\n\n/**\n * Elastic easing out\n */\nexport const easeOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  return (\n    normA * 2 ** (-10 * t) * Math.sin(((t * d - normS) * twoMathPi) / normP) +\n    normC +\n    b\n  );\n};\n\n/**\n * Elastic easing in and out\n */\nexport const easeInOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d / 2;\n  if (t === 2) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * (0.3 * 1.5);\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  if (t < 1) {\n    return -0.5 * elastic(normA, normS, normP, t, d) + b;\n  }\n  return (\n    normA *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - normS) * twoMathPi) / normP) *\n      0.5 +\n    normC +\n    b\n  );\n};\n\n/**\n * Backwards easing in\n */\nexport const easeInBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * (t /= d) * t * ((s + 1) * t - s) + b;\n\n/**\n * Backwards easing out\n */\nexport const easeOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\n/**\n * Backwards easing in and out\n */\nexport const easeInOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n  }\n  return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n};\n\n/**\n * Bouncing easing out\n */\nexport const easeOutBounce: TEasingFunction = (t, b, c, d) => {\n  if ((t /= d) < 1 / 2.75) {\n    return c * (7.5625 * t * t) + b;\n  } else if (t < 2 / 2.75) {\n    return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n  } else if (t < 2.5 / 2.75) {\n    return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n  } else {\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n};\n\n/**\n * Bouncing easing in\n */\nexport const easeInBounce: TEasingFunction = (t, b, c, d) =>\n  c - easeOutBounce(d - t, 0, c, d) + b;\n\n/**\n * Bouncing easing in and out\n */\nexport const easeInOutBounce: TEasingFunction = (t, b, c, d) =>\n  t < d / 2\n    ? easeInBounce(t * 2, 0, c, d) * 0.5 + b\n    : easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\n/**\n * Quadratic easing in\n */\nexport const easeInQuad: TEasingFunction = (t, b, c, d) => c * (t /= d) * t + b;\n\n/**\n * Quadratic easing out\n */\nexport const easeOutQuad: TEasingFunction = (t, b, c, d) =>\n  -c * (t /= d) * (t - 2) + b;\n\n/**\n * Quadratic easing in and out\n */\nexport const easeInOutQuad: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 2 + b;\n  }\n  return (-c / 2) * (--t * (t - 2) - 1) + b;\n};\n","import { noop } from '../../constants';\nimport { requestAnimFrame } from './AnimationFrameProvider';\nimport { runningAnimations } from './AnimationRegistry';\nimport { defaultEasing } from './easing';\nimport type {\n  AnimationState,\n  TAbortCallback,\n  TBaseAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultAbort = () => false;\n\nexport abstract class AnimationBase<\n  T extends number | number[] = number | number[],\n> {\n  declare readonly startValue: T;\n  declare readonly endValue: T;\n  declare readonly duration: number;\n  declare readonly delay: number;\n\n  protected declare readonly byValue: T;\n  protected declare readonly easing: TEasingFunction<T>;\n\n  private declare readonly _onStart: VoidFunction;\n  private declare readonly _onChange: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _onComplete: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _abort: TAbortCallback<T>;\n\n  /**\n   * Used to register the animation to a target object\n   * so that it can be cancelled within the object context\n   */\n  declare readonly target?: unknown;\n\n  private _state: AnimationState = 'pending';\n  /**\n   * Time %, or the ratio of `timeElapsed / duration`\n   * @see tick\n   */\n  durationProgress = 0;\n  /**\n   * Value %, or the ratio of `(currentValue - startValue) / (endValue - startValue)`\n   */\n  valueProgress = 0;\n  /**\n   * Current value\n   */\n  declare value: T;\n  /**\n   * Animation start time ms\n   */\n  private declare startTime: number;\n\n  constructor({\n    startValue,\n    byValue,\n    duration = 500,\n    delay = 0,\n    easing = defaultEasing,\n    onStart = noop,\n    onChange = noop,\n    onComplete = noop,\n    abort = defaultAbort,\n    target,\n  }: TBaseAnimationOptions<T>) {\n    this.tick = this.tick.bind(this);\n\n    this.duration = duration;\n    this.delay = delay;\n    this.easing = easing;\n    this._onStart = onStart;\n    this._onChange = onChange;\n    this._onComplete = onComplete;\n    this._abort = abort;\n    this.target = target;\n\n    this.startValue = startValue;\n    this.byValue = byValue;\n    this.value = this.startValue;\n    this.endValue = Object.freeze(this.calculate(this.duration).value);\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  isDone() {\n    return this._state === 'aborted' || this._state === 'completed';\n  }\n\n  /**\n   * Calculate the current value based on the easing parameters\n   * @param timeElapsed in ms\n   * @protected\n   */\n  protected abstract calculate(timeElapsed: number): {\n    value: T;\n    valueProgress: number;\n  };\n\n  start() {\n    const firstTick: FrameRequestCallback = (timestamp) => {\n      if (this._state !== 'pending') return;\n      this.startTime = timestamp || +new Date();\n      this._state = 'running';\n      this._onStart();\n      this.tick(this.startTime);\n    };\n\n    this.register();\n\n    // setTimeout(cb, 0) will run cb on the next frame, causing a delay\n    // we don't want that\n    if (this.delay > 0) {\n      setTimeout(() => requestAnimFrame(firstTick), this.delay);\n    } else {\n      requestAnimFrame(firstTick);\n    }\n  }\n\n  private tick(t: number) {\n    const durationMs = (t || +new Date()) - this.startTime;\n    const boundDurationMs = Math.min(durationMs, this.duration);\n    this.durationProgress = boundDurationMs / this.duration;\n    const { value, valueProgress } = this.calculate(boundDurationMs);\n    this.value = Object.freeze(value);\n    this.valueProgress = valueProgress;\n\n    if (this._state === 'aborted') {\n      return;\n    } else if (\n      this._abort(this.value, this.valueProgress, this.durationProgress)\n    ) {\n      this._state = 'aborted';\n      this.unregister();\n    } else if (durationMs >= this.duration) {\n      this.durationProgress = this.valueProgress = 1;\n      this._onChange(this.endValue, this.valueProgress, this.durationProgress);\n      this._state = 'completed';\n      this._onComplete(\n        this.endValue,\n        this.valueProgress,\n        this.durationProgress,\n      );\n      this.unregister();\n    } else {\n      this._onChange(this.value, this.valueProgress, this.durationProgress);\n      requestAnimFrame(this.tick);\n    }\n  }\n\n  private register() {\n    runningAnimations.push(this as unknown as AnimationBase);\n  }\n\n  private unregister() {\n    runningAnimations.remove(this as unknown as AnimationBase);\n  }\n\n  abort() {\n    this._state = 'aborted';\n    this.unregister();\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ValueAnimationOptions } from './types';\n\nexport class ValueAnimation extends AnimationBase<number> {\n  constructor({\n    startValue = 0,\n    endValue = 100,\n    ...otherOptions\n  }: ValueAnimationOptions) {\n    super({\n      ...otherOptions,\n      startValue,\n      byValue: endValue - startValue,\n    });\n  }\n\n  protected calculate(timeElapsed: number) {\n    const value = this.easing(\n      timeElapsed,\n      this.startValue,\n      this.byValue,\n      this.duration,\n    );\n    return {\n      value,\n      valueProgress: Math.abs((value - this.startValue) / this.byValue),\n    };\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ArrayAnimationOptions } from './types';\n\nexport class ArrayAnimation extends AnimationBase<number[]> {\n  constructor({\n    startValue = [0],\n    endValue = [100],\n    ...options\n  }: ArrayAnimationOptions) {\n    super({\n      ...options,\n      startValue,\n      byValue: endValue.map((value, i) => value - startValue[i]),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const values = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    );\n    return {\n      value: values,\n      valueProgress: Math.abs(\n        (values[0] - this.startValue[0]) / this.byValue[0],\n      ),\n    };\n  }\n}\n","import { Color } from '../../color/Color';\nimport type { TRGBAColorSource } from '../../color/typedefs';\nimport { halfPI } from '../../constants';\nimport { capValue } from '../misc/capValue';\nimport { AnimationBase } from './AnimationBase';\nimport type {\n  ColorAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultColorEasing: TEasingFunction = (\n  timeElapsed,\n  startValue,\n  byValue,\n  duration,\n) => {\n  const durationProgress = 1 - Math.cos((timeElapsed / duration) * halfPI);\n  return startValue + byValue * durationProgress;\n};\n\nconst wrapColorCallback = <R>(\n  callback?: TOnAnimationChangeCallback<string, R>,\n) =>\n  callback &&\n  ((rgba: TRGBAColorSource, valueProgress: number, durationProgress: number) =>\n    callback(new Color(rgba).toRgba(), valueProgress, durationProgress));\n\nexport class ColorAnimation extends AnimationBase<TRGBAColorSource> {\n  constructor({\n    startValue,\n    endValue,\n    easing = defaultColorEasing,\n    onChange,\n    onComplete,\n    abort,\n    ...options\n  }: ColorAnimationOptions) {\n    const startColor = new Color(startValue).getSource();\n    const endColor = new Color(endValue).getSource();\n    super({\n      ...options,\n      startValue: startColor,\n      byValue: endColor.map(\n        (value, i) => value - startColor[i],\n      ) as TRGBAColorSource,\n      easing,\n      onChange: wrapColorCallback(onChange),\n      onComplete: wrapColorCallback(onComplete),\n      abort: wrapColorCallback(abort),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const [r, g, b, a] = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    ) as TRGBAColorSource;\n    const value = [\n      ...[r, g, b].map(Math.round),\n      capValue(0, a, 1),\n    ] as TRGBAColorSource;\n    return {\n      value,\n      valueProgress:\n        // to correctly calculate the change ratio we must find a changed value\n        value\n          .map((p, i) =>\n            this.byValue[i] !== 0\n              ? Math.abs((p - this.startValue[i]) / this.byValue[i])\n              : 0,\n          )\n          .find((p) => p !== 0) || 0,\n    };\n  }\n}\n","import { ValueAnimation } from './ValueAnimation';\nimport { ArrayAnimation } from './ArrayAnimation';\nimport { ColorAnimation } from './ColorAnimation';\nimport type {\n  ValueAnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n} from './types';\nimport type { TColorArg } from '../../color/typedefs';\n\nexport type TAnimation<T extends number | number[] | TColorArg> =\n  T extends TColorArg\n    ? ColorAnimation\n    : T extends number[]\n      ? ArrayAnimation\n      : ValueAnimation;\n\nconst isArrayAnimation = (\n  options: ArrayAnimationOptions | ValueAnimationOptions,\n): options is ArrayAnimationOptions => {\n  return Array.isArray(options.startValue) || Array.isArray(options.endValue);\n};\n\n/**\n * Changes value(s) from startValue to endValue within a certain period of time,\n * invoking callbacks as the value(s) change.\n *\n * @example\n * animate({\n *   startValue: 1,\n *   endValue: 0,\n *   onChange: (v) => {\n *     obj.set('opacity', v);\n *     // since we are running in a requested frame we should call `renderAll` and not `requestRenderAll`\n *     canvas.renderAll();\n *   }\n * });\n *\n * @example Using lists:\n * animate({\n *   startValue: [1, 2, 3],\n *   endValue: [2, 4, 6],\n *   onChange: ([x, y, zoom]) => {\n *     canvas.zoomToPoint(new Point(x, y), zoom);\n *     canvas.renderAll();\n *   }\n * });\n *\n */\nexport function animate(options: ArrayAnimationOptions): ArrayAnimation;\nexport function animate(options: ValueAnimationOptions): ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n>(\n  options: T,\n): T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n  R extends T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation,\n>(options: T): R {\n  const animation = (\n    isArrayAnimation(options)\n      ? new ArrayAnimation(options)\n      : new ValueAnimation(options)\n  ) as R;\n  animation.start();\n  return animation;\n}\n\nexport function animateColor(options: ColorAnimationOptions) {\n  const animation = new ColorAnimation(options);\n  animation.start();\n  return animation;\n}\n","import { Point } from './Point';\nimport { createVector } from './util/misc/vectors';\n\n/* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\nexport type IntersectionType = 'Intersection' | 'Coincident' | 'Parallel';\n\nexport class Intersection {\n  declare points: Point[];\n\n  declare status?: IntersectionType;\n\n  constructor(status?: IntersectionType) {\n    this.status = status;\n    this.points = [];\n  }\n\n  /**\n   * Used to verify if a point is alredy in the collection\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  private includes(point: Point): boolean {\n    return this.points.some((p) => p.eq(point));\n  }\n\n  /**\n   * Appends points of intersection\n   * @param {...Point[]} points\n   * @return {Intersection} thisArg\n   * @chainable\n   */\n  private append(...points: Point[]): Intersection {\n    this.points = this.points.concat(\n      points.filter((point) => {\n        return !this.includes(point);\n      }),\n    );\n    return this;\n  }\n\n  /**\n   * check if point T is on the segment or line defined between A and B\n   *\n   * @param {Point} T the point we are checking for\n   * @param {Point} A one extremity of the segment\n   * @param {Point} B the other extremity of the segment\n   * @param [infinite] if true checks if `T` is on the line defined by `A` and `B`\n   * @returns true if `T` is contained\n   */\n  static isPointContained(T: Point, A: Point, B: Point, infinite = false) {\n    if (A.eq(B)) {\n      // Edge case: the segment is a point, we check for coincidence,\n      // infinite param has no meaning because there are infinite lines to consider\n      return T.eq(A);\n    } else if (A.x === B.x) {\n      // Edge case: horizontal line.\n      // we first check if T.x has the same value, and then if T.y is contained between A.y and B.y\n      return (\n        T.x === A.x &&\n        (infinite || (T.y >= Math.min(A.y, B.y) && T.y <= Math.max(A.y, B.y)))\n      );\n    } else if (A.y === B.y) {\n      // Edge case: vertical line.\n      // we first check if T.y has the same value, and then if T.x is contained between A.x and B.x\n      return (\n        T.y === A.y &&\n        (infinite || (T.x >= Math.min(A.x, B.x) && T.x <= Math.max(A.x, B.x)))\n      );\n    } else {\n      // Generic case: sloped line.\n      // we check that AT has the same slope as AB\n      // for the segment case we need both the vectors to have the same direction and for AT to be lte AB in size\n      // for the infinite case we check the absolute value of the slope, since direction is meaningless\n      const AB = createVector(A, B);\n      const AT = createVector(A, T);\n      const s = AT.divide(AB);\n      return infinite\n        ? Math.abs(s.x) === Math.abs(s.y)\n        : s.x === s.y && s.x >= 0 && s.x <= 1;\n    }\n  }\n\n  /**\n   * Use the ray casting algorithm to determine if {@link Point} is in the polygon defined by [points]{@link Point}\n   * @see https://en.wikipedia.org/wiki/Point_in_polygon\n   * @param point\n   * @param points polygon points\n   * @returns\n   */\n  static isPointInPolygon(point: Point, points: Point[]) {\n    const other = new Point(point).setX(\n      Math.min(point.x - 1, ...points.map((p) => p.x)),\n    );\n    let hits = 0;\n    for (let index = 0; index < points.length; index++) {\n      const inter = this.intersectSegmentSegment(\n        // polygon side\n        points[index],\n        points[(index + 1) % points.length],\n        // ray\n        point,\n        other,\n      );\n      if (inter.includes(point)) {\n        // point is on the polygon side\n        return true;\n      }\n      hits += Number(inter.status === 'Intersection');\n    }\n    return hits % 2 === 1;\n  }\n\n  /**\n   * Checks if a line intersects another\n   * @see {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection line intersection}\n   * @see {@link https://en.wikipedia.org/wiki/Cramer%27s_rule Cramer's rule}\n   * @static\n   * @param {Point} a1\n   * @param {Point} a2\n   * @param {Point} b1\n   * @param {Point} b2\n   * @param {boolean} [aInfinite=true] check segment intersection by passing `false`\n   * @param {boolean} [bInfinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLineLine(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n    aInfinite = true,\n    bInfinite = true,\n  ): Intersection {\n    const a2xa1x = a2.x - a1.x,\n      a2ya1y = a2.y - a1.y,\n      b2xb1x = b2.x - b1.x,\n      b2yb1y = b2.y - b1.y,\n      a1xb1x = a1.x - b1.x,\n      a1yb1y = a1.y - b1.y,\n      uaT = b2xb1x * a1yb1y - b2yb1y * a1xb1x,\n      ubT = a2xa1x * a1yb1y - a2ya1y * a1xb1x,\n      uB = b2yb1y * a2xa1x - b2xb1x * a2ya1y;\n    if (uB !== 0) {\n      const ua = uaT / uB,\n        ub = ubT / uB;\n      if (\n        (aInfinite || (0 <= ua && ua <= 1)) &&\n        (bInfinite || (0 <= ub && ub <= 1))\n      ) {\n        return new Intersection('Intersection').append(\n          new Point(a1.x + ua * a2xa1x, a1.y + ua * a2ya1y),\n        );\n      } else {\n        return new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        const segmentsCoincide =\n          aInfinite ||\n          bInfinite ||\n          Intersection.isPointContained(a1, b1, b2) ||\n          Intersection.isPointContained(a2, b1, b2) ||\n          Intersection.isPointContained(b1, a1, a2) ||\n          Intersection.isPointContained(b2, a1, a2);\n        return new Intersection(segmentsCoincide ? 'Coincident' : undefined);\n      } else {\n        return new Intersection('Parallel');\n      }\n    }\n  }\n\n  /**\n   * Checks if a segment intersects a line\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} s1 boundary point of segment\n   * @param {Point} s2 other boundary point of segment\n   * @param {Point} l1 point on line\n   * @param {Point} l2 other point on line\n   * @return {Intersection}\n   */\n  static intersectSegmentLine(\n    s1: Point,\n    s2: Point,\n    l1: Point,\n    l2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(s1, s2, l1, l2, false, true);\n  }\n\n  /**\n   * Checks if a segment intersects another\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point} b1 boundary point of segment\n   * @param {Point} b2 other boundary point of segment\n   * @return {Intersection}\n   */\n  static intersectSegmentSegment(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(a1, a2, b1, b2, false, false);\n  }\n\n  /**\n   * Checks if line intersects polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @see {@link intersectSegmentPolygon} for segment intersection\n   * @param {Point} a1 point on line\n   * @param {Point} a2 other point on line\n   * @param {Point[]} points polygon points\n   * @param {boolean} [infinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLinePolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n    infinite = true,\n  ): Intersection {\n    const result = new Intersection();\n    const length = points.length;\n\n    for (let i = 0, b1, b2, inter; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2, infinite, false);\n      if (inter.status === 'Coincident') {\n        return inter;\n      }\n      result.append(...inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if segment intersects polygon\n   * @static\n   * @see {@link intersectLinePolygon} for line intersection\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point[]} points polygon points\n   * @return {Intersection}\n   */\n  static intersectSegmentPolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n  ): Intersection {\n    return Intersection.intersectLinePolygon(a1, a2, points, false);\n  }\n\n  /**\n   * Checks if polygon intersects another polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @param {Point[]} points1\n   * @param {Point[]} points2\n   * @return {Intersection}\n   */\n  static intersectPolygonPolygon(\n    points1: Point[],\n    points2: Point[],\n  ): Intersection {\n    const result = new Intersection(),\n      length = points1.length;\n    const coincidences: Intersection[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const a1 = points1[i],\n        a2 = points1[(i + 1) % length],\n        inter = Intersection.intersectSegmentPolygon(a1, a2, points2);\n      if (inter.status === 'Coincident') {\n        coincidences.push(inter);\n        result.append(a1, a2);\n      } else {\n        result.append(...inter.points);\n      }\n    }\n\n    if (coincidences.length > 0 && coincidences.length === points1.length) {\n      return new Intersection('Coincident');\n    } else if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @see {@link intersectPolygonPolygon} for polygon intersection\n   * @param {Point[]} points polygon points\n   * @param {Point} r1 top left point of rect\n   * @param {Point} r2 bottom right point of rect\n   * @return {Intersection}\n   */\n  static intersectPolygonRectangle(\n    points: Point[],\n    r1: Point,\n    r2: Point,\n  ): Intersection {\n    const min = r1.min(r2),\n      max = r1.max(r2),\n      topRight = new Point(max.x, min.y),\n      bottomLeft = new Point(min.x, max.y);\n\n    return Intersection.intersectPolygonPolygon(points, [\n      min,\n      topRight,\n      max,\n      bottomLeft,\n    ]);\n  }\n}\n","import type {\n  TBBox,\n  TCornerPoint,\n  TDegree,\n  TMat2D,\n  TOriginX,\n  TOriginY,\n} from '../../typedefs';\nimport { SCALE_X, SCALE_Y, iMatrix } from '../../constants';\nimport { Intersection } from '../../Intersection';\nimport { Point } from '../../Point';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  createRotateMatrix,\n  createTranslateMatrix,\n  composeMatrix,\n  invertTransform,\n  multiplyTransformMatrices,\n  transformPoint,\n  calcPlaneRotation,\n} from '../../util/misc/matrix';\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type { ControlProps } from './types/ControlProps';\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\nimport type { Group } from '../Group';\nimport { calcDimensionsMatrix } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport { CommonMethods } from '../../CommonMethods';\nimport type { BaseProps } from './types/BaseProps';\nimport type { FillStrokeProps } from './types/FillStrokeProps';\nimport { CENTER, LEFT, TOP } from '../../constants';\n\ntype TMatrixCache = {\n  key: number[];\n  value: TMat2D;\n};\n\ntype TACoords = TCornerPoint;\n\nexport class ObjectGeometry<EventSpec extends ObjectEvents = ObjectEvents>\n  extends CommonMethods<EventSpec>\n  implements\n    Pick<ControlProps, 'padding'>,\n    BaseProps,\n    Pick<FillStrokeProps, 'strokeWidth' | 'strokeUniform'>\n{\n  // #region Geometry\n\n  declare padding: number;\n\n  /**\n   * Describe object's corner position in scene coordinates.\n   * The coordinates are derived from the following:\n   * left, top, width, height, scaleX, scaleY, skewX, skewY, angle, strokeWidth.\n   * The coordinates do not depend on viewport changes.\n   * The coordinates get updated with {@link setCoords}.\n   * You can calculate them without updating with {@link calcACoords()}\n   */\n  declare aCoords: TACoords;\n\n  /**\n   * storage cache for object transform matrix\n   */\n  declare ownMatrixCache?: TMatrixCache;\n\n  /**\n   * storage cache for object full transform matrix\n   */\n  declare matrixCache?: TMatrixCache;\n\n  /**\n   * A Reference of the Canvas where the object is actually added\n   * @type StaticCanvas | Canvas;\n   * @default undefined\n   * @private\n   */\n  declare canvas?: StaticCanvas | Canvas;\n\n  /**\n   * @returns {number} x position according to object's {@link FabricObject#originX} property in canvas coordinate plane\n   */\n  getX(): number {\n    return this.getXY().x;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link FabricObject#originX} property in canvas coordinate plane\n   */\n  setX(value: number) {\n    this.setXY(this.getXY().setX(value));\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link FabricObject#originY} property in canvas coordinate plane\n   */\n  getY(): number {\n    return this.getXY().y;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link FabricObject#originY} property in canvas coordinate plane\n   */\n  setY(value: number) {\n    this.setXY(this.getXY().setY(value));\n  }\n\n  /**\n   * @returns {number} x position according to object's {@link FabricObject#originX} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getX}\n   */\n  getRelativeX(): number {\n    return this.left;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link FabricObject#originX} property in parent's coordinate plane\\\n   * if parent is canvas then this method is identical to {@link setX}\n   */\n  setRelativeX(value: number) {\n    this.left = value;\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link FabricObject#originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getY}\n   */\n  getRelativeY(): number {\n    return this.top;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link FabricObject#originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link setY}\n   */\n  setRelativeY(value: number) {\n    this.top = value;\n  }\n\n  /**\n   * @returns {Point} x position according to object's {@link FabricObject#originX} {@link FabricObject#originY} properties in canvas coordinate plane\n   */\n  getXY(): Point {\n    const relativePosition = this.getRelativeXY();\n    return this.group\n      ? transformPoint(relativePosition, this.group.calcTransformMatrix())\n      : relativePosition;\n  }\n\n  /**\n   * Set an object position to a particular point, the point is intended in absolute ( canvas ) coordinate.\n   * You can specify {@link FabricObject#originX} and {@link FabricObject#originY} values,\n   * that otherwise are the object's current values.\n   * @example <caption>Set object's bottom left corner to point (5,5) on canvas</caption>\n   * object.setXY(new Point(5, 5), 'left', 'bottom').\n   * @param {Point} point position in scene coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setXY(point: Point, originX?: TOriginX, originY?: TOriginY) {\n    if (this.group) {\n      point = transformPoint(\n        point,\n        invertTransform(this.group.calcTransformMatrix()),\n      );\n    }\n    this.setRelativeXY(point, originX, originY);\n  }\n\n  /**\n   * @returns {Point} x,y position according to object's {@link FabricObject#originX} {@link FabricObject#originY} properties in parent's coordinate plane\n   */\n  getRelativeXY(): Point {\n    return new Point(this.left, this.top);\n  }\n\n  /**\n   * As {@link setXY}, but in current parent's coordinate plane (the current group if any or the canvas)\n   * @param {Point} point position according to object's {@link FabricObject#originX} {@link FabricObject#originY} properties in parent's coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setRelativeXY(\n    point: Point,\n    originX: TOriginX = this.originX,\n    originY: TOriginY = this.originY,\n  ) {\n    this.setPositionByOrigin(point, originX, originY);\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return false;\n  }\n\n  /**\n   * @return {Point[]} [tl, tr, br, bl] in the scene plane\n   */\n  getCoords(): Point[] {\n    const { tl, tr, br, bl } =\n      this.aCoords || (this.aCoords = this.calcACoords());\n    const coords = [tl, tr, br, bl];\n    if (this.group) {\n      const t = this.group.calcTransformMatrix();\n      return coords.map((p) => transformPoint(p, t));\n    }\n    return coords;\n  }\n\n  /**\n   * Checks if object intersects with the scene rect formed by TL and BR\n   * In this case the rect is meant aligned with the axis of the canvas.\n   * TL is the TOP LEFT point while br is the BOTTOM RIGHT point\n   */\n  intersectsWithRect(tl: Point, br: Point): boolean {\n    const intersection = Intersection.intersectPolygonRectangle(\n      this.getCoords(),\n      tl,\n      br,\n    );\n    return intersection.status === 'Intersection';\n  }\n\n  /**\n   * Checks if object intersects with another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object intersects with another object\n   */\n  intersectsWithObject(other: ObjectGeometry): boolean {\n    const intersection = Intersection.intersectPolygonPolygon(\n      this.getCoords(),\n      other.getCoords(),\n    );\n\n    return (\n      intersection.status === 'Intersection' ||\n      intersection.status === 'Coincident' ||\n      other.isContainedWithinObject(this) ||\n      this.isContainedWithinObject(other)\n    );\n  }\n\n  /**\n   * Checks if object is fully contained within area of another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object is fully contained within area of another object\n   */\n  isContainedWithinObject(other: ObjectGeometry): boolean {\n    const points = this.getCoords();\n    return points.every((point) => other.containsPoint(point));\n  }\n\n  /**\n   * Checks if object is fully contained within the scene rect formed by TL and BR\n   */\n  isContainedWithinRect(tl: Point, br: Point): boolean {\n    const { left, top, width, height } = this.getBoundingRect();\n    return (\n      left >= tl.x &&\n      left + width <= br.x &&\n      top >= tl.y &&\n      top + height <= br.y\n    );\n  }\n\n  isOverlapping<T extends ObjectGeometry>(other: T): boolean {\n    return (\n      this.intersectsWithObject(other) ||\n      this.isContainedWithinObject(other) ||\n      other.isContainedWithinObject(this)\n    );\n  }\n\n  /**\n   * Checks if point is inside the object\n   * @param {Point} point Point to check against\n   * @return {Boolean} true if point is inside the object\n   */\n  containsPoint(point: Point): boolean {\n    return Intersection.isPointInPolygon(point, this.getCoords());\n  }\n\n  /**\n   * Checks if object is contained within the canvas with current viewportTransform\n   * the check is done stopping at first point that appears on screen\n   * @return {Boolean} true if object is fully or partially contained within canvas\n   */\n  isOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    const points = this.getCoords();\n    // if some point is on screen, the object is on screen.\n    if (\n      points.some(\n        (point) =>\n          point.x <= br.x &&\n          point.x >= tl.x &&\n          point.y <= br.y &&\n          point.y >= tl.y,\n      )\n    ) {\n      return true;\n    }\n    // no points on screen, check intersection with absolute coordinates\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    // check if the object is so big that it contains the entire viewport\n    return this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Checks if object is partially contained within the canvas with current viewportTransform\n   * @return {Boolean} true if object is partially contained within canvas\n   */\n  isPartiallyOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    const allPointsAreOutside = this.getCoords().every(\n      (point) =>\n        (point.x >= br.x || point.x <= tl.x) &&\n        (point.y >= br.y || point.y <= tl.y),\n    );\n    // check if the object is so big that it contains the entire viewport\n    return allPointsAreOutside && this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Returns coordinates of object's bounding rectangle (left, top, width, height)\n   * the box is intended as aligned to axis of canvas.\n   * @return {Object} Object with left, top, width, height properties\n   */\n  getBoundingRect(): TBBox {\n    return makeBoundingBoxFromPoints(this.getCoords());\n  }\n\n  /**\n   * Returns width of an object's bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} width value\n   */\n  getScaledWidth(): number {\n    return this._getTransformedDimensions().x;\n  }\n\n  /**\n   * Returns height of an object bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} height value\n   */\n  getScaledHeight(): number {\n    return this._getTransformedDimensions().y;\n  }\n\n  /**\n   * Scales an object (equally by x and y)\n   * @param {Number} value Scale factor\n   * @return {void}\n   */\n  scale(value: number): void {\n    this._set(SCALE_X, value);\n    this._set(SCALE_Y, value);\n    this.setCoords();\n  }\n\n  /**\n   * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New width value\n   * @return {void}\n   */\n  scaleToWidth(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().width / this.getScaledWidth();\n    return this.scale(value / this.width / boundingRectFactor);\n  }\n\n  /**\n   * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New height value\n   * @return {void}\n   */\n  scaleToHeight(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().height / this.getScaledHeight();\n    return this.scale(value / this.height / boundingRectFactor);\n  }\n\n  getCanvasRetinaScaling() {\n    return this.canvas?.getRetinaScaling() || 1;\n  }\n\n  /**\n   * Returns the object angle relative to canvas counting also the group property\n   * @returns {TDegree}\n   */\n  getTotalAngle(): TDegree {\n    return this.group\n      ? radiansToDegrees(calcPlaneRotation(this.calcTransformMatrix()))\n      : this.angle;\n  }\n\n  /**\n   * Retrieves viewportTransform from Object's canvas if available\n   * @return {TMat2D}\n   */\n  getViewportTransform(): TMat2D {\n    return this.canvas?.viewportTransform || (iMatrix.concat() as TMat2D);\n  }\n\n  /**\n   * Calculates the coordinates of the 4 corner of the bbox, in absolute coordinates.\n   * those never change with zoom or viewport changes.\n   * @return {TCornerPoint}\n   */\n  calcACoords(): TCornerPoint {\n    const rotateMatrix = createRotateMatrix({ angle: this.angle }),\n      { x, y } = this.getRelativeCenterPoint(),\n      tMatrix = createTranslateMatrix(x, y),\n      finalMatrix = multiplyTransformMatrices(tMatrix, rotateMatrix),\n      dim = this._getTransformedDimensions(),\n      w = dim.x / 2,\n      h = dim.y / 2;\n    return {\n      // corners\n      tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n      tr: transformPoint({ x: w, y: -h }, finalMatrix),\n      bl: transformPoint({ x: -w, y: h }, finalMatrix),\n      br: transformPoint({ x: w, y: h }, finalMatrix),\n    };\n  }\n\n  /**\n   * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n   * aCoords are used to quickly find an object on the canvas.\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   */\n  setCoords(): void {\n    this.aCoords = this.calcACoords();\n  }\n\n  transformMatrixKey(skipGroup = false): number[] {\n    let prefix: number[] = [];\n    if (!skipGroup && this.group) {\n      prefix = this.group.transformMatrixKey(skipGroup);\n    }\n    prefix.push(\n      this.top,\n      this.left,\n      this.width,\n      this.height,\n      this.scaleX,\n      this.scaleY,\n      this.angle,\n      this.strokeWidth,\n      this.skewX,\n      this.skewY,\n      +this.flipX,\n      +this.flipY,\n      resolveOrigin(this.originX),\n      resolveOrigin(this.originY),\n    );\n\n    return prefix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties.\n   * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n   * There are some situation in which this is useful to avoid the fake rotation.\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcTransformMatrix(skipGroup = false): TMat2D {\n    let matrix = this.calcOwnMatrix();\n    if (skipGroup || !this.group) {\n      return matrix;\n    }\n    const key = this.transformMatrixKey(skipGroup),\n      cache = this.matrixCache;\n    if (cache && cache.key.every((x, i) => x === key[i])) {\n      return cache.value;\n    }\n    if (this.group) {\n      matrix = multiplyTransformMatrices(\n        this.group.calcTransformMatrix(false),\n        matrix,\n      );\n    }\n    this.matrixCache = {\n      key,\n      value: matrix,\n    };\n    return matrix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties, this matrix does not include the group transformation\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcOwnMatrix(): TMat2D {\n    const key = this.transformMatrixKey(true),\n      cache = this.ownMatrixCache;\n    if (cache && cache.key === key) {\n      return cache.value;\n    }\n    const center = this.getRelativeCenterPoint(),\n      options = {\n        angle: this.angle,\n        translateX: center.x,\n        translateY: center.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY,\n        flipX: this.flipX,\n        flipY: this.flipY,\n      },\n      value = composeMatrix(options);\n    this.ownMatrixCache = {\n      key,\n      value,\n    };\n    return value;\n  }\n\n  /**\n   * Calculate object dimensions from its properties\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getNonTransformedDimensions(): Point {\n    return new Point(this.width, this.height).scalarAdd(this.strokeWidth);\n  }\n\n  /**\n   * Calculate object dimensions for controls box, including padding and canvas zoom.\n   * and active selection\n   * @private\n   * @param {object} [options] transform options\n   * @returns {Point} dimensions\n   */\n  _calculateCurrentDimensions(options?: any): Point {\n    return this._getTransformedDimensions(options)\n      .transform(this.getViewportTransform(), true)\n      .scalarAdd(2 * this.padding);\n  }\n\n  // #region Origin\n\n  declare top: number;\n  declare left: number;\n  declare width: number;\n  declare height: number;\n  declare flipX: boolean;\n  declare flipY: boolean;\n  declare scaleX: number;\n  declare scaleY: number;\n  declare skewX: number;\n  declare skewY: number;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originX: TOriginX;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originY: TOriginY;\n  declare angle: TDegree;\n  declare strokeWidth: number;\n  declare strokeUniform: boolean;\n\n  /**\n   * Object containing this object.\n   * can influence its size and position\n   */\n  declare group?: Group;\n\n  /**\n   * Calculate object bounding box dimensions from its properties scale, skew.\n   * This bounding box is aligned with object angle and not with canvas axis or screen.\n   * @param {Object} [options]\n   * @param {Number} [options.scaleX]\n   * @param {Number} [options.scaleY]\n   * @param {Number} [options.skewX]\n   * @param {Number} [options.skewY]\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getTransformedDimensions(options: any = {}): Point {\n    const dimOptions = {\n      // if scaleX or scaleY are negative numbers,\n      // this will return dimensions that are negative.\n      // and this will break assumptions around the codebase\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      width: this.width,\n      height: this.height,\n      strokeWidth: this.strokeWidth,\n      // TODO remove this spread. is visible in the performance inspection\n      ...options,\n    };\n    // stroke is applied before/after transformations are applied according to `strokeUniform`\n    const strokeWidth = dimOptions.strokeWidth;\n    let preScalingStrokeValue = strokeWidth,\n      postScalingStrokeValue = 0;\n\n    if (this.strokeUniform) {\n      preScalingStrokeValue = 0;\n      postScalingStrokeValue = strokeWidth;\n    }\n    const dimX = dimOptions.width + preScalingStrokeValue,\n      dimY = dimOptions.height + preScalingStrokeValue,\n      noSkew = dimOptions.skewX === 0 && dimOptions.skewY === 0;\n    let finalDimensions;\n    if (noSkew) {\n      finalDimensions = new Point(\n        dimX * dimOptions.scaleX,\n        dimY * dimOptions.scaleY,\n      );\n    } else {\n      finalDimensions = sizeAfterTransform(\n        dimX,\n        dimY,\n        calcDimensionsMatrix(dimOptions),\n      );\n    }\n\n    return finalDimensions.scalarAdd(postScalingStrokeValue);\n  }\n\n  /**\n   * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @param {TOriginX} toOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToGivenOrigin(\n    point: Point,\n    fromOriginX: TOriginX,\n    fromOriginY: TOriginY,\n    toOriginX: TOriginX,\n    toOriginY: TOriginY,\n  ): Point {\n    let x = point.x,\n      y = point.y;\n    const offsetX = resolveOrigin(toOriginX) - resolveOrigin(fromOriginX),\n      offsetY = resolveOrigin(toOriginY) - resolveOrigin(fromOriginY);\n\n    if (offsetX || offsetY) {\n      const dim = this._getTransformedDimensions();\n      x += offsetX * dim.x;\n      y += offsetY * dim.y;\n    }\n\n    return new Point(x, y);\n  }\n\n  /**\n   * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToCenterPoint(\n    point: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    if (originX === CENTER && originY === CENTER) {\n      return point;\n    }\n    const p = this.translateToGivenOrigin(\n      point,\n      originX,\n      originY,\n      CENTER,\n      CENTER,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), point);\n    }\n    return p;\n  }\n\n  /**\n   * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n   * @param {Point} center The point which corresponds to center of the object\n   * @param {OriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {OriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToOriginPoint(\n    center: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    const p = this.translateToGivenOrigin(\n      center,\n      CENTER,\n      CENTER,\n      originX,\n      originY,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), center);\n    }\n    return p;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to canvas\n   * @return {Point}\n   */\n  getCenterPoint(): Point {\n    const relCenter = this.getRelativeCenterPoint();\n    return this.group\n      ? transformPoint(relCenter, this.group.calcTransformMatrix())\n      : relCenter;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to it's parent\n   * @return {Point}\n   */\n  getRelativeCenterPoint(): Point {\n    return this.translateToCenterPoint(\n      new Point(this.left, this.top),\n      this.originX,\n      this.originY,\n    );\n  }\n\n  /**\n   * Returns the position of the object as if it has a different origin.\n   * Take an object that has left, top set to 100, 100 with origin 'left', 'top'.\n   * Return the values of left top ( wrapped in a point ) that you would need to keep\n   * the same position if origin where different.\n   * Alternatively you can use this to also find which point in the parent plane is a specific origin\n   * ( where is the bottom right corner of my object? )\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  getPointByOrigin(originX: TOriginX, originY: TOriginY): Point {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      originX,\n      originY,\n    );\n  }\n\n  /**\n   * Sets the position of the object taking into consideration the object's origin\n   * @param {Point} pos The new position of the object\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {void}\n   */\n  setPositionByOrigin(pos: Point, originX: TOriginX, originY: TOriginY) {\n    const center = this.translateToCenterPoint(pos, originX, originY),\n      position = this.translateToOriginPoint(\n        center,\n        this.originX,\n        this.originY,\n      );\n    this.set({ left: position.x, top: position.y });\n  }\n\n  /**\n   * @private\n   */\n  _getLeftTopCoords() {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      LEFT,\n      TOP,\n    );\n  }\n}\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport {\n  ALIASING_LIMIT,\n  CENTER,\n  iMatrix,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  STROKE,\n  FILL,\n  TOP,\n  VERSION,\n} from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport { Shadow } from '../../Shadow';\nimport type {\n  TDegree,\n  TFiller,\n  TSize,\n  TCacheCanvasDimensions,\n  Abortable,\n  TOptions,\n  ImageFormat,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { runningAnimations } from '../../util/animation/AnimationRegistry';\nimport { capValue } from '../../util/misc/capValue';\nimport {\n  createCanvasElement,\n  createCanvasElementFor,\n  toDataURL,\n  toBlob,\n} from '../../util/misc/dom';\nimport { invertTransform, qrDecompose } from '../../util/misc/matrix';\nimport { enlivenObjectEnlivables } from '../../util/misc/objectEnlive';\nimport {\n  resetObjectTransform,\n  saveObjectTransform,\n} from '../../util/misc/objectTransforms';\nimport { sendObjectToPlane } from '../../util/misc/planeChange';\nimport { pick, pickBy } from '../../util/misc/pick';\nimport { toFixed } from '../../util/misc/toFixed';\nimport type { Group } from '../Group';\nimport { StaticCanvas } from '../../canvas/StaticCanvas';\nimport { isFiller, isSerializableFiller } from '../../util/typeAssertions';\nimport type { FabricImage } from '../Image';\nimport {\n  cacheProperties,\n  fabricObjectDefaultValues,\n  stateProperties,\n} from './defaultValues';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { SerializedObjectProps } from './types/SerializedObjectProps';\nimport type { ObjectProps } from './types/ObjectProps';\nimport { getDevicePixelRatio, getEnv } from '../../env';\nimport { log } from '../../util/internals/console';\nimport type { TColorArg } from '../../color/typedefs';\nimport type { TAnimation } from '../../util/animation/animate';\nimport { animate, animateColor } from '../../util/animation/animate';\nimport type {\n  AnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n  ValueAnimationOptions,\n} from '../../util/animation/types';\nimport { ObjectGeometry } from './ObjectGeometry';\n\ntype TAncestor = FabricObject;\ntype TCollection = Group;\n\nexport type Ancestors =\n  | [FabricObject | Group]\n  | [FabricObject | Group, ...Group[]]\n  | Group[];\n\nexport type AncestryComparison = {\n  /**\n   * common ancestors of `this` and`other`(may include`this` | `other`)\n   */\n  common: Ancestors;\n  /**\n   * ancestors that are of `this` only\n   */\n  fork: Ancestors;\n  /**\n   * ancestors that are of `other` only\n   */\n  otherFork: Ancestors;\n};\n\nexport type TCachedFabricObject<T extends FabricObject = FabricObject> = T &\n  Required<\n    Pick<\n      T,\n      | 'zoomX'\n      | 'zoomY'\n      | '_cacheCanvas'\n      | '_cacheContext'\n      | 'cacheTranslationX'\n      | 'cacheTranslationY'\n    >\n  > & {\n    _cacheContext: CanvasRenderingContext2D;\n  };\n\nexport type ObjectToCanvasElementOptions = {\n  format?: ImageFormat;\n  /** Multiplier to scale by */\n  multiplier?: number;\n  /** Cropping left offset. Introduced in v1.2.14 */\n  left?: number;\n  /** Cropping top offset. Introduced in v1.2.14 */\n  top?: number;\n  /** Cropping width. Introduced in v1.2.14 */\n  width?: number;\n  /** Cropping height. Introduced in v1.2.14 */\n  height?: number;\n  /** Enable retina scaling for clone image. Introduce in 1.6.4 */\n  enableRetinaScaling?: boolean;\n  /** Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4 */\n  withoutTransform?: boolean;\n  /** Remove current object shadow. Introduced in 2.4.2 */\n  withoutShadow?: boolean;\n  /** Account for canvas viewport transform */\n  viewportTransform?: boolean;\n  /** Function to create the output canvas to export onto */\n  canvasProvider?: <T extends StaticCanvas>(el?: HTMLCanvasElement) => T;\n};\n\ntype toDataURLOptions = ObjectToCanvasElementOptions & {\n  quality?: number;\n};\n\nexport type DrawContext =\n  | {\n      parentClipPaths: FabricObject[];\n      width: number;\n      height: number;\n      cacheTranslationX: number;\n      cacheTranslationY: number;\n      zoomX: number;\n      zoomY: number;\n    }\n  | Record<string, never>;\n\n/**\n * Root object class from which all 2d shape classes inherit from\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n *\n * @fires added\n * @fires removed\n *\n * @fires selected\n * @fires deselected\n *\n * @fires rotating\n * @fires scaling\n * @fires moving\n * @fires skewing\n * @fires modified\n *\n * @fires mousedown\n * @fires mouseup\n * @fires mouseover\n * @fires mouseout\n * @fires mousewheel\n * @fires mousedblclick\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drop\n */\nexport class FabricObject<\n    Props extends TOptions<ObjectProps> = Partial<ObjectProps>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends ObjectGeometry<EventSpec>\n  implements ObjectProps\n{\n  declare minScaleLimit: number;\n\n  declare opacity: number;\n\n  declare paintFirst: 'fill' | 'stroke';\n  declare fill: string | TFiller | null;\n  declare fillRule: CanvasFillRule;\n  declare stroke: string | TFiller | null;\n  declare strokeDashArray: number[] | null;\n  declare strokeDashOffset: number;\n  declare strokeLineCap: CanvasLineCap;\n  declare strokeLineJoin: CanvasLineJoin;\n  declare strokeMiterLimit: number;\n\n  declare globalCompositeOperation: GlobalCompositeOperation;\n  declare backgroundColor: string;\n\n  declare shadow: Shadow | null;\n\n  declare visible: boolean;\n\n  declare includeDefaultValues: boolean;\n  declare excludeFromExport: boolean;\n\n  declare objectCaching: boolean;\n\n  declare clipPath?: FabricObject;\n  declare inverted: boolean;\n  declare absolutePositioned: boolean;\n  declare centeredRotation: boolean;\n  declare centeredScaling: boolean;\n\n  /**\n   * This list of properties is used to check if the state of an object is changed.\n   * This state change now is only used for children of groups to understand if a group\n   * needs its cache regenerated during a .set call\n   * @type Array\n   */\n  static stateProperties: string[] = stateProperties;\n\n  /**\n   * List of properties to consider when checking if cache needs refresh\n   * Those properties are checked by\n   * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n   * and refreshed at the next render\n   * @type Array\n   */\n  static cacheProperties: string[] = cacheProperties;\n\n  /**\n   * When set to `true`, object's cache will be rerendered next render call.\n   * since 1.7.0\n   * @type Boolean\n   * @default true\n   */\n  declare dirty: boolean;\n\n  /**\n   * Quick access for the _cacheCanvas rendering context\n   * This is part of the objectCaching feature\n   * since 1.7.0\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  _cacheContext: CanvasRenderingContext2D | null = null;\n\n  /**\n   * A reference to the HTMLCanvasElement that is used to contain the cache of the object\n   * this canvas element is resized and cleared as needed\n   * Is marked private, you can read it, don't use it since it is handled by fabric\n   * since 1.7.0\n   * @type HTMLCanvasElement\n   * @default undefined\n   * @private\n   */\n  declare _cacheCanvas?: HTMLCanvasElement;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, X axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomX?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomY?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationX?: number;\n\n  /**\n   * translation of the cacheCanvas away from the center, for subpixel accuracy and crispness\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationY?: number;\n\n  /**\n   * A reference to the parent of the object, usually a Group\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare group?: Group;\n\n  /**\n   * Indicate if the object is sitting on a cache dedicated to it\n   * or is part of a larger cache for many object ( a group for example)\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare ownCaching?: boolean;\n\n  /**\n   * Private. indicates if the object inside a group is on a transformed context or not\n   * or is part of a larger cache for many object ( a group for example)\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  declare _transformDone?: boolean;\n\n  static ownDefaults = fabricObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return FabricObject.ownDefaults;\n  }\n\n  /**\n   * The class type.\n   * This is used for serialization and deserialization purposes and internally it can be used\n   * to identify classes.\n   * When we transform a class in a plain JS object we need a way to recognize which class it was,\n   * and the type is the way we do that. It has no other purposes and you should not give one.\n   * Hard to reach on instances and please do not use to drive instance's logic (this.constructor.type).\n   * To idenfity a class use instanceof class ( instanceof Rect ).\n   * We do not do that in fabricJS code because we want to try to have code splitting possible.\n   */\n  static type = 'FabricObject';\n\n  /**\n   * Legacy identifier of the class. Prefer using utils like isType or instanceOf\n   * Will be removed in fabric 7 or 8.\n   * The setter exists to avoid type errors in old code and possibly current deserialization code.\n   * DO NOT build new code around this type value\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    const name = (this.constructor as typeof FabricObject).type;\n    if (name === 'FabricObject') {\n      return 'object';\n    }\n    return name.toLowerCase();\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, FabricObject.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * Create a the canvas used to keep the cached copy of the object\n   * @private\n   */\n  _createCacheCanvas() {\n    this._cacheCanvas = createCanvasElement();\n    this._cacheContext = this._cacheCanvas.getContext('2d');\n    this._updateCacheCanvas();\n    // if canvas gets created, is empty, so dirty.\n    this.dirty = true;\n  }\n\n  /**\n   * Limit the cache dimensions so that X * Y do not cross config.perfLimitSizeTotal\n   * and each side do not cross fabric.cacheSideLimit\n   * those numbers are configurable so that you can get as much detail as you want\n   * making bargain with performances.\n   * @param {Object} dims\n   * @param {Object} dims.width width of canvas\n   * @param {Object} dims.height height of canvas\n   * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _limitCacheSize(\n    dims: TSize & { zoomX: number; zoomY: number; capped: boolean } & any,\n  ) {\n    const width = dims.width,\n      height = dims.height,\n      max = config.maxCacheSideLimit,\n      min = config.minCacheSideLimit;\n    if (\n      width <= max &&\n      height <= max &&\n      width * height <= config.perfLimitSizeTotal\n    ) {\n      if (width < min) {\n        dims.width = min;\n      }\n      if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    }\n    const ar = width / height,\n      [limX, limY] = cache.limitDimsByArea(ar),\n      x = capValue(min, limX, max),\n      y = capValue(min, limY, max);\n    if (width > x) {\n      dims.zoomX /= width / x;\n      dims.width = x;\n      dims.capped = true;\n    }\n    if (height > y) {\n      dims.zoomY /= height / y;\n      dims.height = y;\n      dims.capped = true;\n    }\n    return dims;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @return {Object}.x width of object to be cached\n   * @return {Object}.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const objectScale = this.getTotalObjectScaling(),\n      // calculate dimensions without skewing\n      dim = this._getTransformedDimensions({ skewX: 0, skewY: 0 }),\n      neededX = (dim.x * objectScale.x) / this.scaleX,\n      neededY = (dim.y * objectScale.y) / this.scaleY;\n    return {\n      // for sure this ALIASING_LIMIT is slightly creating problem\n      // in situation in which the cache canvas gets an upper limit\n      // also objectScale contains already scaleX and scaleY\n      width: Math.ceil(neededX + ALIASING_LIMIT),\n      height: Math.ceil(neededY + ALIASING_LIMIT),\n      zoomX: objectScale.x,\n      zoomY: objectScale.y,\n      x: neededX,\n      y: neededY,\n    };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const canvas = this._cacheCanvas!,\n      context = this._cacheContext,\n      { width, height, zoomX, zoomY, x, y } = this._limitCacheSize(\n        this._getCacheCanvasDimensions(),\n      ),\n      dimensionsChanged = width !== canvas.width || height !== canvas.height,\n      zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY;\n\n    if (!canvas || !context) {\n      return false;\n    }\n\n    const shouldRedraw = dimensionsChanged || zoomChanged;\n\n    if (shouldRedraw) {\n      if (width !== canvas.width || height !== canvas.height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      const drawingWidth = x / 2;\n      const drawingHeight = y / 2;\n      this.cacheTranslationX =\n        Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n      this.cacheTranslationY =\n        Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n      context.translate(this.cacheTranslationX, this.cacheTranslationY);\n      context.scale(zoomX, zoomY);\n      this.zoomX = zoomX;\n      this.zoomY = zoomY;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sets object's properties from options, for class constructor only.\n   * Needs to be overridden for different defaults.\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected setOptions(options: Record<string, any> = {}) {\n    this._setOptions(options);\n  }\n\n  /**\n   * Transforms context when rendering an object\n   * @param {CanvasRenderingContext2D} ctx Context\n   */\n  transform(ctx: CanvasRenderingContext2D) {\n    const needFullTransform =\n      (this.group && !this.group._transformDone) ||\n      (this.group && this.canvas && ctx === (this.canvas as Canvas).contextTop);\n    const m = this.calcTransformMatrix(!needFullTransform);\n    ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling\n   * @return {Point}\n   */\n  getObjectScaling() {\n    // if the object is a top level one, on the canvas, we go for simple aritmetic\n    // otherwise the complex method with angles will return approximations and decimals\n    // and will likely kill the cache when not needed\n    // https://github.com/fabricjs/fabric.js/issues/7157\n    if (!this.group) {\n      return new Point(Math.abs(this.scaleX), Math.abs(this.scaleY));\n    }\n    // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n    const options = qrDecompose(this.calcTransformMatrix());\n    return new Point(Math.abs(options.scaleX), Math.abs(options.scaleY));\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling, zoom and retina\n   * @return {Object} object with scaleX and scaleY properties\n   */\n  getTotalObjectScaling() {\n    const scale = this.getObjectScaling();\n    if (this.canvas) {\n      const zoom = this.canvas.getZoom();\n      const retina = this.getCanvasRetinaScaling();\n      return scale.scalarMultiply(zoom * retina);\n    }\n    return scale;\n  }\n\n  /**\n   * Return the object opacity counting also the group property\n   * @return {Number}\n   */\n  getObjectOpacity() {\n    let opacity = this.opacity;\n    if (this.group) {\n      opacity *= this.group.getObjectOpacity();\n    }\n    return opacity;\n  }\n\n  /**\n   * Makes sure the scale is valid and modifies it if necessary\n   * @todo: this is a control action issue, not a geometry one\n   * @private\n   * @param {Number} value, unconstrained\n   * @return {Number} constrained value;\n   */\n  _constrainScale(value: number): number {\n    if (Math.abs(value) < this.minScaleLimit) {\n      if (value < 0) {\n        return -this.minScaleLimit;\n      } else {\n        return this.minScaleLimit;\n      }\n    } else if (value === 0) {\n      return 0.0001;\n    }\n    return value;\n  }\n\n  /**\n   * Handles setting values on the instance and handling internal side effects\n   * @protected\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (key === SCALE_X || key === SCALE_Y) {\n      value = this._constrainScale(value);\n    }\n    if (key === SCALE_X && value < 0) {\n      this.flipX = !this.flipX;\n      value *= -1;\n    } else if (key === 'scaleY' && value < 0) {\n      this.flipY = !this.flipY;\n      value *= -1;\n      // i don't like this automatic initialization here\n    } else if (key === 'shadow' && value && !(value instanceof Shadow)) {\n      value = new Shadow(value);\n    }\n\n    const isChanged = this[key as keyof this] !== value;\n    this[key as keyof this] = value;\n\n    // invalidate caches\n    if (\n      isChanged &&\n      (this.constructor as typeof FabricObject).cacheProperties.includes(key)\n    ) {\n      this.dirty = true;\n    }\n    // a dirty child makes the parent dirty.\n    // but a non dirty child does not make the parent not dirty.\n    // the parent could be dirty for some other reason.\n    this.parent &&\n      (this.dirty ||\n        (isChanged &&\n          (this.constructor as typeof FabricObject).stateProperties.includes(\n            key,\n          ))) &&\n      this.parent._set('dirty', true);\n\n    return this;\n  }\n\n  /*\n   * @private\n   * return if the object would be visible in rendering\n   * @memberOf FabricObject.prototype\n   * @return {Boolean}\n   */\n  isNotVisible() {\n    return (\n      this.opacity === 0 ||\n      (!this.width && !this.height && this.strokeWidth === 0) ||\n      !this.visible\n    );\n  }\n\n  /**\n   * Renders an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    // do not render if width/height are zeros or object is not visible\n    if (this.isNotVisible()) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    ctx.save();\n    this._setupCompositeOperation(ctx);\n    this.drawSelectionBackground(ctx);\n    this.transform(ctx);\n    this._setOpacity(ctx);\n    this._setShadow(ctx);\n    if (this.shouldCache()) {\n      (this as TCachedFabricObject).renderCache();\n      (this as TCachedFabricObject).drawCacheOnCanvas(ctx);\n    } else {\n      this._removeCacheCanvas();\n      this.drawObject(ctx, false, {});\n      this.dirty = false;\n    }\n    ctx.restore();\n  }\n\n  drawSelectionBackground(_ctx: CanvasRenderingContext2D) {\n    /* no op */\n  }\n\n  renderCache(this: TCachedFabricObject, options?: any) {\n    options = options || {};\n    if (!this._cacheCanvas || !this._cacheContext) {\n      this._createCacheCanvas();\n    }\n    if (this.isCacheDirty() && this._cacheContext) {\n      const { zoomX, zoomY, cacheTranslationX, cacheTranslationY } = this;\n      const { width, height } = this._cacheCanvas;\n      this.drawObject(this._cacheContext, options.forClipping, {\n        zoomX,\n        zoomY,\n        cacheTranslationX,\n        cacheTranslationY,\n        width,\n        height,\n        parentClipPaths: [],\n      });\n      this.dirty = false;\n    }\n  }\n\n  /**\n   * Remove cacheCanvas and its dimensions from the objects\n   */\n  _removeCacheCanvas() {\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  /**\n   * return true if the object will draw a stroke\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when stroke happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the stroke is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasStroke() {\n    return (\n      this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0\n    );\n  }\n\n  /**\n   * return true if the object will draw a fill\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when fill happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the fill is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasFill() {\n    return this.fill && this.fill !== 'transparent';\n  }\n\n  /**\n   * When returns `true`, force the object to have its own cache, even if it is inside a group\n   * it may be needed when your object behave in a particular way on the cache and always needs\n   * its own isolated canvas to render correctly.\n   * Created to be overridden\n   * since 1.7.12\n   * @returns Boolean\n   */\n  needsItsOwnCache() {\n    // TODO re-evaluate this shadow condition\n    if (\n      this.paintFirst === STROKE &&\n      this.hasFill() &&\n      this.hasStroke() &&\n      !!this.shadow\n    ) {\n      return true;\n    }\n    if (this.clipPath) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    this.ownCaching =\n      (this.objectCaching && (!this.parent || !this.parent.isOnACache())) ||\n      this.needsItsOwnCache();\n    return this.ownCaching;\n  }\n\n  /**\n   * Check if this object will cast a shadow with an offset.\n   * used by Group.shouldCache to know if child has a shadow recursively\n   * @return {Boolean}\n   * @deprecated\n   */\n  willDrawShadow() {\n    return (\n      !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0)\n    );\n  }\n\n  /**\n   * Execute the drawing operation for an object clipPath\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {FabricObject} clipPath\n   */\n  drawClipPathOnCache(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject,\n    canvasWithClipPath: HTMLCanvasElement,\n  ) {\n    ctx.save();\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4\n    if (clipPath.inverted) {\n      ctx.globalCompositeOperation = 'destination-out';\n    } else {\n      ctx.globalCompositeOperation = 'destination-in';\n    }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(canvasWithClipPath, 0, 0);\n    ctx.restore();\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {boolean} forClipping apply clipping styles\n   * @param {DrawContext} context additional context for rendering\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    const originalFill = this.fill,\n      originalStroke = this.stroke;\n    if (forClipping) {\n      this.fill = 'black';\n      this.stroke = '';\n      this._setClippingProperties(ctx);\n    } else {\n      this._renderBackground(ctx);\n    }\n    this._render(ctx);\n    this._drawClipPath(ctx, this.clipPath, context);\n    this.fill = originalFill;\n    this.stroke = originalStroke;\n  }\n\n  private createClipPathLayer(\n    this: TCachedFabricObject,\n    clipPath: FabricObject,\n    context: DrawContext,\n  ) {\n    const canvas = createCanvasElementFor(context as TSize);\n    const ctx = canvas.getContext('2d')!;\n    ctx.translate(context.cacheTranslationX, context.cacheTranslationY);\n    ctx.scale(context.zoomX, context.zoomY);\n    clipPath._cacheCanvas = canvas;\n    context.parentClipPaths.forEach((prevClipPath) => {\n      prevClipPath.transform(ctx);\n    });\n    context.parentClipPaths.push(clipPath);\n    if (clipPath.absolutePositioned) {\n      const m = invertTransform(this.calcTransformMatrix());\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    clipPath.transform(ctx);\n    clipPath.drawObject(ctx, true, context);\n    return canvas;\n  }\n\n  /**\n   * Prepare clipPath state and cache and draw it on instance's cache\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {FabricObject} clipPath\n   */\n  _drawClipPath(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject | undefined,\n    context: DrawContext,\n  ) {\n    if (!clipPath) {\n      return;\n    }\n    // needed to setup _transformDone\n    // TODO find a better solution?\n    clipPath._transformDone = true;\n    const canvas = (this as TCachedFabricObject).createClipPathLayer(\n      clipPath,\n      context,\n    );\n    this.drawClipPathOnCache(ctx, clipPath, canvas);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(this: TCachedFabricObject, ctx: CanvasRenderingContext2D) {\n    ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n    ctx.drawImage(\n      this._cacheCanvas,\n      -this.cacheTranslationX,\n      -this.cacheTranslationY,\n    );\n  }\n\n  /**\n   * Check if cache is dirty and if is dirty clear the context.\n   * This check has a big side effect, it changes the underlying cache canvas if necessary.\n   * Do not call this method on your own to check if the cache is dirty, because if it is,\n   * it is also going to wipe the cache. This is badly designed and needs to be fixed.\n   * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n   * on parent canvas.\n   */\n  isCacheDirty(skipCanvas = false) {\n    if (this.isNotVisible()) {\n      return false;\n    }\n    const canvas = this._cacheCanvas;\n    const ctx = this._cacheContext;\n    if (canvas && ctx && !skipCanvas && this._updateCacheCanvas()) {\n      // in this case the context is already cleared.\n      return true;\n    } else {\n      if (this.dirty || (this.clipPath && this.clipPath.absolutePositioned)) {\n        if (canvas && ctx && !skipCanvas) {\n          ctx.save();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.restore();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Draws a background for the object big as its untransformed dimensions\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.backgroundColor) {\n      return;\n    }\n    const dim = this._getNonTransformedDimensions();\n    ctx.fillStyle = this.backgroundColor;\n\n    ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n    // if there is background color no other shadows\n    // should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setOpacity(ctx: CanvasRenderingContext2D) {\n    if (this.group && !this.group._transformDone) {\n      ctx.globalAlpha = this.getObjectOpacity();\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n  }\n\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    decl: Pick<\n      this,\n      | 'stroke'\n      | 'strokeWidth'\n      | 'strokeLineCap'\n      | 'strokeDashOffset'\n      | 'strokeLineJoin'\n      | 'strokeMiterLimit'\n    >,\n  ) {\n    const stroke = decl.stroke;\n    if (stroke) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = decl.strokeLineCap;\n      ctx.lineDashOffset = decl.strokeDashOffset;\n      ctx.lineJoin = decl.strokeLineJoin;\n      ctx.miterLimit = decl.strokeMiterLimit;\n      if (isFiller(stroke)) {\n        if (\n          (stroke as Gradient<'linear'>).gradientUnits === 'percentage' ||\n          (stroke as Gradient<'linear'>).gradientTransform ||\n          (stroke as Pattern).patternTransform\n        ) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          this._applyPatternForTransformedGradient(ctx, stroke);\n        } else {\n          // is a simple gradient or pattern\n          ctx.strokeStyle = stroke.toLive(ctx)!;\n          this._applyPatternGradientTransform(ctx, stroke);\n        }\n      } else {\n        // is a color\n        ctx.strokeStyle = decl.stroke as string;\n      }\n    }\n  }\n\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    if (fill) {\n      if (isFiller(fill)) {\n        ctx.fillStyle = fill.toLive(ctx)!;\n        this._applyPatternGradientTransform(ctx, fill);\n      } else {\n        ctx.fillStyle = fill;\n      }\n    }\n  }\n\n  _setClippingProperties(ctx: CanvasRenderingContext2D) {\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = '#000000';\n  }\n\n  /**\n   * @private\n   * Sets line dash\n   * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n   * @param {Array} dashArray array representing dashes\n   */\n  _setLineDash(ctx: CanvasRenderingContext2D, dashArray?: number[] | null) {\n    if (!dashArray || dashArray.length === 0) {\n      return;\n    }\n    ctx.setLineDash(dashArray);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    const shadow = this.shadow,\n      canvas = this.canvas,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      [sx, , , sy] = canvas?.viewportTransform || iMatrix,\n      multX = sx * retinaScaling,\n      multY = sy * retinaScaling,\n      scaling = shadow.nonScaling ? new Point(1, 1) : this.getObjectScaling();\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur =\n      (shadow.blur *\n        config.browserShadowBlurConstant *\n        (multX + multY) *\n        (scaling.x + scaling.y)) /\n      4;\n    ctx.shadowOffsetX = shadow.offsetX * multX * scaling.x;\n    ctx.shadowOffsetY = shadow.offsetY * multY * scaling.y;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _removeShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TFiller} filler {@link Pattern} or {@link Gradient}\n   */\n  _applyPatternGradientTransform(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    if (!isFiller(filler)) {\n      return { offsetX: 0, offsetY: 0 };\n    }\n    const t =\n      (filler as Gradient<'linear'>).gradientTransform ||\n      (filler as Pattern).patternTransform;\n    const offsetX = -this.width / 2 + filler.offsetX || 0,\n      offsetY = -this.height / 2 + filler.offsetY || 0;\n\n    if ((filler as Gradient<'linear'>).gradientUnits === 'percentage') {\n      ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n    } else {\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n    }\n    if (t) {\n      ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n    }\n    return { offsetX: offsetX, offsetY: offsetY };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderPaintInOrder(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderStroke(ctx);\n      this._renderFill(ctx);\n    } else {\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * function that actually render something on the context.\n   * empty here to allow Obects to work on tests to benchmark fabric functionalites\n   * not related to rendering\n   * @param {CanvasRenderingContext2D} _ctx Context to render on\n   */\n  _render(_ctx: CanvasRenderingContext2D) {\n    // placeholder to be overridden\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill) {\n      return;\n    }\n\n    ctx.save();\n    this._setFillStyles(ctx, this);\n    if (this.fillRule === 'evenodd') {\n      ctx.fill('evenodd');\n    } else {\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderStroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    if (this.strokeUniform) {\n      const scaling = this.getObjectScaling();\n      ctx.scale(1 / scaling.x, 1 / scaling.y);\n    }\n    this._setLineDash(ctx, this.strokeDashArray);\n    this._setStrokeStyles(ctx, this);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Gradient} filler\n   */\n  _applyPatternForTransformedGradient(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    const dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      retinaScaling = this.getCanvasRetinaScaling(),\n      width = dims.x / this.scaleX / retinaScaling,\n      height = dims.y / this.scaleY / retinaScaling,\n      pCanvas = createCanvasElementFor({\n        // in case width and height are less than 1px, we have to round up.\n        // since the pattern is no-repeat, this is fine\n        width: Math.ceil(width),\n        height: Math.ceil(height),\n      });\n\n    const pCtx = pCanvas.getContext('2d');\n    if (!pCtx) {\n      return;\n    }\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.scale(\n      dims.zoomX / this.scaleX / retinaScaling,\n      dims.zoomY / this.scaleY / retinaScaling,\n    );\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fillStyle = filler.toLive(ctx)!;\n    pCtx.fill();\n    ctx.translate(\n      -this.width / 2 - this.strokeWidth / 2,\n      -this.height / 2 - this.strokeWidth / 2,\n    );\n    ctx.scale(\n      (retinaScaling * this.scaleX) / dims.zoomX,\n      (retinaScaling * this.scaleY) / dims.zoomY,\n    );\n    ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat') ?? '';\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement() {\n    return new Point(this.left + this.width / 2, this.top + this.height / 2);\n  }\n\n  /**\n   * Clones an instance.\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {Promise<FabricObject>}\n   */\n  clone(propertiesToInclude?: string[]): Promise<this> {\n    const objectForm = this.toObject(propertiesToInclude);\n    return (this.constructor as typeof FabricObject).fromObject(\n      objectForm,\n    ) as unknown as Promise<this>;\n  }\n\n  /**\n   * Creates an instance of Image out of an object\n   * makes use of toCanvasElement.\n   * Once this method was based on toDataUrl and loadImage, so it also had a quality\n   * and format option. toCanvasElement is faster and produce no loss of quality.\n   * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n   * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n   * @todo fix the export type, it could not be Image but the type that getClass return for 'image'.\n   * @param {ObjectToCanvasElementOptions} [options] for clone as image, passed to toDataURL\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {FabricImage} Object cloned as image.\n   */\n  cloneAsImage(options: ObjectToCanvasElementOptions): FabricImage {\n    const canvasEl = this.toCanvasElement(options);\n    // TODO: how to import Image w/o an import cycle?\n    const ImageClass = classRegistry.getClass<typeof FabricImage>('image');\n    return new ImageClass(canvasEl);\n  }\n\n  /**\n   * Converts an object into a HTMLCanvas element\n   * @param {ObjectToCanvasElementOptions} options Options object\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @param {Boolean} [options.viewportTransform] Account for canvas viewport transform\n   * @param {(el?: HTMLCanvasElement) => StaticCanvas} [options.canvasProvider] Create the output canvas\n   * @return {HTMLCanvasElement} Returns DOM element <canvas> with the FabricObject\n   */\n  toCanvasElement(options: ObjectToCanvasElementOptions = {}) {\n    const origParams = saveObjectTransform(this),\n      originalGroup = this.group,\n      originalShadow = this.shadow,\n      abs = Math.abs,\n      retinaScaling = options.enableRetinaScaling ? getDevicePixelRatio() : 1,\n      multiplier = (options.multiplier || 1) * retinaScaling,\n      canvasProvider: (el: HTMLCanvasElement) => StaticCanvas =\n        options.canvasProvider ||\n        ((el: HTMLCanvasElement) =>\n          new StaticCanvas(el, {\n            enableRetinaScaling: false,\n            renderOnAddRemove: false,\n            skipOffscreen: false,\n          }));\n    delete this.group;\n    if (options.withoutTransform) {\n      resetObjectTransform(this);\n    }\n    if (options.withoutShadow) {\n      this.shadow = null;\n    }\n    if (options.viewportTransform) {\n      sendObjectToPlane(this, this.getViewportTransform());\n    }\n\n    this.setCoords();\n    const el = createCanvasElement(),\n      boundingRect = this.getBoundingRect(),\n      shadow = this.shadow,\n      shadowOffset = new Point();\n\n    if (shadow) {\n      const shadowBlur = shadow.blur;\n      const scaling = shadow.nonScaling\n        ? new Point(1, 1)\n        : this.getObjectScaling();\n      // consider non scaling shadow.\n      shadowOffset.x =\n        2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.x);\n      shadowOffset.y =\n        2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.y);\n    }\n    const width = boundingRect.width + shadowOffset.x,\n      height = boundingRect.height + shadowOffset.y;\n    // if the current width/height is not an integer\n    // we need to make it so.\n    el.width = Math.ceil(width);\n    el.height = Math.ceil(height);\n    const canvas = canvasProvider(el);\n    if (options.format === 'jpeg') {\n      canvas.backgroundColor = '#fff';\n    }\n    this.setPositionByOrigin(\n      new Point(canvas.width / 2, canvas.height / 2),\n      CENTER,\n      CENTER,\n    );\n    const originalCanvas = this.canvas;\n    // static canvas and canvas have both an array of InteractiveObjects\n    // @ts-expect-error this needs to be fixed somehow, or ignored globally\n    canvas._objects = [this];\n    this.set('canvas', canvas);\n    this.setCoords();\n    const canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n    this.set('canvas', originalCanvas);\n    this.shadow = originalShadow;\n    if (originalGroup) {\n      this.group = originalGroup;\n    }\n    this.set(origParams);\n    this.setCoords();\n    // canvas.dispose will call image.dispose that will nullify the elements\n    // since this canvas is a simple element for the process, we remove references\n    // to objects in this way in order to avoid object trashing.\n    canvas._objects = [];\n    // since render has settled it is safe to destroy canvas\n    canvas.destroy();\n    return canvasEl;\n  }\n\n  /**\n   * Converts an object into a data-url-like string\n   * @param {Object} options Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   */\n  toDataURL(options: toDataURLOptions = {}) {\n    return toDataURL(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1,\n    );\n  }\n  toBlob(options: toDataURLOptions = {}) {\n    return toBlob(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1,\n    );\n  }\n\n  /**\n   * Returns true if any of the specified types is identical to the type of an instance\n   * @param {String} type Type to check against\n   * @return {Boolean}\n   */\n  isType(...types: string[]) {\n    return (\n      types.includes((this.constructor as typeof FabricObject).type) ||\n      types.includes(this.type)\n    );\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance (is 1 unless subclassed)\n   */\n  complexity() {\n    return 1;\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  /**\n   * Sets \"angle\" of an instance with centered rotation\n   * @param {TDegree} angle Angle value (in degrees)\n   */\n  rotate(angle: TDegree) {\n    const { centeredRotation, originX, originY } = this;\n\n    if (centeredRotation) {\n      const { x, y } = this.getRelativeCenterPoint();\n      this.originX = CENTER;\n      this.originY = CENTER;\n      this.left = x;\n      this.top = y;\n    }\n\n    this.set('angle', angle);\n\n    if (centeredRotation) {\n      const { x, y } = this.translateToOriginPoint(\n        this.getRelativeCenterPoint(),\n        originX,\n        originY,\n      );\n      this.left = x;\n      this.top = y;\n      this.originX = originX;\n      this.originY = originY;\n    }\n  }\n\n  /**\n   * This callback function is called by the parent group of an object every\n   * time a non-delegated property changes on the group. It is passed the key\n   * and value as parameters. Not adding in this function's signature to avoid\n   * Travis build error about unused variables.\n   */\n  setOnGroup() {\n    // implemented by sub-classes, as needed.\n  }\n\n  /**\n   * Sets canvas globalCompositeOperation for specific object\n   * custom composition operation for the particular object can be specified using globalCompositeOperation property\n   * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n   */\n  _setupCompositeOperation(ctx: CanvasRenderingContext2D) {\n    if (this.globalCompositeOperation) {\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\n    }\n  }\n\n  /**\n   * cancel instance's running animations\n   * override if necessary to dispose artifacts such as `clipPath`\n   */\n  dispose() {\n    runningAnimations.cancelByTarget(this);\n    this.off();\n    this._set('canvas', undefined);\n    // clear caches\n    this._cacheCanvas && getEnv().dispose(this._cacheCanvas);\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  // #region Animation methods\n  /**\n   * List of properties to consider for animating colors.\n   * @type String[]\n   */\n  static colorProperties: string[] = [FILL, STROKE, 'backgroundColor'];\n\n  /**\n   * Animates object's properties\n   * @param {Record<string, number | number[] | TColorArg>} animatable map of keys and end values\n   * @param {Partial<AnimationOptions<T>>} options\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {Record<string, TAnimation<T>>} map of animation contexts\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   */\n  animate<T extends number | number[] | TColorArg>(\n    animatable: Record<string, T>,\n    options?: Partial<AnimationOptions<T>>,\n  ): Record<string, TAnimation<T>> {\n    return Object.entries(animatable).reduce(\n      (acc, [key, endValue]) => {\n        acc[key] = this._animate(key, endValue, options);\n        return acc;\n      },\n      {} as Record<string, TAnimation<T>>,\n    );\n  }\n\n  /**\n   * @private\n   * @param {String} key Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   */\n  _animate<T extends number | number[] | TColorArg>(\n    key: string,\n    endValue: T,\n    options: Partial<AnimationOptions<T>> = {},\n  ): TAnimation<T> {\n    const path = key.split('.');\n    const propIsColor = (\n      this.constructor as typeof FabricObject\n    ).colorProperties.includes(path[path.length - 1]);\n    const { abort, startValue, onChange, onComplete } = options;\n    const animationOptions = {\n      ...options,\n      target: this,\n      // path.reduce... is the current value in case start value isn't provided\n      startValue:\n        startValue ?? path.reduce((deep: any, key) => deep[key], this),\n      endValue,\n      abort: abort?.bind(this),\n      onChange: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        path.reduce((deep: Record<string, any>, key, index) => {\n          if (index === path.length - 1) {\n            deep[key] = value;\n          }\n          return deep[key];\n        }, this);\n        onChange &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onChange(value, valueProgress, durationProgress);\n      },\n      onComplete: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        this.setCoords();\n        onComplete &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onComplete(value, valueProgress, durationProgress);\n      },\n    } as AnimationOptions<T>;\n\n    return (\n      propIsColor\n        ? animateColor(animationOptions as ColorAnimationOptions)\n        : animate(\n            animationOptions as ValueAnimationOptions | ArrayAnimationOptions,\n          )\n    ) as TAnimation<T>;\n  }\n\n  // #region Object stacking methods\n\n  /**\n   * A reference to the parent of the object\n   * Used to keep the original parent ref when the object has been added to an ActiveSelection, hence loosing the `group` ref\n   */\n  declare parent?: Group;\n\n  /**\n   * Checks if object is descendant of target\n   * Should be used instead of {@link Group.contains} or {@link StaticCanvas.contains} for performance reasons\n   * @param {TAncestor} target\n   * @returns {boolean}\n   */\n  isDescendantOf(target: TAncestor): boolean {\n    const { parent, group } = this;\n    return (\n      parent === target ||\n      group === target ||\n      // walk up\n      (!!parent && parent.isDescendantOf(target)) ||\n      (!!group && group !== parent && group.isDescendantOf(target))\n    );\n  }\n\n  /**\n   * @returns {Ancestors} ancestors (excluding `ActiveSelection`) from bottom to top\n   */\n  getAncestors(): Ancestors {\n    const ancestors: TAncestor[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let parent: TAncestor | undefined = this;\n    do {\n      parent = parent.parent;\n      parent && ancestors.push(parent);\n    } while (parent);\n    return ancestors as Ancestors;\n  }\n\n  /**\n   * Compare ancestors\n   *\n   * @param {StackedObject} other\n   * @returns {AncestryComparison} an object that represent the ancestry situation.\n   */\n  findCommonAncestors<T extends this>(other: T): AncestryComparison {\n    if (this === other) {\n      return {\n        fork: [],\n        otherFork: [],\n        common: [this, ...this.getAncestors()],\n      } as AncestryComparison;\n    }\n    const ancestors = this.getAncestors();\n    const otherAncestors = other.getAncestors();\n    //  if `this` has no ancestors and `this` is top ancestor of `other` we must handle the following case\n    if (\n      ancestors.length === 0 &&\n      otherAncestors.length > 0 &&\n      this === otherAncestors[otherAncestors.length - 1]\n    ) {\n      return {\n        fork: [],\n        otherFork: [\n          other,\n          ...otherAncestors.slice(0, otherAncestors.length - 1),\n        ],\n        common: [this],\n      } as AncestryComparison;\n    }\n    //  compare ancestors\n    for (let i = 0, ancestor; i < ancestors.length; i++) {\n      ancestor = ancestors[i];\n      if (ancestor === other) {\n        return {\n          fork: [this, ...ancestors.slice(0, i)],\n          otherFork: [],\n          common: ancestors.slice(i),\n        } as AncestryComparison;\n      }\n      for (let j = 0; j < otherAncestors.length; j++) {\n        if (this === otherAncestors[j]) {\n          return {\n            fork: [],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: [this, ...ancestors],\n          } as AncestryComparison;\n        }\n        if (ancestor === otherAncestors[j]) {\n          return {\n            fork: [this, ...ancestors.slice(0, i)],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: ancestors.slice(i),\n          } as AncestryComparison;\n        }\n      }\n    }\n    // nothing shared\n    return {\n      fork: [this, ...ancestors],\n      otherFork: [other, ...otherAncestors],\n      common: [],\n    } as AncestryComparison;\n  }\n\n  /**\n   *\n   * @param {StackedObject} other\n   * @returns {boolean}\n   */\n  hasCommonAncestors<T extends this>(other: T): boolean {\n    const commonAncestors = this.findCommonAncestors(other);\n    return commonAncestors && !!commonAncestors.common.length;\n  }\n\n  /**\n   *\n   * @param {FabricObject} other object to compare against\n   * @returns {boolean | undefined} if objects do not share a common ancestor or they are strictly equal it is impossible to determine which is in front of the other; in such cases the function returns `undefined`\n   */\n  isInFrontOf<T extends this>(other: T): boolean | undefined {\n    if (this === other) {\n      return undefined;\n    }\n    const ancestorData = this.findCommonAncestors(other);\n\n    if (ancestorData.fork.includes(other as any)) {\n      return true;\n    }\n    if (ancestorData.otherFork.includes(this as any)) {\n      return false;\n    }\n    // if there isn't a common ancestor, we take the canvas.\n    // if there is no canvas, there is nothing to compare\n    const firstCommonAncestor = ancestorData.common[0] || this.canvas;\n    if (!firstCommonAncestor) {\n      return undefined;\n    }\n    const headOfFork = ancestorData.fork.pop(),\n      headOfOtherFork = ancestorData.otherFork.pop(),\n      thisIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfFork as any,\n      ),\n      otherIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfOtherFork as any,\n      );\n    return thisIndex > -1 && thisIndex > otherIndex;\n  }\n\n  // #region Serialization\n  /**\n   * Define a list of custom properties that will be serialized when\n   * instance.toObject() gets called\n   */\n  static customProperties: string[] = [];\n\n  /**\n   * Returns an object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject(propertiesToInclude: any[] = []): any {\n    const propertiesToSerialize = propertiesToInclude.concat(\n      FabricObject.customProperties,\n      (this.constructor as typeof FabricObject).customProperties || [],\n    );\n    let clipPathData: Partial<SerializedObjectProps> | undefined;\n    const NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n    const {\n      clipPath,\n      fill,\n      stroke,\n      shadow,\n      strokeDashArray,\n      left,\n      top,\n      originX,\n      originY,\n      width,\n      height,\n      strokeWidth,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit,\n      scaleX,\n      scaleY,\n      angle,\n      flipX,\n      flipY,\n      opacity,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX,\n      skewY,\n    } = this;\n    if (clipPath && !clipPath.excludeFromExport) {\n      clipPathData = clipPath.toObject(\n        propertiesToSerialize.concat('inverted', 'absolutePositioned'),\n      );\n    }\n    const toFixedBound = (val: number) => toFixed(val, NUM_FRACTION_DIGITS);\n    const object = {\n      ...pick(this, propertiesToSerialize as (keyof this)[]),\n      type: (this.constructor as typeof FabricObject).type,\n      version: VERSION,\n      originX,\n      originY,\n      left: toFixedBound(left),\n      top: toFixedBound(top),\n      width: toFixedBound(width),\n      height: toFixedBound(height),\n      fill: isSerializableFiller(fill) ? fill.toObject() : fill,\n      stroke: isSerializableFiller(stroke) ? stroke.toObject() : stroke,\n      strokeWidth: toFixedBound(strokeWidth),\n      strokeDashArray: strokeDashArray\n        ? strokeDashArray.concat()\n        : strokeDashArray,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit: toFixedBound(strokeMiterLimit),\n      scaleX: toFixedBound(scaleX),\n      scaleY: toFixedBound(scaleY),\n      angle: toFixedBound(angle),\n      flipX,\n      flipY,\n      opacity: toFixedBound(opacity),\n      shadow: shadow ? shadow.toObject() : shadow,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX: toFixedBound(skewX),\n      skewY: toFixedBound(skewY),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n\n    return !this.includeDefaultValues\n      ? this._removeDefaultValues(object)\n      : object;\n  }\n\n  /**\n   * Returns (dataless) object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: any[]): any {\n    // will be overwritten by subclasses\n    return this.toObject(propertiesToInclude);\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  _removeDefaultValues<T extends object>(object: T): Partial<T> {\n    // getDefaults() ( get from static ownDefaults ) should win over prototype since anyway they get assigned to instance\n    // ownDefault vs prototype is swappable only if you change all the fabric objects consistently.\n    const defaults = (this.constructor as typeof FabricObject).getDefaults();\n    const hasStaticDefaultValues = Object.keys(defaults).length > 0;\n    const baseValues = hasStaticDefaultValues\n      ? defaults\n      : Object.getPrototypeOf(this);\n\n    return pickBy(object, (value, key) => {\n      if (key === LEFT || key === TOP || key === 'type') {\n        return true;\n      }\n      const baseValue = baseValues[key];\n      return (\n        value !== baseValue &&\n        // basically a check for [] === []\n        !(\n          Array.isArray(value) &&\n          Array.isArray(baseValue) &&\n          value.length === 0 &&\n          baseValue.length === 0\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String}\n   */\n  toString() {\n    return `#<${(this.constructor as typeof FabricObject).type}>`;\n  }\n\n  /**\n   *\n   * @param {Function} klass\n   * @param {object} object\n   * @param {object} [options]\n   * @param {string} [options.extraParam] property to pass as first argument to the constructor\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static _fromObject<S extends FabricObject>(\n    { type, ...serializedObjectOptions }: Record<string, unknown>,\n    { extraParam, ...options }: Abortable & { extraParam?: string } = {},\n  ): Promise<S> {\n    return enlivenObjectEnlivables<any>(serializedObjectOptions, options).then(\n      (enlivedObjectOptions) => {\n        // from the resulting enlived options, extract options.extraParam to arg0\n        // to avoid accidental overrides later\n        if (extraParam) {\n          delete enlivedObjectOptions[extraParam];\n          return new this(\n            serializedObjectOptions[extraParam],\n            // @ts-expect-error different signature\n            enlivedObjectOptions,\n          );\n        } else {\n          return new this(enlivedObjectOptions);\n        }\n      },\n    ) as Promise<S>;\n  }\n\n  /**\n   *\n   * @param {object} object\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static fromObject<T extends TOptions<SerializedObjectProps>>(\n    object: T,\n    options?: Abortable,\n  ) {\n    return this._fromObject(object, options);\n  }\n}\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n","import type {\n  TModificationEvents,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\n/**\n * Wrap an action handler with firing an event if the action is performed\n * @param {TModificationEvents} eventName the event we want to fire\n * @param {TransformActionHandler<T>} actionHandler the function to wrap\n * @param {object} extraEventInfo extra information to pas to the event handler\n * @return {TransformActionHandler<T>} a function with an action handler signature\n */\nexport const wrapWithFireEvent = <\n  T extends Transform,\n  P extends object = Record<string, never>,\n>(\n  eventName: TModificationEvents,\n  actionHandler: TransformActionHandler<T>,\n  extraEventInfo?: P,\n) => {\n  return ((eventData, transform, x, y) => {\n    const actionPerformed = actionHandler(eventData, transform, x, y);\n    if (actionPerformed) {\n      fireEvent(eventName, {\n        ...commonEventInfo(eventData, transform, x, y),\n        ...extraEventInfo,\n      });\n    }\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n};\n","import type { Transform, TransformActionHandler } from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>,\n) {\n  return ((eventData, transform, x, y) => {\n    const { target, originX, originY } = transform,\n      centerPoint = target.getRelativeCenterPoint(),\n      constraint = target.translateToOriginPoint(centerPoint, originX, originY),\n      actionPerformed = actionHandler(eventData, transform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      transform.originX,\n      transform.originY,\n    );\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { CENTER, LEFT, RESIZING, RIGHT } from '../constants';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { getLocalPoint, isTransformCentered } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Action handler to change object's width\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const changeObjectWidth: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const localPoint = getLocalPoint(\n    transform,\n    transform.originX,\n    transform.originY,\n    x,\n    y,\n  );\n  //  make sure the control changes width ONLY from it's side of target\n  if (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(RIGHT) &&\n      localPoint.x < 0) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(LEFT) &&\n      localPoint.x > 0)\n  ) {\n    const { target } = transform,\n      strokePadding =\n        target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n      multiplier = isTransformCentered(transform) ? 2 : 1,\n      oldWidth = target.width,\n      newWidth =\n        Math.abs((localPoint.x * multiplier) / target.scaleX) - strokePadding;\n    target.set('width', Math.max(newWidth, 1));\n    //  check against actual target width in case `newWidth` was rejected\n    return oldWidth !== target.width;\n  }\n  return false;\n};\n\nexport const changeWidth = wrapWithFireEvent(\n  RESIZING,\n  wrapWithFixedAnchor(changeObjectWidth),\n);\n","import { FILL, STROKE, twoMathPi } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\n\nexport type ControlRenderingStyleOverride = Partial<\n  Pick<\n    InteractiveFabricObject,\n    | 'cornerStyle'\n    | 'cornerSize'\n    | 'cornerColor'\n    | 'cornerStrokeColor'\n    | 'cornerDashArray'\n    | 'transparentCorners'\n  >\n>;\n\nexport type ControlRenderer<\n  O extends InteractiveFabricObject = InteractiveFabricObject,\n> = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: O,\n) => void;\n\n/**\n * Render a round control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderCircleControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\n  let myLeft = left,\n    myTop = top,\n    size;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // TODO: use proper ellipse code.\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\n  ctx[methodName]();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * Render a square control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderSquareControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n    xSizeBy2 = xSize / 2,\n    ySizeBy2 = ySize / 2;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  ctx.translate(left, top);\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle();\n  ctx.rotate(degreesToRadians(angle));\n  // this does not work, and fixed with ( && ) does not make sense.\n  // to have real transparent corners we need the controls on upperCanvas\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\n  if (stroke) {\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  }\n  ctx.restore();\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type {\n  ControlActionHandler,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { Intersection } from '../Intersection';\nimport { Point } from '../Point';\nimport { SCALE } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport type { TCornerPoint, TDegree, TMat2D } from '../typedefs';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { renderCircleControl, renderSquareControl } from './controlRendering';\n\nexport class Control {\n  /**\n   * keep track of control visibility.\n   * mainly for backward compatibility.\n   * if you do not want to see a control, you can remove it\n   * from the control set.\n   * @type {Boolean}\n   * @default true\n   */\n  visible = true;\n\n  /**\n   * Name of the action that the control will likely execute.\n   * This is optional. FabricJS uses to identify what the user is doing for some\n   * extra optimizations. If you are writing a custom control and you want to know\n   * somewhere else in the code what is going on, you can use this string here.\n   * you can also provide a custom getActionName if your control run multiple actions\n   * depending on some external state.\n   * default to scale since is the most common, used on 4 corners by default\n   * @type {String}\n   * @default 'scale'\n   */\n  actionName = SCALE;\n\n  /**\n   * Drawing angle of the control.\n   * NOT used for now, but name marked as needed for internal logic\n   * example: to reuse the same drawing function for different rotated controls\n   * @type {Number}\n   * @default 0\n   */\n  angle = 0;\n\n  /**\n   * Relative position of the control. X\n   * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  x = 0;\n\n  /**\n   * Relative position of the control. Y\n   * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  y = 0;\n\n  /**\n   * Horizontal offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the right, negative to the left.\n   * It used when you want to have position of control that does not scale with\n   * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n   * the boundind box, with an offset of 30 pixels vertically. Those 30 pixels will\n   * stay 30 pixels no matter how the object is big. Another example is having 2\n   * controls in the corner, that stay in the same position when the object scale.\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  offsetX = 0;\n\n  /**\n   * Vertical offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the bottom, negative to the top.\n   * @type {Number}\n   * @default 0\n   */\n  offsetY = 0;\n\n  /**\n   * Sets the length of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeX = 0;\n\n  /**\n   * Sets the height of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeY = 0;\n\n  /**\n   * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeX = 0;\n\n  /**\n   * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeY = 0;\n\n  /**\n   * Css cursor style to display when the control is hovered.\n   * if the method `cursorStyleHandler` is provided, this property is ignored.\n   * @type {String}\n   * @default 'crosshair'\n   */\n  cursorStyle = 'crosshair';\n\n  /**\n   * If controls has an offsetY or offsetX, draw a line that connects\n   * the control to the bounding box\n   * @type {Boolean}\n   * @default false\n   */\n  withConnection = false;\n\n  constructor(options?: Partial<Control>) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * The control actionHandler, provide one to handle action ( control being moved )\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare actionHandler: TransformActionHandler;\n\n  /**\n   * The control handler for mouse down, provide one to handle mouse down on control\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseDownHandler?: ControlActionHandler;\n\n  /**\n   * The control mouseUpHandler, provide one to handle an effect on mouse up.\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseUpHandler?: ControlActionHandler;\n\n  shouldActivate(\n    controlKey: string,\n    fabricObject: InteractiveFabricObject,\n    pointer: Point,\n    { tl, tr, br, bl }: TCornerPoint,\n  ) {\n    // TODO: locking logic can be handled here instead of in the control handler logic\n    return (\n      fabricObject.canvas?.getActiveObject() === fabricObject &&\n      fabricObject.isControlVisible(controlKey) &&\n      Intersection.isPointInPolygon(pointer, [tl, tr, br, bl])\n    );\n  }\n\n  /**\n   * Returns control actionHandler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getActionHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): TransformActionHandler | undefined {\n    return this.actionHandler;\n  }\n\n  /**\n   * Returns control mouseDown handler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseDownHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseDownHandler;\n  }\n\n  /**\n   * Returns control mouseUp handler.\n   * During actions the fabricObject or the control can be of different obj\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseUpHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseUpHandler;\n  }\n\n  /**\n   * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n   * function you can pass one in the constructor\n   * the cursorStyle property\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  cursorStyleHandler(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.cursorStyle;\n  }\n\n  /**\n   * Returns the action name. The basic implementation just return the actionName property.\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  getActionName(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.actionName;\n  }\n\n  /**\n   * Returns controls visibility\n   * @param {FabricObject} object on which the control is displayed\n   * @param {String} controlKey key where the control is memorized on the\n   * @return {Boolean}\n   */\n  getVisibility(fabricObject: InteractiveFabricObject, controlKey: string) {\n    return fabricObject._controlsVisibility?.[controlKey] ?? this.visible;\n  }\n\n  /**\n   * Sets controls visibility\n   * @param {Boolean} visibility for the object\n   * @return {Void}\n   */\n  setVisibility(\n    visibility: boolean,\n    name: string,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    this.visible = visibility;\n  }\n\n  positionHandler(\n    dim: Point,\n    finalMatrix: TMat2D,\n    fabricObject: InteractiveFabricObject,\n    currentControl: Control,\n  ) {\n    return new Point(\n      this.x * dim.x + this.offsetX,\n      this.y * dim.y + this.offsetY,\n    ).transform(finalMatrix);\n  }\n\n  /**\n   * Returns the coords for this control based on object values.\n   * @param {Number} objectAngle angle from the fabric object holding the control\n   * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n   *   isTouch is true)\n   * @param {Number} centerX x coordinate where the control center should be\n   * @param {Number} centerY y coordinate where the control center should be\n   * @param {boolean} isTouch true if touch corner, false if normal corner\n   */\n  calcCornerCoords(\n    angle: TDegree,\n    objectCornerSize: number,\n    centerX: number,\n    centerY: number,\n    isTouch: boolean,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    const t = multiplyTransformMatrixArray([\n      createTranslateMatrix(centerX, centerY),\n      createRotateMatrix({ angle }),\n      createScaleMatrix(\n        (isTouch ? this.touchSizeX : this.sizeX) || objectCornerSize,\n        (isTouch ? this.touchSizeY : this.sizeY) || objectCornerSize,\n      ),\n    ]);\n    return {\n      tl: new Point(-0.5, -0.5).transform(t),\n      tr: new Point(0.5, -0.5).transform(t),\n      br: new Point(0.5, 0.5).transform(t),\n      bl: new Point(-0.5, 0.5).transform(t),\n    };\n  }\n\n  /**\n   * Render function for the control.\n   * When this function runs the context is unscaled. unrotate. Just retina scaled.\n   * all the functions will have to translate to the point left,top before starting Drawing\n   * if they want to draw a control where the position is detected.\n   * left and top are the result of the positionHandler function\n   * @param {RenderingContext2D} ctx the context where the control will be drawn\n   * @param {Number} left position of the canvas where we are about to render the control.\n   * @param {Number} top position of the canvas where we are about to render the control.\n   * @param {Object} styleOverride\n   * @param {FabricObject} fabricObject the object where the control is about to be rendered\n   */\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    styleOverride = styleOverride || {};\n    switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n      case 'circle':\n        renderCircleControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n      default:\n        renderSquareControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n    }\n  }\n}\n","import type {\n  ControlCursorCallback,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { ROTATING } from '../constants';\nimport { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { isLocked, NOT_ALLOWED_CURSOR } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Find the correct style for the control that is used for rotation.\n * this function is very simple and it just take care of not-allowed or standard cursor\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const rotationStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (fabricObject.lockRotation) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  return control.cursorStyle;\n};\n\n/**\n * Action handler for rotation and snapping, without anchor point.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n * @private\n */\nconst rotateObjectWithSnapping: TransformActionHandler = (\n  eventData,\n  { target, ex, ey, theta, originX, originY },\n  x,\n  y,\n) => {\n  const pivotPoint = target.translateToOriginPoint(\n    target.getRelativeCenterPoint(),\n    originX,\n    originY,\n  );\n\n  if (isLocked(target, 'lockRotation')) {\n    return false;\n  }\n\n  const lastAngle = Math.atan2(ey - pivotPoint.y, ex - pivotPoint.x),\n    curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x);\n  let angle = radiansToDegrees(curAngle - lastAngle + theta);\n\n  if (target.snapAngle && target.snapAngle > 0) {\n    const snapAngle = target.snapAngle,\n      snapThreshold = target.snapThreshold || snapAngle,\n      rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n      leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n    if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n      angle = leftAngleLocked;\n    } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n      angle = rightAngleLocked;\n    }\n  }\n\n  // normalize angle to positive value\n  if (angle < 0) {\n    angle = 360 + angle;\n  }\n  angle %= 360;\n\n  const hasRotated = target.angle !== angle;\n  // TODO: why aren't we using set?\n  target.angle = angle;\n  return hasRotated;\n};\n\nexport const rotationWithSnapping = wrapWithFireEvent(\n  ROTATING,\n  wrapWithFixedAnchor(rotateObjectWithSnapping),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxis } from '../typedefs';\nimport type { Canvas } from '../canvas/Canvas';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  invertOrigin,\n  isLocked,\n  isTransformCentered,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport { SCALE_X, SCALE_Y, SCALING } from '../constants';\n\ntype ScaleTransform = Transform & {\n  gestureScale?: number;\n  signX?: number;\n  signY?: number;\n};\n\ntype ScaleBy = TAxis | 'equally' | '' | undefined;\n\n/**\n * Inspect event and fabricObject properties to understand if the scaling action\n * @param {Event} eventData from the user action\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @return {Boolean} true if scale is proportional\n */\nexport function scaleIsProportional(\n  eventData: TPointerEvent,\n  fabricObject: FabricObject,\n): boolean {\n  const canvas = fabricObject.canvas as Canvas,\n    uniformIsToggled = eventData[canvas.uniScaleKey!];\n  return (\n    (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled)\n  );\n}\n\n/**\n * Inspect fabricObject to understand if the current scaling action is allowed\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @param {String} by 'x' or 'y' or ''\n * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n * @return {Boolean} true if scaling is not allowed at current conditions\n */\nexport function scalingIsForbidden(\n  fabricObject: FabricObject,\n  by: ScaleBy,\n  scaleProportionally: boolean,\n) {\n  const lockX = isLocked(fabricObject, 'lockScalingX'),\n    lockY = isLocked(fabricObject, 'lockScalingY');\n  if (lockX && lockY) {\n    return true;\n  }\n  if (!by && (lockX || lockY) && scaleProportionally) {\n    return true;\n  }\n  if (lockX && by === 'x') {\n    return true;\n  }\n  if (lockY && by === 'y') {\n    return true;\n  }\n  // code crashes because of a division by 0 if a 0 sized object is scaled\n  // forbid to prevent scaling to happen. ISSUE-9475\n  const { width, height, strokeWidth } = fabricObject;\n  if (width === 0 && strokeWidth === 0 && by !== 'y') {\n    return true;\n  }\n  if (height === 0 && strokeWidth === 0 && by !== 'x') {\n    return true;\n  }\n  return false;\n}\n\nconst scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n\n/**\n * return the correct cursor style for the scale action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  const scaleProportionally = scaleIsProportional(eventData, fabricObject),\n    by =\n      control.x !== 0 && control.y === 0\n        ? 'x'\n        : control.x === 0 && control.y !== 0\n          ? 'y'\n          : '';\n  if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control);\n  return `${scaleMap[n]}-resize`;\n};\n\n/**\n * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @param {Object} options additional information for scaling\n * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n * @return {Boolean} true if some change happened\n * @private\n */\nfunction scaleObject(\n  eventData: TPointerEvent,\n  transform: ScaleTransform,\n  x: number,\n  y: number,\n  options: { by?: ScaleBy } = {},\n) {\n  const target = transform.target,\n    by = options.by,\n    scaleProportionally = scaleIsProportional(eventData, target),\n    forbidScaling = scalingIsForbidden(target, by, scaleProportionally);\n  let newPoint, scaleX, scaleY, dim, signX, signY;\n\n  if (forbidScaling) {\n    return false;\n  }\n  if (transform.gestureScale) {\n    scaleX = transform.scaleX * transform.gestureScale;\n    scaleY = transform.scaleY * transform.gestureScale;\n  } else {\n    newPoint = getLocalPoint(\n      transform,\n      transform.originX,\n      transform.originY,\n      x,\n      y,\n    );\n    // use of sign: We use sign to detect change of direction of an action. sign usually change when\n    // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n    // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n    // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n    // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n    signX = by !== 'y' ? Math.sign(newPoint.x || transform.signX || 1) : 1;\n    signY = by !== 'x' ? Math.sign(newPoint.y || transform.signY || 1) : 1;\n    if (!transform.signX) {\n      transform.signX = signX;\n    }\n    if (!transform.signY) {\n      transform.signY = signY;\n    }\n\n    if (\n      isLocked(target, 'lockScalingFlip') &&\n      (transform.signX !== signX || transform.signY !== signY)\n    ) {\n      return false;\n    }\n\n    dim = target._getTransformedDimensions();\n    // missing detection of flip and logic to switch the origin\n    if (scaleProportionally && !by) {\n      // uniform scaling\n      const distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n        { original } = transform,\n        originalDistance =\n          Math.abs((dim.x * original.scaleX) / target.scaleX) +\n          Math.abs((dim.y * original.scaleY) / target.scaleY),\n        scale = distance / originalDistance;\n      scaleX = original.scaleX * scale;\n      scaleY = original.scaleY * scale;\n    } else {\n      scaleX = Math.abs((newPoint.x * target.scaleX) / dim.x);\n      scaleY = Math.abs((newPoint.y * target.scaleY) / dim.y);\n    }\n    // if we are scaling by center, we need to double the scale\n    if (isTransformCentered(transform)) {\n      scaleX *= 2;\n      scaleY *= 2;\n    }\n    if (transform.signX !== signX && by !== 'y') {\n      transform.originX = invertOrigin(transform.originX);\n      scaleX *= -1;\n      transform.signX = signX;\n    }\n    if (transform.signY !== signY && by !== 'x') {\n      transform.originY = invertOrigin(transform.originY);\n      scaleY *= -1;\n      transform.signY = signY;\n    }\n  }\n  // minScale is taken care of in the setter.\n  const oldScaleX = target.scaleX,\n    oldScaleY = target.scaleY;\n  if (!by) {\n    !isLocked(target, 'lockScalingX') && target.set(SCALE_X, scaleX);\n    !isLocked(target, 'lockScalingY') && target.set(SCALE_Y, scaleY);\n  } else {\n    // forbidden cases already handled on top here.\n    by === 'x' && target.set(SCALE_X, scaleX);\n    by === 'y' && target.set(SCALE_Y, scaleY);\n  }\n  return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n}\n\n/**\n * Generic scaling logic, to scale from corners either equally or freely.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scaleObjectFromCorner: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y);\n};\n\n/**\n * Scaling logic for the X axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectX: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'x' });\n};\n\n/**\n * Scaling logic for the Y axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectY: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'y' });\n};\n\nexport const scalingEqually = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectFromCorner),\n);\n\nexport const scalingX = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectX),\n);\n\nexport const scalingY = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectY),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { TAxis, TAxisKey } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  isLocked,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport {\n  CENTER,\n  SCALE_X,\n  SCALE_Y,\n  SKEWING,\n  SKEW_X,\n  SKEW_Y,\n} from '../constants';\n\nexport type SkewTransform = Transform & { skewingSide: -1 | 1 };\n\nconst AXIS_KEYS: Record<\n  TAxis,\n  {\n    counterAxis: TAxis;\n    scale: TAxisKey<'scale'>;\n    skew: TAxisKey<'skew'>;\n    lockSkewing: TAxisKey<'lockSkewing'>;\n    origin: TAxisKey<'origin'>;\n    flip: TAxisKey<'flip'>;\n  }\n> = {\n  x: {\n    counterAxis: 'y',\n    scale: SCALE_X,\n    skew: SKEW_X,\n    lockSkewing: 'lockSkewingX',\n    origin: 'originX',\n    flip: 'flipX',\n  },\n  y: {\n    counterAxis: 'x',\n    scale: SCALE_Y,\n    skew: SKEW_Y,\n    lockSkewing: 'lockSkewingY',\n    origin: 'originY',\n    flip: 'flipY',\n  },\n};\n\nconst skewMap = ['ns', 'nesw', 'ew', 'nwse'];\n\n/**\n * return the correct cursor style for the skew action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const skewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (control.x !== 0 && isLocked(fabricObject, 'lockSkewingY')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  if (control.y !== 0 && isLocked(fabricObject, 'lockSkewingX')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control) % 4;\n  return `${skewMap[n]}-resize`;\n};\n\n/**\n * Since skewing is applied before scaling, calculations are done in a scaleless plane\n * @see https://github.com/fabricjs/fabric.js/pull/8380\n */\nfunction skewObject(\n  axis: TAxis,\n  { target, ex, ey, skewingSide, ...transform }: SkewTransform,\n  pointer: Point,\n) {\n  const { skew: skewKey } = AXIS_KEYS[axis],\n    offset = pointer\n      .subtract(new Point(ex, ey))\n      .divide(new Point(target.scaleX, target.scaleY))[axis],\n    skewingBefore = target[skewKey],\n    skewingStart = transform[skewKey],\n    shearingStart = Math.tan(degreesToRadians(skewingStart)),\n    // let a, b be the size of target\n    // let a' be the value of a after applying skewing\n    // then:\n    // a' = a + b * skewA => skewA = (a' - a) / b\n    // the value b is tricky since skewY is applied before skewX\n    b =\n      axis === 'y'\n        ? target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n            // since skewY is applied before skewX, b (=width) is not affected by skewX\n            skewX: 0,\n          }).x\n        : target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n          }).y;\n\n  const shearing =\n    (2 * offset * skewingSide) /\n      // we max out fractions to safeguard from asymptotic behavior\n      Math.max(b, 1) +\n    // add starting state\n    shearingStart;\n\n  const skewing = radiansToDegrees(Math.atan(shearing));\n\n  target.set(skewKey, skewing);\n  const changed = skewingBefore !== target[skewKey];\n\n  if (changed && axis === 'y') {\n    // we don't want skewing to affect scaleX\n    // so we factor it by the inverse skewing diff to make it seem unchanged to the viewer\n    const { skewX, scaleX } = target,\n      dimBefore = target._getTransformedDimensions({ skewY: skewingBefore }),\n      dimAfter = target._getTransformedDimensions(),\n      compensationFactor = skewX !== 0 ? dimBefore.x / dimAfter.x : 1;\n    compensationFactor !== 1 &&\n      target.set(SCALE_X, compensationFactor * scaleX);\n  }\n\n  return changed;\n}\n\n/**\n * Wrapped Action handler for skewing on a given axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nfunction skewHandler(\n  axis: TAxis,\n  eventData: TPointerEvent,\n  transform: Transform,\n  x: number,\n  y: number,\n) {\n  const { target } = transform,\n    {\n      counterAxis,\n      origin: originKey,\n      lockSkewing: lockSkewingKey,\n      skew: skewKey,\n      flip: flipKey,\n    } = AXIS_KEYS[axis];\n  if (isLocked(target, lockSkewingKey)) {\n    return false;\n  }\n\n  const { origin: counterOriginKey, flip: counterFlipKey } =\n      AXIS_KEYS[counterAxis],\n    counterOriginFactor =\n      resolveOrigin(transform[counterOriginKey]) *\n      (target[counterFlipKey] ? -1 : 1),\n    // if the counter origin is top/left (= -0.5) then we are skewing x/y values on the bottom/right side of target respectively.\n    // if the counter origin is bottom/right (= 0.5) then we are skewing x/y values on the top/left side of target respectively.\n    // skewing direction on the top/left side of target is OPPOSITE to the direction of the movement of the pointer,\n    // so we factor skewing direction by this value.\n    skewingSide = (-Math.sign(counterOriginFactor) *\n      (target[flipKey] ? -1 : 1)) as 1 | -1,\n    skewingDirection =\n      ((target[skewKey] === 0 &&\n        // in case skewing equals 0 we use the pointer offset from target center to determine the direction of skewing\n        getLocalPoint(transform, CENTER, CENTER, x, y)[axis] > 0) ||\n      // in case target has skewing we use that as the direction\n      target[skewKey] > 0\n        ? 1\n        : -1) * skewingSide,\n    // anchor to the opposite side of the skewing direction\n    // normalize value from [-1, 1] to origin value [0, 1]\n    origin = -skewingDirection * 0.5 + 0.5;\n\n  const finalHandler = wrapWithFireEvent<SkewTransform>(\n    SKEWING,\n    wrapWithFixedAnchor((eventData, transform, x, y) =>\n      skewObject(axis, transform, new Point(x, y)),\n    ),\n  );\n\n  return finalHandler(\n    eventData,\n    {\n      ...transform,\n      [originKey]: origin,\n      skewingSide,\n    },\n    x,\n    y,\n  );\n}\n\n/**\n * Wrapped Action handler for skewing on the X axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('x', eventData, transform, x, y);\n};\n\n/**\n * Wrapped Action handler for skewing on the Y axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('y', eventData, transform, x, y);\n};\n","import type {\n  ControlCallback,\n  ControlCursorCallback,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { SCALE_X, SCALE_Y, SKEW_X, SKEW_Y } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxisKey } from '../typedefs';\nimport { scaleCursorStyleHandler, scalingX, scalingY } from './scale';\nimport { skewCursorStyleHandler, skewHandlerX, skewHandlerY } from './skew';\n\nfunction isAltAction(eventData: TPointerEvent, target: FabricObject) {\n  return eventData[target.canvas!.altActionKey!];\n}\n\n/**\n * Inspect event, control and fabricObject to return the correct action name\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} an action name\n */\nexport const scaleOrSkewActionName: ControlCallback<\n  TAxisKey<'skew' | 'scale'> | ''\n> = (eventData, control, fabricObject) => {\n  const isAlternative = isAltAction(eventData, fabricObject);\n  if (control.x === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_X : SCALE_Y;\n  }\n  if (control.y === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_Y : SCALE_X;\n  }\n  return '';\n};\n\n/**\n * Combine skew and scale style handlers to cover fabric standard use case\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleSkewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  return isAltAction(eventData, fabricObject)\n    ? skewCursorStyleHandler(eventData, control, fabricObject)\n    : scaleCursorStyleHandler(eventData, control, fabricObject);\n};\n/**\n * Composed action handler to either scale X or skew Y\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingXOrSkewingY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerY(eventData, transform, x, y)\n    : scalingX(eventData, transform, x, y);\n};\n\n/**\n * Composed action handler to either scale Y or skew X\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingYOrSkewingX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerX(eventData, transform, x, y)\n    : scalingY(eventData, transform, x, y);\n};\n","import { RESIZING, ROTATE } from '../constants';\nimport { changeWidth } from './changeWidth';\nimport { Control } from './Control';\nimport { rotationStyleHandler, rotationWithSnapping } from './rotate';\nimport { scaleCursorStyleHandler, scalingEqually } from './scale';\nimport {\n  scaleOrSkewActionName,\n  scaleSkewCursorStyleHandler,\n  scalingXOrSkewingY,\n  scalingYOrSkewingX,\n} from './scaleSkew';\n\n// use this function if you want to generate new controls for every instance\nexport const createObjectDefaultControls = () => ({\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mb: new Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mt: new Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  tl: new Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  tr: new Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  bl: new Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  br: new Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  mtr: new Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n});\n\nexport const createResizeControls = () => ({\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n});\n\nexport const createTextboxDefaultControls = () => ({\n  ...createObjectDefaultControls(),\n  ...createResizeControls(),\n});\n","import { Point, ZERO } from '../../Point';\nimport type { TCornerPoint, TDegree } from '../../typedefs';\nimport { FabricObject } from './Object';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport type { TQrDecomposeOut } from '../../util/misc/matrix';\nimport {\n  calcDimensionsMatrix,\n  createRotateMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../../util/misc/matrix';\nimport type { Control } from '../../controls/Control';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { ControlRenderingStyleOverride } from '../../controls/controlRendering';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { createObjectDefaultControls } from '../../controls/commonControls';\nimport { interactiveObjectDefaultValues } from './defaultValues';\nimport { SCALE } from '../../constants';\n\nexport type TOCoord = Point & {\n  corner: TCornerPoint;\n  touchCorner: TCornerPoint;\n};\n\nexport type TControlSet = Record<string, Control>;\n\nexport type TBorderRenderingStyleOverride = Partial<\n  Pick<InteractiveFabricObject, 'borderColor' | 'borderDashArray'>\n>;\n\nexport type TStyleOverride = ControlRenderingStyleOverride &\n  TBorderRenderingStyleOverride &\n  Partial<\n    Pick<InteractiveFabricObject, 'hasBorders' | 'hasControls'> & {\n      forActiveSelection: boolean;\n    }\n  >;\n\nexport class InteractiveFabricObject<\n    Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  declare noScaleCache: boolean;\n\n  declare snapAngle?: TDegree;\n  declare snapThreshold?: TDegree;\n\n  declare lockMovementX: boolean;\n  declare lockMovementY: boolean;\n  declare lockRotation: boolean;\n  declare lockScalingX: boolean;\n  declare lockScalingY: boolean;\n  declare lockSkewingX: boolean;\n  declare lockSkewingY: boolean;\n  declare lockScalingFlip: boolean;\n\n  declare cornerSize: number;\n  declare touchCornerSize: number;\n  declare transparentCorners: boolean;\n  declare cornerColor: string;\n  declare cornerStrokeColor: string;\n  declare cornerStyle: 'rect' | 'circle';\n  declare cornerDashArray: number[] | null;\n  declare hasControls: boolean;\n\n  declare borderColor: string;\n  declare borderDashArray: number[] | null;\n  declare borderOpacityWhenMoving: number;\n  declare borderScaleFactor: number;\n  declare hasBorders: boolean;\n  declare selectionBackgroundColor: string;\n\n  declare selectable: boolean;\n  declare evented: boolean;\n  declare perPixelTargetFind: boolean;\n  declare activeOn: 'down' | 'up';\n\n  declare hoverCursor: CSSStyleDeclaration['cursor'] | null;\n  declare moveCursor: CSSStyleDeclaration['cursor'] | null;\n\n  /**\n   * The object's controls' position in viewport coordinates\n   * Calculated by {@link Control#positionHandler} and {@link Control#calcCornerCoords}, depending on {@link padding}.\n   * `corner/touchCorner` describe the 4 points forming the interactive area of the corner.\n   * Used to draw and locate controls.\n   */\n  declare oCoords: Record<string, TOCoord>;\n\n  /**\n   * keeps the value of the last hovered corner during mouse move.\n   * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n   * It should be private, but there is no harm in using it as\n   * a read-only property.\n   * this isn't cleaned automatically. Non selected objects may have wrong values\n   * @type [string]\n   */\n  declare __corner?: string;\n\n  /**\n   * a map of control visibility for this object.\n   * this was left when controls were introduced to not break the api too much\n   * this takes priority over the generic control visibility\n   */\n  declare _controlsVisibility: Record<string, boolean>;\n\n  /**\n   * holds the controls for the object.\n   * controls are added by default_controls.js\n   */\n  declare controls: TControlSet;\n\n  /**\n   * internal boolean to signal the code that the object is\n   * part of the move action.\n   */\n  declare isMoving?: boolean;\n\n  /**\n   * A boolean used from the gesture module to keep tracking of a scaling\n   * action when there is no scaling transform in place.\n   * This is an edge case and is used twice in all codebase.\n   * Probably added to keep track of some performance issues\n   * @TODO use git blame to investigate why it was added\n   * DON'T USE IT. WE WILL TRY TO REMOVE IT\n   */\n  declare _scaling?: boolean;\n\n  declare canvas?: Canvas;\n\n  static ownDefaults = interactiveObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...InteractiveFabricObject.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof InteractiveFabricObject).createControls(),\n      InteractiveFabricObject.ownDefaults,\n    );\n    this.setOptions(options);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults\n   * @param {Object} [options] Options object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createObjectDefaultControls() };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const targetCanvas = this.canvas;\n    if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n      const transform = targetCanvas._currentTransform,\n        target = transform.target,\n        action = transform.action;\n      if (\n        this === (target as unknown as this) &&\n        action &&\n        action.startsWith(SCALE)\n      ) {\n        return false;\n      }\n    }\n    return super._updateCacheCanvas();\n  }\n\n  getActiveControl() {\n    const key = this.__corner;\n    return key\n      ? {\n          key,\n          control: this.controls[key],\n          coord: this.oCoords[key],\n        }\n      : undefined;\n  }\n\n  /**\n   * Determines which corner is under the mouse cursor, represented by `pointer`.\n   * This function is return a corner only if the object is the active one.\n   * This is done to avoid selecting corner of non active object and activating transformations\n   * rather than drag action. The default behavior of fabricJS is that if you want to transform\n   * an object, first you select it to show the control set\n   * @private\n   * @param {Object} pointer The pointer indicating the mouse position\n   * @param {boolean} forTouch indicates if we are looking for interaction area with a touch action\n   * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or 0 if nothing is found.\n   */\n  findControl(\n    pointer: Point,\n    forTouch = false,\n  ): { key: string; control: Control; coord: TOCoord } | undefined {\n    if (!this.hasControls || !this.canvas) {\n      return undefined;\n    }\n\n    this.__corner = undefined;\n    const cornerEntries = Object.entries(this.oCoords);\n    for (let i = cornerEntries.length - 1; i >= 0; i--) {\n      const [key, corner] = cornerEntries[i];\n      const control = this.controls[key];\n\n      if (\n        control.shouldActivate(\n          key,\n          this,\n          pointer,\n          forTouch ? corner.touchCorner : corner.corner,\n        )\n      ) {\n        // this.canvas.contextTop.fillRect(pointer.x - 1, pointer.y - 1, 2, 2);\n        this.__corner = key;\n\n        return { key, control, coord: this.oCoords[key] };\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Calculates the coordinates of the center of each control plus the corners of the control itself\n   * This basically just delegates to each control positionHandler\n   * WARNING: changing what is passed to positionHandler is a breaking change, since position handler\n   * is a public api and should be done just if extremely necessary\n   * @return {Record<string, TOCoord>}\n   */\n  calcOCoords(): Record<string, TOCoord> {\n    const vpt = this.getViewportTransform(),\n      center = this.getCenterPoint(),\n      tMatrix = createTranslateMatrix(center.x, center.y),\n      rMatrix = createRotateMatrix({\n        angle: this.getTotalAngle() - (!!this.group && this.flipX ? 180 : 0),\n      }),\n      positionMatrix = multiplyTransformMatrices(tMatrix, rMatrix),\n      startMatrix = multiplyTransformMatrices(vpt, positionMatrix),\n      finalMatrix = multiplyTransformMatrices(startMatrix, [\n        1 / vpt[0],\n        0,\n        0,\n        1 / vpt[3],\n        0,\n        0,\n      ]),\n      transformOptions = this.group\n        ? qrDecompose(this.calcTransformMatrix())\n        : undefined;\n    // decomposing could bring negative scaling and `_calculateCurrentDimensions` can't take it\n    if (transformOptions) {\n      transformOptions.scaleX = Math.abs(transformOptions.scaleX);\n      transformOptions.scaleY = Math.abs(transformOptions.scaleY);\n    }\n    const dim = this._calculateCurrentDimensions(transformOptions),\n      coords: Record<string, TOCoord> = {};\n\n    this.forEachControl((control, key) => {\n      const position = control.positionHandler(dim, finalMatrix, this, control);\n      // coords[key] are sometimes used as points. Those are points to which we add\n      // the property corner and touchCorner from `_calcCornerCoords`.\n      // don't remove this assign for an object spread.\n      coords[key] = Object.assign(\n        position,\n        this._calcCornerCoords(control, position),\n      );\n    });\n\n    // debug code\n    /*\n      const canvas = this.canvas;\n      setTimeout(function () {\n      if (!canvas) return;\n        canvas.contextTop.clearRect(0, 0, 700, 700);\n        canvas.contextTop.fillStyle = 'green';\n        Object.keys(coords).forEach(function(key) {\n          const control = coords[key];\n          canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n        });\n      } 50);\n    */\n    return coords;\n  }\n\n  /**\n   * Sets the coordinates that determine the interaction area of each control\n   * note: if we would switch to ROUND corner area, all of this would disappear.\n   * everything would resolve to a single point and a pythagorean theorem for the distance\n   * @todo evaluate simplification of code switching to circle interaction area at runtime\n   * @private\n   */\n  private _calcCornerCoords(control: Control, position: Point) {\n    const angle = this.getTotalAngle();\n    const corner = control.calcCornerCoords(\n      angle,\n      this.cornerSize,\n      position.x,\n      position.y,\n      false,\n      this,\n    );\n    const touchCorner = control.calcCornerCoords(\n      angle,\n      this.touchCornerSize,\n      position.x,\n      position.y,\n      true,\n      this,\n    );\n    return { corner, touchCorner };\n  }\n\n  /**\n   * @override set controls' coordinates as well\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   * @return {void}\n   */\n  setCoords(): void {\n    super.setCoords();\n    this.canvas && (this.oCoords = this.calcOCoords());\n  }\n\n  /**\n   * Calls a function for each control. The function gets called,\n   * with the control, the control's key and the object that is calling the iterator\n   * @param {Function} fn function to iterate over the controls over\n   */\n  forEachControl(\n    fn: (\n      control: Control,\n      key: string,\n      fabricObject: InteractiveFabricObject,\n    ) => any,\n  ) {\n    for (const i in this.controls) {\n      fn(this.controls[i], i, this);\n    }\n  }\n\n  /**\n   * Draws a colored layer behind the object, inside its selection borders.\n   * Requires public options: padding, selectionBackgroundColor\n   * this function is called when the context is transformed\n   * has checks to be skipped when the object is on a staticCanvas\n   * @todo evaluate if make this disappear in favor of a pre-render hook for objects\n   * this was added by Andrea Bogazzi to make possible some feature for work reasons\n   * it seemed a good option, now is an edge case\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   */\n  drawSelectionBackground(ctx: CanvasRenderingContext2D): void {\n    if (\n      !this.selectionBackgroundColor ||\n      (this.canvas && (this.canvas._activeObject as unknown as this) !== this)\n    ) {\n      return;\n    }\n    ctx.save();\n    const center = this.getRelativeCenterPoint(),\n      wh = this._calculateCurrentDimensions(),\n      vpt = this.getViewportTransform();\n    ctx.translate(center.x, center.y);\n    ctx.scale(1 / vpt[0], 1 / vpt[3]);\n    ctx.rotate(degreesToRadians(this.angle));\n    ctx.fillStyle = this.selectionBackgroundColor;\n    ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n    ctx.restore();\n  }\n\n  /**\n   * @public override this function in order to customize the drawing of the control box, e.g. rounded corners, different border style.\n   * @param {CanvasRenderingContext2D} ctx ctx is rotated and translated so that (0,0) is at object's center\n   * @param {Point} size the control box size used\n   */\n  strokeBorders(ctx: CanvasRenderingContext2D, size: Point): void {\n    ctx.strokeRect(-size.x / 2, -size.y / 2, size.x, size.y);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size\n   * @param {TStyleOverride} styleOverride object to override the object style\n   */\n  _drawBorders(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n    styleOverride: TStyleOverride = {},\n  ): void {\n    const options = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      borderDashArray: this.borderDashArray,\n      ...styleOverride,\n    };\n    ctx.save();\n    ctx.strokeStyle = options.borderColor;\n    this._setLineDash(ctx, options.borderDashArray);\n    this.strokeBorders(ctx, size);\n    options.hasControls && this.drawControlsConnectingLines(ctx, size);\n    ctx.restore();\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * the context here is not transformed\n   * @todo move to interactivity\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TStyleOverride} [styleOverride] properties to override the object style\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: TStyleOverride = {},\n  ) {\n    const { hasBorders, hasControls } = this;\n    const styleOptions = {\n      hasBorders,\n      hasControls,\n      ...styleOverride,\n    };\n    const vpt = this.getViewportTransform(),\n      shouldDrawBorders = styleOptions.hasBorders,\n      shouldDrawControls = styleOptions.hasControls;\n    const matrix = multiplyTransformMatrices(vpt, this.calcTransformMatrix());\n    const options = qrDecompose(matrix);\n    ctx.save();\n    ctx.translate(options.translateX, options.translateY);\n    ctx.lineWidth = this.borderScaleFactor; // 1 * this.borderScaleFactor;\n    // since interactive groups have been introduced, an object could be inside a group and needing controls\n    // the following equality check `this.group === this.parent` covers:\n    // object without a group ( undefined === undefined )\n    // object inside a group\n    // excludes object inside a group but multi selected since group and parent will differ in value\n    if (this.group === this.parent) {\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    }\n    if (this.flipX) {\n      options.angle -= 180;\n    }\n    ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n    shouldDrawBorders && this.drawBorders(ctx, options, styleOverride);\n    shouldDrawControls && this.drawControls(ctx, styleOverride);\n    ctx.restore();\n  }\n\n  /**\n   * Draws borders of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {object} options object representing current object parameters\n   * @param {TStyleOverride} [styleOverride] object to override the object style\n   */\n  drawBorders(\n    ctx: CanvasRenderingContext2D,\n    options: TQrDecomposeOut,\n    styleOverride: TStyleOverride,\n  ): void {\n    let size;\n    if ((styleOverride && styleOverride.forActiveSelection) || this.group) {\n      const bbox = sizeAfterTransform(\n          this.width,\n          this.height,\n          calcDimensionsMatrix(options),\n        ),\n        stroke = !this.isStrokeAccountedForInDimensions()\n          ? (this.strokeUniform\n              ? new Point().scalarAdd(this.canvas ? this.canvas.getZoom() : 1)\n              : // this is extremely confusing. options comes from the upper function\n                // and is the qrDecompose of a matrix that takes in account zoom too\n                new Point(options.scaleX, options.scaleY)\n            ).scalarMultiply(this.strokeWidth)\n          : ZERO;\n      size = bbox\n        .add(stroke)\n        .scalarAdd(this.borderScaleFactor)\n        .scalarAdd(this.padding * 2);\n    } else {\n      size = this._calculateCurrentDimensions().scalarAdd(\n        this.borderScaleFactor,\n      );\n    }\n    this._drawBorders(ctx, size, styleOverride);\n  }\n\n  /**\n   * Draws lines from a borders of an object's bounding box to controls that have `withConnection` property set.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size object size x = width, y = height\n   */\n  drawControlsConnectingLines(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n  ): void {\n    let shouldStroke = false;\n\n    ctx.beginPath();\n    this.forEachControl((control, key) => {\n      // in this moment, the ctx is centered on the object.\n      // width and height of the above function are the size of the bbox.\n      if (control.withConnection && control.getVisibility(this, key)) {\n        // reset movement for each control\n        shouldStroke = true;\n        ctx.moveTo(control.x * size.x, control.y * size.y);\n        ctx.lineTo(\n          control.x * size.x + control.offsetX,\n          control.y * size.y + control.offsetY,\n        );\n      }\n    });\n    shouldStroke && ctx.stroke();\n  }\n\n  /**\n   * Draws corners of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: cornerSize, padding\n   * Be aware that since fabric 6.0 this function does not call setCoords anymore.\n   * setCoords needs to be called manually if the object of which we are rendering controls\n   * is outside the standard selection and transform process.\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {ControlRenderingStyleOverride} styleOverride object to override the object style\n   */\n  drawControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: ControlRenderingStyleOverride = {},\n  ) {\n    ctx.save();\n    const retinaScaling = this.getCanvasRetinaScaling();\n    const { cornerStrokeColor, cornerDashArray, cornerColor } = this;\n    const options = {\n      cornerStrokeColor,\n      cornerDashArray,\n      cornerColor,\n      ...styleOverride,\n    };\n    ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n    ctx.strokeStyle = ctx.fillStyle = options.cornerColor;\n    if (!this.transparentCorners) {\n      ctx.strokeStyle = options.cornerStrokeColor;\n    }\n    this._setLineDash(ctx, options.cornerDashArray);\n    this.forEachControl((control, key) => {\n      if (control.getVisibility(this, key)) {\n        const p = this.oCoords[key];\n        control.render(ctx, p.x, p.y, options, this);\n      }\n    });\n    ctx.restore();\n  }\n\n  /**\n   * Returns true if the specified control is visible, false otherwise.\n   * @param {string} controlKey The key of the control. Possible values are usually 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr',\n   * but since the control api allow for any control name, can be any string.\n   * @returns {boolean} true if the specified control is visible, false otherwise\n   */\n  isControlVisible(controlKey: string): boolean {\n    return (\n      this.controls[controlKey] &&\n      this.controls[controlKey].getVisibility(this, controlKey)\n    );\n  }\n\n  /**\n   * Sets the visibility of the specified control.\n   * please do not use.\n   * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n   * but since the control api allow for any control name, can be any string.\n   * @param {Boolean} visible true to set the specified control visible, false otherwise\n   * @todo discuss this overlap of priority here with the team. Andrea Bogazzi for details\n   */\n  setControlVisible(controlKey: string, visible: boolean) {\n    if (!this._controlsVisibility) {\n      this._controlsVisibility = {};\n    }\n    this._controlsVisibility[controlKey] = visible;\n  }\n\n  /**\n   * Sets the visibility state of object controls, this is just a bulk option for setControlVisible;\n   * @param {Record<string, boolean>} [options] with an optional key per control\n   * example: {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n   */\n  setControlsVisibility(options: Record<string, boolean> = {}) {\n    Object.entries(options).forEach(([controlKey, visibility]) =>\n      this.setControlVisible(controlKey, visibility),\n    );\n  }\n\n  /**\n   * Clears the canvas.contextTop in a specific area that corresponds to the object's bounding box\n   * that is in the canvas.contextContainer.\n   * This function is used to clear pieces of contextTop where we render ephemeral effects on top of the object.\n   * Example: blinking cursor text selection, drag effects.\n   * @todo discuss swapping restoreManually with a renderCallback, but think of async issues\n   * @param {Boolean} [restoreManually] When true won't restore the context after clear, in order to draw something else.\n   * @return {CanvasRenderingContext2D|undefined} canvas.contextTop that is either still transformed\n   * with the object transformMatrix, or restored to neutral transform\n   */\n  clearContextTop(\n    restoreManually?: boolean,\n  ): CanvasRenderingContext2D | undefined {\n    if (!this.canvas) {\n      return;\n    }\n    const ctx = this.canvas.contextTop;\n    if (!ctx) {\n      return;\n    }\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this.transform(ctx);\n    // we add 4 pixel, to be sure to do not leave any pixel out\n    const width = this.width + 4,\n      height = this.height + 4;\n    ctx.clearRect(-width / 2, -height / 2, width, height);\n\n    restoreManually || ctx.restore();\n    return ctx;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to deselect this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {TPointerEvent} [options.e] event if the process is generated by an event\n   * @param {FabricObject} [options.object] next object we are setting as active, and reason why\n   * this is being deselected\n   */\n  onDeselect(_options?: {\n    e?: TPointerEvent;\n    object?: InteractiveFabricObject;\n  }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to select this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {Event} [_options.e] event if the process is generated by an event\n   */\n  onSelect(_options?: { e?: TPointerEvent }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\n   * Fired from {@link Canvas#_onMouseMove}\n   * @returns true in order for the window to start a drag session\n   */\n  shouldStartDragging(_e: TPointerEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\\\n   * Fired once a drag session has started\n   * @returns true to handle the drag event\n   */\n  onDragStart(_e: DragEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * @public\n   * @param {DragEvent} _e\n   * @returns {boolean} true if the object currently dragged can be dropped on the target\n   */\n  canDrop(_e: DragEvent): boolean {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the source of a drag event\n   * example: render the selection status for the part of text that is being dragged from a text object\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDragSourceEffect(_e: DragEvent) {\n    // for subclasses\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the target of a drag event\n   * used to show that the underly object can receive a drop, or to show how the\n   * object will change when dropping. example: show the cursor where the text is about to be dropped\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDropTargetEffect(_e: DragEvent) {\n    // for subclasses\n  }\n}\n","import type { Constructor } from '../typedefs';\n\n/***\n * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\n */\nexport function applyMixins<T extends Constructor, S extends Constructor>(\n  derivedCtor: T,\n  constructors: S[],\n) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      name !== 'constructor' &&\n        Object.defineProperty(\n          derivedCtor.prototype,\n          name,\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n            Object.create(null),\n        );\n    });\n  });\n  return derivedCtor as T & { prototype: InstanceType<T & S> };\n}\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport { FabricObjectSVGExportMixin } from './FabricObjectSVGExportMixin';\nimport { InteractiveFabricObject } from './InteractiveObject';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { classRegistry } from '../../ClassRegistry';\n\n// TODO somehow we have to make a tree-shakeable import\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface FabricObject<\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObjectSVGExportMixin {}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class FabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends InteractiveFabricObject<Props, SProps, EventSpec> {}\n\napplyMixins(FabricObject, [FabricObjectSVGExportMixin]);\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n\nexport { cacheProperties } from './defaultValues';\n","/**\n * Returns true if context has transparent pixel\n * at specified location (taking tolerance into account)\n * @param {CanvasRenderingContext2D} ctx context\n * @param {Number} x x coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} y y coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} tolerance Tolerance pixels around the point, not alpha tolerance, integer\n * @return {boolean} true if transparent\n */\nexport const isTransparent = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  tolerance: number,\n): boolean => {\n  tolerance = Math.round(tolerance);\n  const size = tolerance * 2 + 1;\n  const { data } = ctx.getImageData(x - tolerance, y - tolerance, size, size);\n\n  // Split image data - for tolerance > 1, pixelDataSize = 4;\n  for (let i = 3; i < data.length; i += 4) {\n    const alphaChannel = data[i];\n    if (alphaChannel > 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport { createVector } from '../vectors';\nimport type { TProjectStrokeOnPointsOptions, TProjection } from './types';\n\n/**\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n * @todo consider removing skewing from points before calculating stroke projection,\n * see https://github.com/fabricjs/fabric.js/commit/494a10ee2f8c2278ae9a55b20bf50cf6ee25b064#commitcomment-94751537\n */\nexport abstract class StrokeProjectionsBase {\n  declare options: TProjectStrokeOnPointsOptions;\n  declare scale: Point;\n  declare strokeUniformScalar: Point;\n  declare strokeProjectionMagnitude: number;\n\n  constructor(options: TProjectStrokeOnPointsOptions) {\n    this.options = options;\n    this.strokeProjectionMagnitude = this.options.strokeWidth / 2;\n    this.scale = new Point(this.options.scaleX, this.options.scaleY);\n    this.strokeUniformScalar = this.options.strokeUniform\n      ? new Point(1 / this.options.scaleX, 1 / this.options.scaleY)\n      : new Point(1, 1);\n  }\n\n  /**\n   * When the stroke is uniform, scaling affects the arrangement of points. So we must take it into account.\n   */\n  protected createSideVector(from: XY, to: XY) {\n    const v = createVector(from, to);\n    return this.options.strokeUniform ? v.multiply(this.scale) : v;\n  }\n\n  protected abstract calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude?: number,\n  ): Point;\n\n  protected projectOrthogonally(from: Point, to: Point, magnitude?: number) {\n    return this.applySkew(\n      from.add(this.calcOrthogonalProjection(from, to, magnitude)),\n    );\n  }\n\n  protected isSkewed() {\n    return this.options.skewX !== 0 || this.options.skewY !== 0;\n  }\n\n  protected applySkew(point: Point) {\n    const p = new Point(point);\n    // skewY must be applied before skewX as this distortion affects skewX calculation\n    p.y += p.x * Math.tan(degreesToRadians(this.options.skewY));\n    p.x += p.y * Math.tan(degreesToRadians(this.options.skewX));\n    return p;\n  }\n\n  protected scaleUnitVector(unitVector: Point, scalar: number) {\n    return unitVector.multiply(this.strokeUniformScalar).scalarMultiply(scalar);\n  }\n\n  protected abstract projectPoints(): Point[];\n\n  public abstract project(): TProjection[];\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { halfPI, twoMathPi } from '../../../constants';\nimport type { TRadian } from '../../../typedefs';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport {\n  calcAngleBetweenVectors,\n  calcVectorRotation,\n  crossProduct,\n  getOrthonormalVector,\n  getUnitVector,\n  isBetweenVectors,\n  magnitude,\n  rotateVector,\n} from '../vectors';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nconst zeroVector = new Point();\n\n/**\n * class in charge of finding projections for each type of line join\n * @see {@link [Closed path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#2-closed-path)}\n *\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin\n * - Spec: https://svgwg.org/svg2-draft/painting.html#StrokeLinejoinProperty\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n *\n */\nexport class StrokeLineJoinProjections extends StrokeProjectionsBase {\n  /**\n   * The point being projected (the angle ∠BAC)\n   */\n  declare A: Point;\n  /**\n   * The point before A\n   */\n  declare B: Point;\n  /**\n   * The point after A\n   */\n  declare C: Point;\n  /**\n   * The AB vector\n   */\n  AB: Point;\n  /**\n   * The AC vector\n   */\n  AC: Point;\n  /**\n   * The angle of A (∠BAC)\n   */\n  alpha: TRadian;\n  /**\n   * The bisector of A (∠BAC)\n   */\n  bisector: Point;\n\n  static getOrthogonalRotationFactor(vector1: Point, vector2?: Point) {\n    const angle = vector2\n      ? calcAngleBetweenVectors(vector1, vector2)\n      : calcVectorRotation(vector1);\n    return Math.abs(angle) < halfPI ? -1 : 1;\n  }\n\n  constructor(A: XY, B: XY, C: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.B = new Point(B);\n    this.C = new Point(C);\n    this.AB = this.createSideVector(this.A, this.B);\n    this.AC = this.createSideVector(this.A, this.C);\n    this.alpha = calcAngleBetweenVectors(this.AB, this.AC);\n    this.bisector = getUnitVector(\n      // if AC is also the zero vector nothing will be projected\n      // in that case the next point will handle the projection\n      rotateVector(this.AB.eq(zeroVector) ? this.AC : this.AB, this.alpha / 2),\n    );\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    const orthogonalProjection = getOrthonormalVector(vector);\n    const correctSide = StrokeLineJoinProjections.getOrthogonalRotationFactor(\n      orthogonalProjection,\n      this.bisector,\n    );\n    return this.scaleUnitVector(orthogonalProjection, magnitude * correctSide);\n  }\n\n  /**\n   * BEVEL\n   * Calculation: the projection points are formed by the vector orthogonal to the vertex.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-2-bevel\n   */\n  projectBevel() {\n    const projections: Point[] = [];\n    // if `alpha` equals 0 or 2*PI, the projections are the same for `B` and `C`\n    (this.alpha % twoMathPi === 0 ? [this.B] : [this.B, this.C]).forEach(\n      (to) => {\n        projections.push(this.projectOrthogonally(this.A, to));\n        projections.push(\n          this.projectOrthogonally(this.A, to, -this.strokeProjectionMagnitude),\n        );\n      },\n    );\n    return projections;\n  }\n\n  /**\n   * MITER\n   * Calculation: the corner is formed by extending the outer edges of the stroke\n   * at the tangents of the path segments until they intersect.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-1-miter\n   */\n  projectMiter() {\n    const projections: Point[] = [],\n      alpha = Math.abs(this.alpha),\n      hypotUnitScalar = 1 / Math.sin(alpha / 2),\n      miterVector = this.scaleUnitVector(\n        this.bisector,\n        -this.strokeProjectionMagnitude * hypotUnitScalar,\n      );\n\n    // When two line segments meet at a sharp angle, it is possible for the join to extend,\n    // far beyond the thickness of the line stroking the path. The stroke-miterlimit imposes\n    // a limit on the extent of the line join.\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n    // When the stroke is uniform, scaling changes the arrangement of points, this changes the miter-limit\n    const strokeMiterLimit = this.options.strokeUniform\n      ? magnitude(\n          this.scaleUnitVector(this.bisector, this.options.strokeMiterLimit),\n        )\n      : this.options.strokeMiterLimit;\n\n    if (\n      magnitude(miterVector) / this.strokeProjectionMagnitude <=\n      strokeMiterLimit\n    ) {\n      projections.push(this.applySkew(this.A.add(miterVector)));\n    }\n    /* when the miter-limit is reached, the stroke line join becomes of type bevel.\n      We always need two orthogonal projections which are basically bevel-type projections,\n      so regardless of whether the miter-limit was reached or not, we include these projections.\n    */\n    projections.push(...this.projectBevel());\n\n    return projections;\n  }\n\n  /**\n   * ROUND (without skew)\n   * Calculation: the projections are the two vectors parallel to X and Y axes\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-1-round-without-skew\n   */\n  private projectRoundNoSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [],\n      // correctSide is used to only consider projecting for the outer side\n      correctSide = new Point(\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(this.bisector),\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(\n          new Point(this.bisector.y, this.bisector.x),\n        ),\n      ),\n      radiusOnAxisX = new Point(1, 0)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide),\n      radiusOnAxisY = new Point(0, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide);\n\n    [radiusOnAxisX, radiusOnAxisY].forEach((vector) => {\n      if (isBetweenVectors(vector, startCircle, endCircle)) {\n        projections.push(this.A.add(vector));\n      }\n    });\n    return projections;\n  }\n\n  /**\n   * ROUND (with skew)\n   * Calculation: the projections are the points furthest from the vertex in\n   * the direction of the X and Y axes after distortion.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-2-round-skew\n   */\n  private projectRoundWithSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [];\n\n    const { skewX, skewY, scaleX, scaleY, strokeUniform } = this.options,\n      shearing = new Point(\n        Math.tan(degreesToRadians(skewX)),\n        Math.tan(degreesToRadians(skewY)),\n      );\n    // The points furthest from the vertex in the direction of the X and Y axes after distortion\n    const circleRadius = this.strokeProjectionMagnitude,\n      newY = strokeUniform\n        ? circleRadius /\n          scaleY /\n          Math.sqrt(1 / scaleY ** 2 + (1 / scaleX ** 2) * shearing.y ** 2)\n        : circleRadius / Math.sqrt(1 + shearing.y ** 2),\n      furthestY = new Point(\n        // Safe guard due to floating point precision. In some situations the square root\n        // was returning NaN because of a negative number close to zero.\n        Math.sqrt(Math.max(circleRadius ** 2 - newY ** 2, 0)),\n        newY,\n      ),\n      newX = strokeUniform\n        ? circleRadius /\n          Math.sqrt(\n            1 +\n              (shearing.x ** 2 * (1 / scaleY) ** 2) /\n                (1 / scaleX + (1 / scaleX) * shearing.x * shearing.y) ** 2,\n          )\n        : circleRadius /\n          Math.sqrt(1 + shearing.x ** 2 / (1 + shearing.x * shearing.y) ** 2),\n      furthestX = new Point(\n        newX,\n        Math.sqrt(Math.max(circleRadius ** 2 - newX ** 2, 0)),\n      );\n\n    [\n      furthestX,\n      furthestX.scalarMultiply(-1),\n      furthestY,\n      furthestY.scalarMultiply(-1),\n    ]\n      // We need to skew the vector here as this information is used to check if\n      // it is between the start and end of the circle segment\n      .map((vector) =>\n        this.applySkew(\n          strokeUniform ? vector.multiply(this.strokeUniformScalar) : vector,\n        ),\n      )\n      .forEach((vector) => {\n        if (isBetweenVectors(vector, startCircle, endCircle)) {\n          projections.push(this.applySkew(this.A).add(vector));\n        }\n      });\n\n    return projections;\n  }\n\n  projectRound() {\n    const projections: Point[] = [];\n    /* Include the start and end points of the circle segment, so that only\n      the projections contained within it are included */\n    // add the orthogonal projections (start and end points of circle segment)\n    projections.push(...this.projectBevel());\n    // let's determines which one of the orthogonal projection is the beginning and end of the circle segment.\n    // when `alpha` equals 0 or 2*PI, we have a straight line, so the way to find the start/end is different.\n    const isStraightLine = this.alpha % twoMathPi === 0,\n      // change the origin of the projections to point A\n      // so that the cross product calculation is correct\n      newOrigin = this.applySkew(this.A),\n      proj0 = projections[isStraightLine ? 0 : 2].subtract(newOrigin),\n      proj1 = projections[isStraightLine ? 1 : 0].subtract(newOrigin),\n      // when `isStraightLine` === true, we compare with the vector opposite AB, otherwise we compare with the bisector.\n      comparisonVector = isStraightLine\n        ? this.applySkew(this.AB.scalarMultiply(-1))\n        : this.applySkew(\n            this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1),\n          ),\n      // the beginning of the circle segment is always to the right of the comparison vector (cross product > 0)\n      isProj0Start = crossProduct(proj0, comparisonVector) > 0,\n      startCircle = isProj0Start ? proj0 : proj1,\n      endCircle = isProj0Start ? proj1 : proj0;\n    if (!this.isSkewed()) {\n      projections.push(...this.projectRoundNoSkew(startCircle, endCircle));\n    } else {\n      projections.push(...this.projectRoundWithSkew(startCircle, endCircle));\n    }\n    return projections;\n  }\n\n  /**\n   * Project stroke width on points returning projections for each point as follows:\n   * - `miter`: 1 point corresponding to the outer boundary. If the miter limit is exceeded, it will be 2 points (becomes bevel)\n   * - `bevel`: 2 points corresponding to the bevel possible boundaries, orthogonal to the stroke.\n   * - `round`: same as `bevel` when it has no skew, with skew are 4 points.\n   */\n  protected projectPoints() {\n    switch (this.options.strokeLineJoin) {\n      case 'miter':\n        return this.projectMiter();\n      case 'round':\n        return this.projectRound();\n      default:\n        return this.projectBevel();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n      angle: this.alpha,\n      bisector: this.bisector,\n    }));\n  }\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { getOrthonormalVector, getUnitVector } from '../vectors';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\n/**\n * class in charge of finding projections for each type of line cap for start/end of an open path\n * @see {@link [Open path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#1-open-path)}\n *\n * Reference:\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\n * - Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-linecap-dev\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n */\nexport class StrokeLineCapProjections extends StrokeProjectionsBase {\n  /**\n   * edge point\n   */\n  declare A: Point;\n  /**\n   * point next to edge point\n   */\n  declare T: Point;\n\n  constructor(A: XY, T: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.T = new Point(T);\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    return this.scaleUnitVector(getOrthonormalVector(vector), magnitude);\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Butt\n   * Calculation: to find the projections, just find the points orthogonal to the stroke\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-1-butt\n   */\n  projectButt() {\n    return [\n      this.projectOrthogonally(this.A, this.T, this.strokeProjectionMagnitude),\n      this.projectOrthogonally(this.A, this.T, -this.strokeProjectionMagnitude),\n    ];\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Round\n   * Calculation: same as stroke line join `round`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-2-round\n   */\n  projectRound() {\n    const projections: Point[] = [];\n\n    if (!this.isSkewed() && this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(\n        this.applySkew(this.A.add(projection)),\n        this.applySkew(this.A.subtract(projection)),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(\n          this.A,\n          this.T,\n          this.T,\n          this.options,\n        ).projectRound(),\n      );\n    }\n\n    return projections;\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Square\n   * Calculation: project a rectangle of points on the stroke in the opposite direction of the vector `AT`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-3-square\n   */\n  projectSquare() {\n    const projections: Point[] = [];\n\n    if (this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(this.A.add(projection), this.A.subtract(projection));\n    } else {\n      const orthogonalProjection = this.calcOrthogonalProjection(\n        this.A,\n        this.T,\n        this.strokeProjectionMagnitude,\n      );\n      const strokePointingOut = this.scaleUnitVector(\n        getUnitVector(this.createSideVector(this.A, this.T)),\n        -this.strokeProjectionMagnitude,\n      );\n      const projectedA = this.A.add(strokePointingOut);\n      projections.push(\n        projectedA.add(orthogonalProjection),\n        projectedA.subtract(orthogonalProjection),\n      );\n    }\n\n    return projections.map((p) => this.applySkew(p));\n  }\n\n  protected projectPoints() {\n    switch (this.options.strokeLineCap) {\n      case 'round':\n        return this.projectRound();\n      case 'square':\n        return this.projectSquare();\n      default:\n        return this.projectButt();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n    }));\n  }\n}\n","import { Point, type XY } from '../../../Point';\nimport { findIndexRight } from '../../internals/findRight';\nimport { StrokeLineCapProjections } from './StrokeLineCapProjections';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nexport * from './types';\n\n/**\n *\n * Used to calculate object's bounding box\n *\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n *\n */\nexport const projectStrokeOnPoints = (\n  points: XY[],\n  options: TProjectStrokeOnPointsOptions,\n  openPath = false,\n): TProjection[] => {\n  const projections: TProjection[] = [];\n\n  if (points.length === 0) {\n    return projections;\n  }\n\n  // first we remove duplicate neighboring points\n  const reduced = points.reduce(\n    (reduced, point) => {\n      if (!reduced[reduced.length - 1].eq(point)) {\n        reduced.push(new Point(point));\n      }\n      return reduced;\n    },\n    [new Point(points[0])],\n  );\n\n  if (reduced.length === 1) {\n    openPath = true;\n  } else if (!openPath) {\n    // remove points from end in case they equal the first point\n    // in order to correctly project the first point\n    const start = reduced[0];\n    const index = findIndexRight(reduced, (point) => !point.eq(start));\n    reduced.splice(index + 1);\n  }\n\n  reduced.forEach((A, index, points) => {\n    let B: XY, C: XY;\n    if (index === 0) {\n      C = points[1];\n      B = openPath ? A : points[points.length - 1];\n    } else if (index === points.length - 1) {\n      B = points[index - 1];\n      C = openPath ? A : points[0];\n    } else {\n      B = points[index - 1];\n      C = points[index + 1];\n    }\n\n    if (openPath && points.length === 1) {\n      projections.push(\n        ...new StrokeLineCapProjections(A, A, options).project(),\n      );\n    } else if (openPath && (index === 0 || index === points.length - 1)) {\n      projections.push(\n        ...new StrokeLineCapProjections(\n          A,\n          index === 0 ? C : B,\n          options,\n        ).project(),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(A, B, C, options).project(),\n      );\n    }\n  });\n\n  return projections;\n};\n","export const findIndexRight = <T>(\n  array: T[],\n  predicate: (value: T, index: number, array: T[]) => boolean,\n) => {\n  for (let index = array.length - 1; index >= 0; index--) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n","import type { TextStyle } from '../../shapes/Text/StyledText';\n\nexport const cloneStyles = (style: TextStyle): TextStyle => {\n  const newObj: TextStyle = {};\n  Object.keys(style).forEach((key) => {\n    newObj[key] = {};\n    Object.keys(style[key]).forEach((keyInner) => {\n      newObj[key][keyInner] = { ...style[key][keyInner] };\n    });\n  });\n  return newObj;\n};\n","import { getFabricWindow } from '../env';\n\n/**\n * Capitalizes a string\n * @param {String} string String to capitalize\n * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n * and other letters stay untouched, if false first letter is capitalized\n * and other letters are converted to lowercase.\n * @return {String} Capitalized version of a string\n */\nexport const capitalize = (string: string, firstLetterOnly = false): string =>\n  `${string.charAt(0).toUpperCase()}${\n    firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase()\n  }`;\n\n/**\n * Escapes XML in a string\n * @param {String} string String to escape\n * @return {String} Escaped version of a string\n */\nexport const escapeXml = (string: string): string =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\nlet segmenter: Intl.Segmenter | false;\n\nconst getSegmenter = () => {\n  if (!segmenter) {\n    segmenter =\n      'Intl' in getFabricWindow() &&\n      'Segmenter' in Intl &&\n      new Intl.Segmenter(undefined, {\n        granularity: 'grapheme',\n      });\n  }\n  return segmenter;\n};\n\n/**\n * Divide a string in the user perceived single units\n * @param {String} textstring String to escape\n * @return {Array} array containing the graphemes\n */\nexport const graphemeSplit = (textstring: string): string[] => {\n  segmenter || getSegmenter();\n  if (segmenter) {\n    const segments = segmenter.segment(textstring);\n    return Array.from(segments).map(({ segment }) => segment);\n  }\n\n  //Fallback\n  return graphemeSplitImpl(textstring);\n};\n\nconst graphemeSplitImpl = (textstring: string): string[] => {\n  const graphemes: string[] = [];\n  for (let i = 0, chr; i < textstring.length; i++) {\n    if ((chr = getWholeChar(textstring, i)) === false) {\n      continue;\n    }\n    graphemes.push(chr as string);\n  }\n  return graphemes;\n};\n\n// taken from mdn in the charAt doc page.\nconst getWholeChar = (str: string, i: number): string | false => {\n  const code = str.charCodeAt(i);\n  if (isNaN(code)) {\n    return ''; // Position not found\n  }\n  if (code < 0xd800 || code > 0xdfff) {\n    return str.charAt(i);\n  }\n\n  // High surrogate (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 <= code && code <= 0xdbff) {\n    if (str.length <= i + 1) {\n      throw 'High surrogate without following low surrogate';\n    }\n    const next = str.charCodeAt(i + 1);\n    if (0xdc00 > next || next > 0xdfff) {\n      throw 'High surrogate without following low surrogate';\n    }\n    return str.charAt(i) + str.charAt(i + 1);\n  }\n  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n  if (i === 0) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  const prev = str.charCodeAt(i - 1);\n\n  // (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 > prev || prev > 0xdbff) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  // We can pass over low surrogates now as the second component\n  // in a pair which we have already processed\n  return false;\n};\n","import { reNewline } from '../../constants';\nimport type {\n  TextStyle,\n  TextStyleDeclaration,\n} from '../../shapes/Text/StyledText';\nimport { cloneStyles } from '../internals/cloneStyles';\nimport { graphemeSplit } from '../lang_string';\n\nexport type TextStyleArray = {\n  start: number;\n  end: number;\n  style: TextStyleDeclaration;\n}[];\n\n/**\n * @param {Object} prevStyle first style to compare\n * @param {Object} thisStyle second style to compare\n * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n * @return {boolean} true if the style changed\n */\nexport const hasStyleChanged = (\n  prevStyle: TextStyleDeclaration,\n  thisStyle: TextStyleDeclaration,\n  forTextSpans = false,\n) =>\n  prevStyle.fill !== thisStyle.fill ||\n  prevStyle.stroke !== thisStyle.stroke ||\n  prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n  prevStyle.fontSize !== thisStyle.fontSize ||\n  prevStyle.fontFamily !== thisStyle.fontFamily ||\n  prevStyle.fontWeight !== thisStyle.fontWeight ||\n  prevStyle.fontStyle !== thisStyle.fontStyle ||\n  prevStyle.textDecorationThickness !== thisStyle.textDecorationThickness ||\n  prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n  prevStyle.deltaY !== thisStyle.deltaY ||\n  (forTextSpans &&\n    (prevStyle.overline !== thisStyle.overline ||\n      prevStyle.underline !== thisStyle.underline ||\n      prevStyle.linethrough !== thisStyle.linethrough));\n\n/**\n * Returns the array form of a text object's inline styles property with styles grouped in ranges\n * rather than per character. This format is less verbose, and is better suited for storage\n * so it is used in serialization (not during runtime).\n * @param {object} styles per character styles for a text object\n * @param {String} text the text string that the styles are applied to\n * @return {{start: number, end: number, style: object}[]}\n */\nexport const stylesToArray = (\n  styles: TextStyle,\n  text: string,\n): TextStyleArray => {\n  const textLines = text.split('\\n'),\n    stylesArray = [];\n  let charIndex = -1,\n    prevStyle = {};\n  // clone style structure to prevent mutation\n  styles = cloneStyles(styles);\n\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n    if (!styles[i]) {\n      //no styles exist for this line, so add the line's length to the charIndex total and reset prevStyle\n      charIndex += chars.length;\n      prevStyle = {};\n      continue;\n    }\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      const thisStyle = styles[i][c];\n      //check if style exists for this character\n      if (thisStyle && Object.keys(thisStyle).length > 0) {\n        if (hasStyleChanged(prevStyle, thisStyle, true)) {\n          stylesArray.push({\n            start: charIndex,\n            end: charIndex + 1,\n            style: thisStyle,\n          });\n        } else {\n          //if style is the same as previous character, increase end index\n          stylesArray[stylesArray.length - 1].end++;\n        }\n      }\n      prevStyle = thisStyle || {};\n    }\n  }\n  return stylesArray;\n};\n\n/**\n * Returns the object form of the styles property with styles that are assigned per\n * character rather than grouped by range. This format is more verbose, and is\n * only used during runtime (not for serialization/storage)\n * @param {Array} styles the serialized form of a text object's styles\n * @param {String} text the text string that the styles are applied to\n * @return {Object}\n */\nexport const stylesFromArray = (\n  styles: TextStyleArray | TextStyle,\n  text: string,\n): TextStyle => {\n  if (!Array.isArray(styles)) {\n    // clone to prevent mutation\n    return cloneStyles(styles);\n  }\n  const textLines = text.split(reNewline),\n    stylesObject: TextStyle = {};\n  let charIndex = -1,\n    styleIndex = 0;\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      //check if there's a style collection that includes the current character\n      if (\n        styles[styleIndex] &&\n        styles[styleIndex].start <= charIndex &&\n        charIndex < styles[styleIndex].end\n      ) {\n        //create object for line index if it doesn't exist\n        stylesObject[i] = stylesObject[i] || {};\n        //assign a style at this character's index\n        stylesObject[i][c] = { ...styles[styleIndex].style };\n        //if character is at the end of the current style collection, move to the next\n        if (charIndex === styles[styleIndex].end - 1) {\n          styleIndex++;\n        }\n      }\n    }\n  }\n  return stylesObject;\n};\n","import { FILL, STROKE } from '../constants';\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nexport const SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  FILL,\n  'fill-opacity',\n  'fill-rule',\n  'opacity',\n  STROKE,\n  'stroke-dasharray',\n  'stroke-linecap',\n  'stroke-dashoffset',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'id',\n  'paint-order',\n  'vector-effect',\n  'instantiated_by_use',\n  'clip-path',\n];\n","export function selectorMatches(element: HTMLElement, selector: string) {\n  const nodeName = element.nodeName;\n  const classNames = element.getAttribute('class');\n  const id = element.getAttribute('id');\n  const azAz = '(?![a-zA-Z\\\\-]+)';\n  let matcher;\n  // i check if a selector matches slicing away part from it.\n  // if i get empty string i should match\n  matcher = new RegExp('^' + nodeName, 'i');\n  selector = selector.replace(matcher, '');\n  if (id && selector.length) {\n    matcher = new RegExp('#' + id + azAz, 'i');\n    selector = selector.replace(matcher, '');\n  }\n  if (classNames && selector.length) {\n    const splitClassNames = classNames.split(' ');\n    for (let i = splitClassNames.length; i--; ) {\n      matcher = new RegExp('\\\\.' + splitClassNames[i] + azAz, 'i');\n      selector = selector.replace(matcher, '');\n    }\n  }\n  return selector.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\nimport { doesSomeParentMatch } from './doesSomeParentMatch';\n\n/**\n * @private\n */\n\nexport function elementMatchesRule(element: HTMLElement, selectors: string[]) {\n  let parentMatching = true;\n  // start from rightmost selector.\n  const firstMatching = selectorMatches(element, selectors.pop()!);\n  if (firstMatching && selectors.length) {\n    parentMatching = doesSomeParentMatch(element, selectors);\n  }\n  return firstMatching && parentMatching && selectors.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\n\nexport function doesSomeParentMatch(element: HTMLElement, selectors: string[]) {\n  let selector: string,\n    parentMatching = true;\n  while (\n    element.parentElement &&\n    element.parentElement.nodeType === 1 &&\n    selectors.length\n  ) {\n    if (parentMatching) {\n      selector = selectors.pop()!;\n    }\n    element = element.parentElement;\n    parentMatching = selectorMatches(element, selector!);\n  }\n  return selectors.length === 0;\n}\n","import { attributesMap } from './constants';\n\nexport const normalizeAttr = (\n  attr: keyof typeof attributesMap | string,\n): string => attributesMap[attr as keyof typeof attributesMap] ?? attr;\n","import { reNum } from '../../parser/constants';\n\nconst regex = new RegExp(`(${reNum})`, 'gi');\n\nexport const cleanupSvgAttribute = (attributeValue: string) =>\n  attributeValue\n    .replace(regex, ' $1 ')\n    // replace annoying commas and arbitrary whitespace with single spaces\n    .replace(/,/gi, ' ')\n    .replace(/\\s+/gi, ' ');\n","import { ROTATE, SCALE, SKEW_X, SKEW_Y, iMatrix } from '../constants';\nimport { reNum } from './constants';\nimport type { TMat2D } from '../typedefs';\nimport { cleanupSvgAttribute } from '../util/internals/cleanupSvgAttribute';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createSkewXMatrix,\n  createSkewYMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\n\n// == begin transform regexp\nconst p = `(${reNum})`;\nconst skewX = String.raw`(skewX)\\(${p}\\)`;\nconst skewY = String.raw`(skewY)\\(${p}\\)`;\nconst rotate = String.raw`(rotate)\\(${p}(?: ${p} ${p})?\\)`;\nconst scale = String.raw`(scale)\\(${p}(?: ${p})?\\)`;\nconst translate = String.raw`(translate)\\(${p}(?: ${p})?\\)`;\nconst matrix = String.raw`(matrix)\\(${p} ${p} ${p} ${p} ${p} ${p}\\)`;\nconst transform = `(?:${matrix}|${translate}|${rotate}|${scale}|${skewX}|${skewY})`;\nconst transforms = `(?:${transform}*)`;\nconst transformList = String.raw`^\\s*(?:${transforms}?)\\s*$`;\n// http://www.w3.org/TR/SVG/coords.html#TransformAttribute\nconst reTransformList = new RegExp(transformList);\nconst reTransform = new RegExp(transform);\nconst reTransformAll = new RegExp(transform, 'g');\n// == end transform regexp\n\n/**\n * Parses \"transform\" attribute, returning an array of values\n * @static\n * @function\n * @memberOf fabric\n * @param {String} attributeValue String containing attribute value\n * @return {TTransformMatrix} Array of 6 elements representing transformation matrix\n */\nexport function parseTransformAttribute(attributeValue: string): TMat2D {\n  // first we clean the string\n  attributeValue = cleanupSvgAttribute(attributeValue)\n    // remove spaces around front parentheses\n    .replace(/\\s*([()])\\s*/gi, '$1');\n\n  // start with identity matrix\n  const matrices: TMat2D[] = [];\n\n  // return if no argument was given or\n  // an argument does not match transform attribute regexp\n  if (\n    !attributeValue ||\n    (attributeValue && !reTransformList.test(attributeValue))\n  ) {\n    return [...iMatrix];\n  }\n\n  for (const match of attributeValue.matchAll(reTransformAll)) {\n    const transformMatch = reTransform.exec(match[0]);\n    if (!transformMatch) {\n      continue;\n    }\n    let matrix: TMat2D = iMatrix;\n    const matchedParams = transformMatch.filter((m) => !!m);\n    const [, operation, ...rawArgs] = matchedParams;\n    const [arg0, arg1, arg2, arg3, arg4, arg5] = rawArgs.map((arg) =>\n      parseFloat(arg),\n    );\n\n    switch (operation) {\n      case 'translate':\n        matrix = createTranslateMatrix(arg0, arg1);\n        break;\n      case ROTATE:\n        matrix = createRotateMatrix({ angle: arg0 }, { x: arg1, y: arg2 });\n        break;\n      case SCALE:\n        matrix = createScaleMatrix(arg0, arg1);\n        break;\n      case SKEW_X:\n        matrix = createSkewXMatrix(arg0);\n        break;\n      case SKEW_Y:\n        matrix = createSkewYMatrix(arg0);\n        break;\n      case 'matrix':\n        matrix = [arg0, arg1, arg2, arg3, arg4, arg5];\n        break;\n    }\n\n    // snapshot current matrix into matrices array\n    matrices.push(matrix);\n  }\n\n  return multiplyTransformMatrixArray(matrices);\n}\n","import { multiplyTransformMatrices } from '../util/misc/matrix';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { parseTransformAttribute } from './parseTransformAttribute';\nimport { CENTER, LEFT, RIGHT, NONE, FILL, STROKE } from '../constants';\nimport { TEXT_DECORATION_THICKNESS } from '../shapes/Text/constants';\n\nexport function normalizeValue(\n  attr: string,\n  value: any,\n  parentAttributes: Record<string, any>,\n  fontSize: number,\n): string | null | boolean | number[] | number {\n  const isArray = Array.isArray(value);\n  let parsed: number | number[];\n  let ouputValue: string | null | boolean | number[] | number = value;\n  if ((attr === FILL || attr === STROKE) && value === NONE) {\n    ouputValue = '';\n  } else if (attr === 'strokeUniform') {\n    return value === 'non-scaling-stroke';\n  } else if (attr === 'strokeDashArray') {\n    if (value === NONE) {\n      ouputValue = null;\n    } else {\n      ouputValue = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n    }\n  } else if (attr === 'transformMatrix') {\n    if (parentAttributes && parentAttributes.transformMatrix) {\n      ouputValue = multiplyTransformMatrices(\n        parentAttributes.transformMatrix,\n        parseTransformAttribute(value),\n      );\n    } else {\n      ouputValue = parseTransformAttribute(value);\n    }\n  } else if (attr === 'visible') {\n    ouputValue = value !== NONE && value !== 'hidden';\n    // display=none on parent element always takes precedence over child element\n    if (parentAttributes && parentAttributes.visible === false) {\n      ouputValue = false;\n    }\n  } else if (attr === 'opacity') {\n    ouputValue = parseFloat(value);\n    if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n      ouputValue *= parentAttributes.opacity as number;\n    }\n  } else if (attr === 'textAnchor' /* text-anchor */) {\n    ouputValue = value === 'start' ? LEFT : value === 'end' ? RIGHT : CENTER;\n  } else if (attr === 'charSpacing' || attr === TEXT_DECORATION_THICKNESS) {\n    // parseUnit returns px and we convert it to em\n    parsed = (parseUnit(value, fontSize) / fontSize) * 1000;\n  } else if (attr === 'paintFirst') {\n    const fillIndex = value.indexOf(FILL);\n    const strokeIndex = value.indexOf(STROKE);\n    ouputValue = FILL;\n    if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n      ouputValue = STROKE;\n    } else if (fillIndex === -1 && strokeIndex > -1) {\n      ouputValue = STROKE;\n    }\n  } else if (\n    attr === 'href' ||\n    attr === 'xlink:href' ||\n    attr === 'font' ||\n    attr === 'id'\n  ) {\n    return value;\n  } else if (attr === 'imageSmoothing') {\n    return value === 'optimizeQuality';\n  } else {\n    parsed = isArray\n      ? (value as string[]).map(parseUnit)\n      : parseUnit(value, fontSize);\n  }\n\n  return !isArray && isNaN(parsed! as number) ? ouputValue : parsed!;\n}\n","import { parseUnit } from '../util/misc/svgParsing';\nimport { reFontDeclaration } from './constants';\n\n/**\n * Parses a short font declaration, building adding its properties to a style object\n * @static\n * @function\n * @memberOf fabric\n * @param {String} value font declaration\n * @param {Object} oStyle definition\n */\nexport function parseFontDeclaration(\n  value: string,\n  oStyle: Record<string, any>,\n): void {\n  const match = value.match(reFontDeclaration);\n\n  if (!match) {\n    return;\n  }\n  const fontStyle = match[1],\n    // font variant is not used\n    // fontVariant = match[2],\n    fontWeight = match[3],\n    fontSize = match[4],\n    lineHeight = match[5],\n    fontFamily = match[6];\n\n  if (fontStyle) {\n    oStyle.fontStyle = fontStyle;\n  }\n  if (fontWeight) {\n    oStyle.fontWeight = isNaN(parseFloat(fontWeight))\n      ? fontWeight\n      : parseFloat(fontWeight);\n  }\n  if (fontSize) {\n    oStyle.fontSize = parseUnit(fontSize);\n  }\n  if (fontFamily) {\n    oStyle.fontFamily = fontFamily;\n  }\n  if (lineHeight) {\n    oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n  }\n}\n","/**\n * Takes a style string and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleString(\n  style: string,\n  oStyle: Record<string, any>,\n): void {\n  style\n    .replace(/;\\s*$/, '')\n    .split(';')\n    .forEach((chunk) => {\n      if (!chunk) return;\n      const [attr, value] = chunk.split(':');\n      oStyle[attr.trim().toLowerCase()] = value.trim();\n    });\n}\n","import { parseStyleObject } from './parseStyleObject';\nimport { parseStyleString } from './parseStyleString';\n\n/**\n * Parses \"style\" attribute, retuning an object with values\n * @static\n * @memberOf fabric\n * @param {SVGElement} element Element to parse\n * @return {Object} Objects with values parsed from style attribute of an element\n */\nexport function parseStyleAttribute(element: HTMLElement): Record<string, any> {\n  const oStyle: Record<string, any> = {},\n    style = element.getAttribute('style');\n\n  if (!style) {\n    return oStyle;\n  }\n\n  if (typeof style === 'string') {\n    parseStyleString(style, oStyle);\n  } else {\n    parseStyleObject(style, oStyle);\n  }\n\n  return oStyle;\n}\n","/**\n * Takes a style object and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleObject(\n  style: Record<string, any>,\n  oStyle: Record<string, any>,\n): void {\n  Object.entries(style).forEach(([prop, value]) => {\n    if (value === undefined) {\n      return;\n    }\n    oStyle[prop.toLowerCase()] = value;\n  });\n}\n","import { Color } from '../color/Color';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject } from '../shapes/Object/FabricObject';\n\nconst colorAttributesMap = {\n  stroke: 'strokeOpacity',\n  fill: 'fillOpacity',\n};\n\n/**\n * @private\n * @param {Object} attributes Array of attributes to parse\n */\n\nexport function setStrokeFillOpacity(\n  attributes: Record<string, any>,\n): Record<string, any> {\n  const defaults = FabricObject.getDefaults();\n  Object.entries(colorAttributesMap).forEach(([attr, colorAttr]) => {\n    if (\n      typeof attributes[colorAttr] === 'undefined' ||\n      attributes[attr] === ''\n    ) {\n      return;\n    }\n    if (typeof attributes[attr] === 'undefined') {\n      if (!defaults[attr]) {\n        return;\n      }\n      attributes[attr] = defaults[attr];\n    }\n    if (attributes[attr].indexOf('url(') === 0) {\n      return;\n    }\n    const color = new Color(attributes[attr]);\n    attributes[attr] = color\n      .setAlpha(toFixed(color.getAlpha() * attributes[colorAttr], 2))\n      .toRgba();\n  });\n  return attributes;\n}\n","import { DEFAULT_SVG_FONT_SIZE } from '../constants';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { cPath, fSize, svgValidParentsRegEx } from './constants';\nimport { getGlobalStylesForElement } from './getGlobalStylesForElement';\nimport { normalizeAttr } from './normalizeAttr';\nimport { normalizeValue } from './normalizeValue';\nimport { parseFontDeclaration } from './parseFontDeclaration';\nimport { parseStyleAttribute } from './parseStyleAttribute';\nimport { setStrokeFillOpacity } from './setStrokeFillOpacity';\nimport type { CSSRules } from './typedefs';\n\n/**\n * Returns an object of attributes' name/value, given element and an array of attribute names;\n * Parses parent \"g\" nodes recursively upwards.\n * @param {SVGElement | HTMLElement} element Element to parse\n * @param {Array} attributes Array of attributes to parse\n * @return {Object} object containing parsed attributes' names/values\n */\nexport function parseAttributes(\n  element: HTMLElement | null,\n  attributes: string[],\n  cssRules?: CSSRules,\n): Record<string, any> {\n  if (!element) {\n    return {};\n  }\n\n  let parentAttributes: Record<string, string> = {},\n    fontSize: number,\n    parentFontSize = DEFAULT_SVG_FONT_SIZE;\n\n  // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n  if (\n    element.parentNode &&\n    svgValidParentsRegEx.test(element.parentNode.nodeName)\n  ) {\n    parentAttributes = parseAttributes(\n      element.parentElement,\n      attributes,\n      cssRules,\n    );\n    if (parentAttributes.fontSize) {\n      fontSize = parentFontSize = parseUnit(parentAttributes.fontSize);\n    }\n  }\n\n  const ownAttributes: Record<string, string> = {\n    ...attributes.reduce<Record<string, string>>((memo, attr) => {\n      const value = element.getAttribute(attr);\n      if (value) {\n        memo[attr] = value;\n      }\n      return memo;\n    }, {}),\n    // add values parsed from style, which take precedence over attributes\n    // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n    ...getGlobalStylesForElement(element, cssRules),\n    ...parseStyleAttribute(element),\n  };\n\n  if (ownAttributes[cPath]) {\n    element.setAttribute(cPath, ownAttributes[cPath]);\n  }\n  if (ownAttributes[fSize]) {\n    // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n    fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n    ownAttributes[fSize] = `${fontSize}`;\n  }\n\n  // this should have its own complex type\n  const normalizedStyle: Record<\n    string,\n    string | boolean | number | number[] | null\n  > = {};\n  for (const attr in ownAttributes) {\n    const normalizedAttr = normalizeAttr(attr);\n    const normalizedValue = normalizeValue(\n      normalizedAttr,\n      ownAttributes[attr],\n      parentAttributes,\n      fontSize!,\n    );\n    normalizedStyle[normalizedAttr] = normalizedValue;\n  }\n  if (normalizedStyle && normalizedStyle.font) {\n    parseFontDeclaration(normalizedStyle.font as string, normalizedStyle);\n  }\n  const mergedAttrs = { ...parentAttributes, ...normalizedStyle };\n  return svgValidParentsRegEx.test(element.nodeName)\n    ? mergedAttrs\n    : setStrokeFillOpacity(mergedAttrs);\n}\n","import { elementMatchesRule } from './elementMatchesRule';\nimport type { CSSRules } from './typedefs';\n\n/**\n * @private\n */\n\nexport function getGlobalStylesForElement(\n  element: HTMLElement,\n  cssRules: CSSRules = {},\n) {\n  let styles: Record<string, string> = {};\n  for (const rule in cssRules) {\n    if (elementMatchesRule(element, rule.split(' '))) {\n      styles = {\n        ...styles,\n        ...cssRules[rule],\n      };\n    }\n  }\n  return styles;\n}\n","import { kRect } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const rectDefaultValues: Partial<TClassProperties<Rect>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueRectProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedRectProps\n  extends SerializedObjectProps,\n    UniqueRectProps {}\n\nexport interface RectProps extends FabricObjectProps, UniqueRectProps {}\n\nconst RECT_PROPS = ['rx', 'ry'] as const;\n\nexport class Rect<\n    Props extends TOptions<RectProps> = Partial<RectProps>,\n    SProps extends SerializedRectProps = SerializedRectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements RectProps\n{\n  /**\n   * Horizontal border radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical border radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Rect';\n\n  static cacheProperties = [...cacheProperties, ...RECT_PROPS];\n\n  static ownDefaults = rectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Rect.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Rect.ownDefaults);\n    this.setOptions(options);\n    this._initRxRy();\n  }\n  /**\n   * Initializes rx/ry attributes\n   * @private\n   */\n  _initRxRy() {\n    const { rx, ry } = this;\n    if (rx && !ry) {\n      this.ry = rx;\n    } else if (ry && !rx) {\n      this.rx = ry;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const { width: w, height: h } = this;\n    const x = -w / 2;\n    const y = -h / 2;\n    const rx = this.rx ? Math.min(this.rx, w / 2) : 0;\n    const ry = this.ry ? Math.min(this.ry, h / 2) : 0;\n    const isRounded = rx !== 0 || ry !== 0;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x + rx, y);\n\n    ctx.lineTo(x + w - rx, y);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w - kRect * rx,\n        y,\n        x + w,\n        y + kRect * ry,\n        x + w,\n        y + ry,\n      );\n\n    ctx.lineTo(x + w, y + h - ry);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w,\n        y + h - kRect * ry,\n        x + w - kRect * rx,\n        y + h,\n        x + w - rx,\n        y + h,\n      );\n\n    ctx.lineTo(x + rx, y + h);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + kRect * rx,\n        y + h,\n        x,\n        y + h - kRect * ry,\n        x,\n        y + h - ry,\n      );\n\n    ctx.lineTo(x, y + ry);\n    isRounded &&\n      ctx.bezierCurveTo(x, y + kRect * ry, x + kRect * rx, y, x + rx, y);\n\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...RECT_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { width, height, rx, ry } = this;\n    return [\n      '<rect ',\n      'COMMON_PARTS',\n      `x=\"${-width / 2}\" y=\"${\n        -height / 2\n      }\" rx=\"${rx}\" ry=\"${ry}\" width=\"${width}\" height=\"${height}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Rect.fromElement`)\n   * @static\n   * @memberOf Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'rx',\n    'ry',\n    'width',\n    'height',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns {@link Rect} instance from an SVG element\n   * @static\n   * @memberOf Rect\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      left = 0,\n      top = 0,\n      width = 0,\n      height = 0,\n      visible = true,\n      ...restOfparsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n\n    return new this({\n      ...options,\n      ...restOfparsedAttributes,\n      left,\n      top,\n      width,\n      height,\n      visible: Boolean(visible && width && height),\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Rect);\nclassRegistry.setSVGClass(Rect);\n","export const LAYOUT_TYPE_INITIALIZATION = 'initialization';\nexport const LAYOUT_TYPE_ADDED = 'added';\nexport const LAYOUT_TYPE_REMOVED = 'removed';\nexport const LAYOUT_TYPE_IMPERATIVE = 'imperative';\nexport const LAYOUT_TYPE_OBJECT_MODIFIED = 'object_modified';\nexport const LAYOUT_TYPE_OBJECT_MODIFYING = 'object_modifying';\n","import { Point, ZERO } from '../../Point';\nimport type { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { multiplyTransformMatrixArray } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport {\n  calcPlaneChangeMatrix,\n  sendVectorToPlane,\n} from '../../util/misc/planeChange';\n\n/**\n * @returns 2 points, the tl and br corners of the non rotated bounding box of an object\n * in the {@link group} plane, taking into account objects that {@link group} is their parent\n * but also belong to the active selection.\n */\nexport const getObjectBounds = (\n  destinationGroup: Group,\n  object: FabricObject,\n): Point[] => {\n  const {\n    strokeUniform,\n    strokeWidth,\n    width,\n    height,\n    group: currentGroup,\n  } = object;\n  const t =\n    currentGroup && currentGroup !== destinationGroup\n      ? calcPlaneChangeMatrix(\n          currentGroup.calcTransformMatrix(),\n          destinationGroup.calcTransformMatrix(),\n        )\n      : null;\n  const objectCenter = t\n    ? object.getRelativeCenterPoint().transform(t)\n    : object.getRelativeCenterPoint();\n  const accountForStroke = !object['isStrokeAccountedForInDimensions']();\n  const strokeUniformVector =\n    strokeUniform && accountForStroke\n      ? sendVectorToPlane(\n          new Point(strokeWidth, strokeWidth),\n          undefined,\n          destinationGroup.calcTransformMatrix(),\n        )\n      : ZERO;\n  const scalingStrokeWidth =\n    !strokeUniform && accountForStroke ? strokeWidth : 0;\n  const sizeVector = sizeAfterTransform(\n    width + scalingStrokeWidth,\n    height + scalingStrokeWidth,\n    multiplyTransformMatrixArray([t, object.calcOwnMatrix()], true),\n  )\n    .add(strokeUniformVector)\n    .scalarDivide(2);\n  return [objectCenter.subtract(sizeVector), objectCenter.add(sizeVector)];\n};\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_IMPERATIVE,\n} from '../constants';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { getObjectBounds } from './utils';\n\n/**\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\n *\n * In charge of calculating the bounding box of the passed objects.\n */\nexport abstract class LayoutStrategy {\n  /**\n   * override by subclass for persistence (TS does not support `static abstract`)\n   */\n  static type = 'strategy';\n\n  /**\n   * Used by the `LayoutManager` to perform layout\n   * @TODO/fix: if this method is calcResult, should calc unconditionally.\n   * the condition to not calc should be evaluated by the layoutManager.\n   * @returns layout result **OR** `undefined` to skip layout\n   */\n  public calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    if (this.shouldPerformLayout(context)) {\n      return this.calcBoundingBox(objects, context);\n    }\n  }\n\n  shouldPerformLayout({ type, prevStrategy, strategy }: StrictLayoutContext) {\n    return (\n      type === LAYOUT_TYPE_INITIALIZATION ||\n      type === LAYOUT_TYPE_IMPERATIVE ||\n      (!!prevStrategy && strategy !== prevStrategy)\n    );\n  }\n\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\n    return (\n      type !== LAYOUT_TYPE_INITIALIZATION &&\n      clipPath &&\n      !clipPath.absolutePositioned\n    );\n  }\n\n  getInitialSize(\n    context: StrictLayoutContext & InitializationLayoutContext,\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ) {\n    return result.size;\n  }\n\n  /**\n   * Override this method to customize layout.\n   */\n  calcBoundingBox(\n    objects: FabricObject[],\n    context: StrictLayoutContext,\n  ): LayoutStrategyResult | undefined {\n    const { type, target } = context;\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\n      return context.overrides;\n    }\n    if (objects.length === 0) {\n      return;\n    }\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\n      objects\n        .map((object) => getObjectBounds(target, object))\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), []),\n    );\n    const bboxSize = new Point(width, height);\n    const bboxLeftTop = new Point(left, top);\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\n\n    if (type === LAYOUT_TYPE_INITIALIZATION) {\n      const actualSize = this.getInitialSize(context, {\n        size: bboxSize,\n        center: bboxCenter,\n      });\n      return {\n        // in `initialization` we do not account for target's transformation matrix\n        center: bboxCenter,\n        // TODO: investigate if this is still necessary\n        relativeCorrection: new Point(0, 0),\n        size: actualSize,\n      };\n    } else {\n      //  we send `relativeCenter` up to group's containing plane\n      const center = bboxCenter.transform(target.calcOwnMatrix());\n      return {\n        center,\n        size: bboxSize,\n      };\n    }\n  }\n}\n","import type { StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to fit target's objects.\n */\nexport class FitContentLayout extends LayoutStrategy {\n  static readonly type = 'fit-content';\n\n  /**\n   * @override layout on all triggers\n   * Override at will\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return true;\n  }\n}\n\nclassRegistry.setClass(FitContentLayout);\n","import { Point } from '../Point';\nimport {\n  CENTER,\n  CHANGED,\n  MODIFIED,\n  MODIFY_PATH,\n  MODIFY_POLY,\n  MOVING,\n  RESIZING,\n  ROTATING,\n  SCALING,\n  SKEWING,\n  iMatrix,\n} from '../constants';\nimport type { Group } from '../shapes/Group';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { invertTransform } from '../util/misc/matrix';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_OBJECT_MODIFIED,\n  LAYOUT_TYPE_OBJECT_MODIFYING,\n} from './constants';\nimport type {\n  LayoutContext,\n  LayoutResult,\n  RegistrationContext,\n  StrictLayoutContext,\n} from './types';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TModificationEvents } from '../EventTypeDefs';\n\nconst LAYOUT_MANAGER = 'layoutManager';\n\nexport type SerializedLayoutManager = {\n  type: string;\n  strategy: string;\n};\n\nexport class LayoutManager {\n  private declare _prevLayoutStrategy?: LayoutStrategy;\n  protected declare _subscriptions: Map<FabricObject, VoidFunction[]>;\n\n  strategy: LayoutStrategy;\n\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\n    this.strategy = strategy;\n    this._subscriptions = new Map();\n  }\n\n  public performLayout(context: LayoutContext) {\n    const strictContext: StrictLayoutContext = {\n      bubbles: true,\n      strategy: this.strategy,\n      ...context,\n      prevStrategy: this._prevLayoutStrategy,\n      stopPropagation() {\n        this.bubbles = false;\n      },\n    };\n\n    this.onBeforeLayout(strictContext);\n\n    const layoutResult = this.getLayoutResult(strictContext);\n    if (layoutResult) {\n      this.commitLayout(strictContext, layoutResult);\n    }\n\n    this.onAfterLayout(strictContext, layoutResult);\n    this._prevLayoutStrategy = strictContext.strategy;\n  }\n\n  /**\n   * Attach handlers for events that we know will invalidate the layout when\n   * performed on child objects ( general transforms ).\n   * Returns the disposers for later unsubscribing and cleanup\n   * @param {FabricObject} object\n   * @param {RegistrationContext & Partial<StrictLayoutContext>} context\n   * @returns {VoidFunction[]} disposers remove the handlers\n   */\n  protected attachHandlers(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): VoidFunction[] {\n    const { target } = context;\n    return (\n      [\n        MODIFIED,\n        MOVING,\n        RESIZING,\n        ROTATING,\n        SCALING,\n        SKEWING,\n        CHANGED,\n        MODIFY_POLY,\n        MODIFY_PATH,\n      ] as (TModificationEvents & 'modified')[]\n    ).map((key) =>\n      object.on(key, (e) =>\n        this.performLayout(\n          key === MODIFIED\n            ? {\n                type: LAYOUT_TYPE_OBJECT_MODIFIED,\n                trigger: key,\n                e,\n                target,\n              }\n            : {\n                type: LAYOUT_TYPE_OBJECT_MODIFYING,\n                trigger: key,\n                e,\n                target,\n              },\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Subscribe an object to transform events that will trigger a layout change on the parent\n   * This is important only for interactive groups.\n   * @param object\n   * @param context\n   */\n  protected subscribe(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    this.unsubscribe(object, context);\n    const disposers = this.attachHandlers(object, context);\n    this._subscriptions.set(object, disposers);\n  }\n\n  /**\n   * unsubscribe object layout triggers\n   */\n  protected unsubscribe(\n    object: FabricObject,\n    _context?: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    (this._subscriptions.get(object) || []).forEach((d) => d());\n    this._subscriptions.delete(object);\n  }\n\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.unsubscribe(object, context));\n  }\n\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.subscribe(object, context));\n  }\n\n  protected onBeforeLayout(context: StrictLayoutContext) {\n    const { target, type } = context;\n    const { canvas } = target;\n    // handle layout triggers subscription\n    // @TODO: gate the registration when the group is interactive\n    if (type === LAYOUT_TYPE_INITIALIZATION || type === LAYOUT_TYPE_ADDED) {\n      this.subscribeTargets(context);\n    } else if (type === LAYOUT_TYPE_REMOVED) {\n      this.unsubscribeTargets(context);\n    }\n    // fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:before', {\n      context,\n    });\n    canvas &&\n      canvas.fire('object:layout:before', {\n        target,\n        context,\n      });\n\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\n      const { strategy: _, ...tricklingContext } = context;\n      // traverse the tree\n      target.forEachObject(\n        (object) =>\n          (object as Group).layoutManager &&\n          (object as Group).layoutManager.performLayout({\n            ...tricklingContext,\n            bubbles: false,\n            target: object as Group,\n          }),\n      );\n    }\n  }\n\n  protected getLayoutResult(\n    context: StrictLayoutContext,\n  ): Required<LayoutResult> | undefined {\n    const { target, strategy, type } = context;\n\n    const result = strategy.calcLayoutResult(context, target.getObjects());\n\n    if (!result) {\n      return;\n    }\n\n    const prevCenter =\n      type === LAYOUT_TYPE_INITIALIZATION\n        ? new Point()\n        : target.getRelativeCenterPoint();\n\n    const {\n      center: nextCenter,\n      correction = new Point(),\n      relativeCorrection = new Point(),\n    } = result;\n    const offset = prevCenter\n      .subtract(nextCenter)\n      .add(correction)\n      .transform(\n        // in `initialization` we do not account for target's transformation matrix\n        type === LAYOUT_TYPE_INITIALIZATION\n          ? iMatrix\n          : invertTransform(target.calcOwnMatrix()),\n        true,\n      )\n      .add(relativeCorrection);\n\n    return {\n      result,\n      prevCenter,\n      nextCenter,\n      offset,\n    };\n  }\n\n  protected commitLayout(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    const {\n      result: { size },\n      nextCenter,\n    } = layoutResult;\n    // set dimensions\n    target.set({ width: size.x, height: size.y });\n    // layout descendants\n    this.layoutObjects(context, layoutResult);\n    //  set position\n    // in `initialization` we do not account for target's transformation matrix\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      // TODO: what about strokeWidth?\n      target.set({\n        left:\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\n      });\n    } else {\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\n      // invalidate\n      target.setCoords();\n      target.set('dirty', true);\n    }\n  }\n\n  protected layoutObjects(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    //  adjust objects to account for new center\n    target.forEachObject((object) => {\n      object.group === target &&\n        this.layoutObject(context, layoutResult, object);\n    });\n    // adjust clip path to account for new center\n    context.strategy.shouldLayoutClipPath(context) &&\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\n  }\n\n  /**\n   * @param {FabricObject} object\n   * @param {Point} offset\n   */\n  protected layoutObject(\n    context: StrictLayoutContext,\n    { offset }: Required<LayoutResult>,\n    object: FabricObject,\n  ) {\n    // TODO: this is here for cache invalidation.\n    // verify if this is necessary since we have explicit\n    // cache invalidation at the end of commitLayout\n    object.set({\n      left: object.left + offset.x,\n      top: object.top + offset.y,\n    });\n  }\n\n  protected onAfterLayout(\n    context: StrictLayoutContext,\n    layoutResult?: LayoutResult,\n  ) {\n    const {\n      target,\n      strategy,\n      bubbles,\n      prevStrategy: _,\n      ...bubblingContext\n    } = context;\n    const { canvas } = target;\n\n    //  fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:after', {\n      context,\n      result: layoutResult,\n    });\n    canvas &&\n      canvas.fire('object:layout:after', {\n        context,\n        result: layoutResult,\n        target,\n      });\n\n    //  bubble\n    const parent = target.parent;\n    if (bubbles && parent?.layoutManager) {\n      //  add target to context#path\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\n      //  all parents should invalidate their layout\n      parent.layoutManager.performLayout({\n        ...bubblingContext,\n        target: parent,\n      });\n    }\n    target.set('dirty', true);\n  }\n\n  dispose() {\n    const { _subscriptions } = this;\n    _subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\n    _subscriptions.clear();\n  }\n\n  toObject() {\n    return {\n      type: LAYOUT_MANAGER,\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\n    };\n  }\n\n  toJSON() {\n    return this.toObject();\n  }\n}\n\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\n","import type { CollectionEvents, ObjectEvents } from '../EventTypeDefs';\nimport { createCollectionMixin } from '../Collection';\nimport type {\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n  Abortable,\n} from '../typedefs';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n} from '../util/misc/matrix';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { applyTransformToObject } from '../util/misc/objectTransforms';\nimport { FabricObject } from './Object/FabricObject';\nimport { Rect } from './Rect';\nimport { classRegistry } from '../ClassRegistry';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport { log } from '../util/internals/console';\nimport type {\n  ImperativeLayoutOptions,\n  LayoutBeforeEvent,\n  LayoutAfterEvent,\n} from '../LayoutManager/types';\nimport { LayoutManager } from '../LayoutManager/LayoutManager';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { SerializedLayoutManager } from '../LayoutManager/LayoutManager';\nimport type { FitContentLayout } from '../LayoutManager';\nimport type { DrawContext } from './Object/Object';\n\n/**\n * This class handles the specific case of creating a group using {@link Group#fromObject} and is not meant to be used in any other case.\n * We could have used a boolean in the constructor, as we did previously, but we think the boolean\n * would stay in the group's constructor interface and create confusion, therefore it was removed.\n * This layout manager doesn't do anything and therefore keeps the exact layout the group had when {@link Group#toObject} was called.\n */\nclass NoopLayoutManager extends LayoutManager {\n  performLayout() {}\n}\n\nexport interface GroupEvents extends ObjectEvents, CollectionEvents {\n  'layout:before': LayoutBeforeEvent;\n  'layout:after': LayoutAfterEvent;\n}\n\nexport interface GroupOwnProps {\n  subTargetCheck: boolean;\n  interactive: boolean;\n}\n\nexport interface SerializedGroupProps\n  extends SerializedObjectProps,\n    GroupOwnProps {\n  objects: SerializedObjectProps[];\n  layoutManager: SerializedLayoutManager;\n}\n\nexport interface GroupProps extends FabricObjectProps, GroupOwnProps {\n  layoutManager: LayoutManager;\n}\n\nexport const groupDefaultValues: Partial<TClassProperties<Group>> = {\n  strokeWidth: 0,\n  subTargetCheck: false,\n  interactive: false,\n};\n\n/**\n * @fires object:added\n * @fires object:removed\n * @fires layout:before\n * @fires layout:after\n */\nexport class Group\n  extends createCollectionMixin(\n    FabricObject<GroupProps, SerializedGroupProps, GroupEvents>,\n  )\n  implements GroupProps\n{\n  /**\n   * Used to optimize performance\n   * set to `false` if you don't need contained objects to be targets of events\n   * @default\n   * @type boolean\n   */\n  declare subTargetCheck: boolean;\n\n  /**\n   * Used to allow targeting of object inside groups.\n   * set to true if you want to select an object inside a group.\\\n   * **REQUIRES** `subTargetCheck` set to true\n   * This will be not removed but slowly replaced with a method setInteractive\n   * that will take care of enabling subTargetCheck and necessary object events.\n   * There is too much attached to group interactivity to just be evaluated by a\n   * boolean in the code\n   * @default\n   * @deprecated\n   * @type boolean\n   */\n  declare interactive: boolean;\n\n  declare layoutManager: LayoutManager;\n\n  /**\n   * Used internally to optimize performance\n   * Once an object is selected, instance is rendered without the selected object.\n   * This way instance is cached only once for the entire interaction with the selected object.\n   * @private\n   */\n  protected _activeObjects: FabricObject[] = [];\n\n  static type = 'Group';\n\n  static ownDefaults: Record<string, any> = groupDefaultValues;\n  private __objectSelectionTracker: (ev: ObjectEvents['selected']) => void;\n  private __objectSelectionDisposer: (ev: ObjectEvents['deselected']) => void;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Group.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {FabricObject[]} [objects] instance objects\n   * @param {Object} [options] Options object\n   */\n  constructor(objects: FabricObject[] = [], options: Partial<GroupProps> = {}) {\n    super();\n    Object.assign(this, Group.ownDefaults);\n    this.setOptions(options);\n    this.groupInit(objects, options);\n  }\n\n  /**\n   * Shared code between group and active selection\n   * Meant to be used by the constructor.\n   */\n  protected groupInit(\n    objects: FabricObject[],\n    options: {\n      layoutManager?: LayoutManager;\n      top?: number;\n      left?: number;\n    },\n  ) {\n    this._objects = [...objects]; // Avoid unwanted mutations of Collection to affect the caller\n\n    this.__objectSelectionTracker = this.__objectSelectionMonitor.bind(\n      this,\n      true,\n    );\n    this.__objectSelectionDisposer = this.__objectSelectionMonitor.bind(\n      this,\n      false,\n    );\n\n    this.forEachObject((object) => {\n      this.enterGroup(object, false);\n    });\n\n    // perform initial layout\n    this.layoutManager = options.layoutManager ?? new LayoutManager();\n    this.layoutManager.performLayout({\n      type: LAYOUT_TYPE_INITIALIZATION,\n      target: this,\n      targets: [...objects],\n      // @TODO remove this concept from the layout manager.\n      // Layout manager will calculate the correct position,\n      // group options can override it later.\n      x: options.left,\n      y: options.top,\n    });\n  }\n\n  /**\n   * Checks if object can enter group and logs relevant warnings\n   * @private\n   * @param {FabricObject} object\n   * @returns\n   */\n  canEnterGroup(object: FabricObject) {\n    if (object === this || this.isDescendantOf(object)) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'Group: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    } else if (this._objects.indexOf(object) !== -1) {\n      // is already in the objects array\n      log(\n        'error',\n        'Group: duplicate objects are not supported inside group, this call has no effect',\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Override this method to enhance performance (for groups with a lot of objects).\n   * If Overriding, be sure not pass illegal objects to group - it will break your app.\n   * @private\n   */\n  protected _filterObjectsBeforeEnteringGroup(objects: FabricObject[]) {\n    return objects.filter((object, index, array) => {\n      // can enter AND is the first occurrence of the object in the passed args (to prevent adding duplicates)\n      return this.canEnterGroup(object) && array.indexOf(object) === index;\n    });\n  }\n\n  /**\n   * Add objects\n   * @param {...FabricObject[]} objects\n   */\n  add(...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.add(...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Inserts an object into collection at specified index\n   * @param {FabricObject[]} objects Object to insert\n   * @param {Number} index Index to insert object at\n   */\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.insertAt(index, ...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Remove objects\n   * @param {...FabricObject[]} objects\n   * @returns {FabricObject[]} removed objects\n   */\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_REMOVED, removed);\n    return removed;\n  }\n\n  _onObjectAdded(object: FabricObject) {\n    this.enterGroup(object, true);\n    this.fire('object:added', { target: object });\n    object.fire('added', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _onObjectRemoved(object: FabricObject, removeParentTransform?: boolean) {\n    this.exitGroup(object, removeParentTransform);\n    this.fire('object:removed', { target: object });\n    object.fire('removed', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    this.layoutManager.performLayout({\n      type,\n      targets,\n      target: this,\n    });\n  }\n\n  _onStackOrderChanged() {\n    this._set('dirty', true);\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    const prev = this[key as keyof this];\n    super._set(key, value);\n    if (key === 'canvas' && prev !== value) {\n      (this._objects || []).forEach((object) => {\n        object._set(key, value);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return this.subTargetCheck;\n  }\n\n  /**\n   * Remove all objects\n   * @returns {FabricObject[]} removed objects\n   */\n  removeAll() {\n    this._activeObjects = [];\n    return this.remove(...this._objects);\n  }\n\n  /**\n   * keeps track of the selected objects\n   * @private\n   */\n  __objectSelectionMonitor<T extends boolean>(\n    selected: T,\n    {\n      target: object,\n    }: ObjectEvents[T extends true ? 'selected' : 'deselected'],\n  ) {\n    const activeObjects = this._activeObjects;\n    if (selected) {\n      activeObjects.push(object);\n      this._set('dirty', true);\n    } else if (activeObjects.length > 0) {\n      const index = activeObjects.indexOf(object);\n      if (index > -1) {\n        activeObjects.splice(index, 1);\n        this._set('dirty', true);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} watch\n   * @param {FabricObject} object\n   */\n  _watchObject(watch: boolean, object: FabricObject) {\n    //  make sure we listen only once\n    watch && this._watchObject(false, object);\n    if (watch) {\n      object.on('selected', this.__objectSelectionTracker);\n      object.on('deselected', this.__objectSelectionDisposer);\n    } else {\n      object.off('selected', this.__objectSelectionTracker);\n      object.off('deselected', this.__objectSelectionDisposer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object.group && object.group.remove(object);\n    object._set('parent', this);\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  _enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    if (removeParentTransform) {\n      // can this be converted to utils (sendObjectToPlane)?\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          invertTransform(this.calcTransformMatrix()),\n          object.calcTransformMatrix(),\n        ),\n      );\n    }\n    this._shouldSetNestedCoords() && object.setCoords();\n    object._set('group', this);\n    object._set('canvas', this.canvas);\n    this._watchObject(true, object);\n    const activeObject =\n      this.canvas &&\n      this.canvas.getActiveObject &&\n      this.canvas.getActiveObject();\n    // if we are adding the activeObject in a group\n    if (\n      activeObject &&\n      (activeObject === object || object.isDescendantOf(activeObject))\n    ) {\n      this._activeObjects.push(object);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    object._set('parent', undefined);\n    object._set('canvas', undefined);\n  }\n\n  /**\n   * Executes the inner fabric logic of exiting a group.\n   * - Stop watching the object\n   * - Remove the object from the optimization map this._activeObjects\n   * - unset the group property of the object\n   * @protected\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object._set('group', undefined);\n    if (!removeParentTransform) {\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          this.calcTransformMatrix(),\n          object.calcTransformMatrix(),\n        ),\n      );\n      object.setCoords();\n    }\n    this._watchObject(false, object);\n    const index =\n      this._activeObjects.length > 0 ? this._activeObjects.indexOf(object) : -1;\n    if (index > -1) {\n      this._activeObjects.splice(index, 1);\n    }\n  }\n\n  /**\n   * Decide if the group should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step.\n   * Generally you do not cache objects in groups because the group is already cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    const ownCache = FabricObject.prototype.shouldCache.call(this);\n    if (ownCache) {\n      for (let i = 0; i < this._objects.length; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          this.ownCaching = false;\n          return false;\n        }\n      }\n    }\n    return ownCache;\n  }\n\n  /**\n   * Check if this object or a child object will cast a shadow\n   * @return {Boolean}\n   */\n  willDrawShadow() {\n    if (super.willDrawShadow()) {\n      return true;\n    }\n    for (let i = 0; i < this._objects.length; i++) {\n      if (this._objects[i].willDrawShadow()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if instance or its group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache(): boolean {\n    return this.ownCaching || (!!this.parent && this.parent.isOnACache());\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    this._renderBackground(ctx);\n    for (let i = 0; i < this._objects.length; i++) {\n      const obj = this._objects[i];\n      // TODO: handle rendering edge case somehow\n      if (this.canvas?.preserveObjectStacking && obj.group !== this) {\n        ctx.save();\n        ctx.transform(...invertTransform(this.calcTransformMatrix()));\n        obj.render(ctx);\n        ctx.restore();\n      } else if (obj.group === this) {\n        obj.render(ctx);\n      }\n    }\n    this._drawClipPath(ctx, this.clipPath, context);\n  }\n\n  /**\n   * @override\n   * @return {Boolean}\n   */\n  setCoords() {\n    super.setCoords();\n    this._shouldSetNestedCoords() &&\n      this.forEachObject((object) => object.setCoords());\n  }\n\n  triggerLayout(options: ImperativeLayoutOptions = {}) {\n    this.layoutManager.performLayout({\n      target: this,\n      type: LAYOUT_TYPE_IMPERATIVE,\n      ...options,\n    });\n  }\n\n  /**\n   * Renders instance on a given context\n   * @param {CanvasRenderingContext2D} ctx context to render instance on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    this._transformDone = true;\n    super.render(ctx);\n    this._transformDone = false;\n  }\n\n  /**\n   *\n   * @private\n   * @param {'toObject'|'toDatalessObject'} [method]\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {FabricObject[]} serialized objects\n   */\n  __serializeObjects(\n    method: 'toObject' | 'toDatalessObject',\n    propertiesToInclude?: string[],\n  ) {\n    const _includeDefaultValues = this.includeDefaultValues;\n    return this._objects\n      .filter(function (obj) {\n        return !obj.excludeFromExport;\n      })\n      .map(function (obj) {\n        const originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        const data = obj[method || 'toObject'](propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        // delete data.version;\n        return data;\n      });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<\n      GroupProps & TClassProperties<this>,\n      keyof SerializedGroupProps\n    >,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SerializedGroupProps {\n    const layoutManager = this.layoutManager.toObject();\n\n    return {\n      ...super.toObject([\n        'subTargetCheck',\n        'interactive',\n        ...propertiesToInclude,\n      ]),\n      ...(layoutManager.strategy !== 'fit-content' || this.includeDefaultValues\n        ? { layoutManager }\n        : {}),\n      objects: this.__serializeObjects(\n        'toObject',\n        propertiesToInclude as string[],\n      ),\n    };\n  }\n\n  toString() {\n    return `#<Group: (${this.complexity()})>`;\n  }\n\n  dispose() {\n    this.layoutManager.unsubscribeTargets({\n      targets: this.getObjects(),\n      target: this,\n    });\n    this._activeObjects = [];\n    this.forEachObject((object) => {\n      this._watchObject(false, object);\n      object.dispose();\n    });\n    super.dispose();\n  }\n\n  /**\n   * @private\n   */\n  _createSVGBgRect(reviver?: TSVGReviver) {\n    if (!this.backgroundColor) {\n      return '';\n    }\n    const fillStroke = Rect.prototype._toSVG.call(this);\n    const commons = fillStroke.indexOf('COMMON_PARTS');\n    fillStroke[commons] = 'for=\"group\" ';\n    const markup = fillStroke.join('');\n    return reviver ? reviver(markup) : markup;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  _toSVG(reviver?: TSVGReviver) {\n    const svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n    }\n    svgString.push('</g>\\n');\n    return svgString;\n  }\n\n  /**\n   * Returns styles-string for svg-export, specific version for group\n   * @return {String}\n   */\n  getSvgStyles(): string {\n    const opacity =\n        typeof this.opacity !== 'undefined' && this.opacity !== 1\n          ? `opacity: ${this.opacity};`\n          : '',\n      visibility = this.visible ? '' : ' visibility: hidden;';\n    return [opacity, this.getSvgFilter(), visibility].join('');\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const svgString = [];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n    }\n    return this._createBaseClipPathSVGMarkup(svgString, {\n      reviver,\n    });\n  }\n\n  /**\n   * @todo support loading from svg\n   * @private\n   * @static\n   * @memberOf Group\n   * @param {Object} object Object to create a group from\n   * @returns {Promise<Group>}\n   */\n  static fromObject<T extends TOptions<SerializedGroupProps>>(\n    { type, objects = [], layoutManager, ...options }: T,\n    abortable?: Abortable,\n  ) {\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, abortable),\n      enlivenObjectEnlivables(options, abortable),\n    ]).then(([objects, hydratedOptions]) => {\n      const group = new this(objects, {\n        ...options,\n        ...hydratedOptions,\n        layoutManager: new NoopLayoutManager(),\n      });\n      if (layoutManager) {\n        const layoutClass = classRegistry.getClass<typeof LayoutManager>(\n          layoutManager.type,\n        );\n        const strategyClass = classRegistry.getClass<typeof FitContentLayout>(\n          layoutManager.strategy,\n        );\n        group.layoutManager = new layoutClass(new strategyClass());\n      } else {\n        group.layoutManager = new LayoutManager();\n      }\n      group.layoutManager.subscribeTargets({\n        type: LAYOUT_TYPE_INITIALIZATION,\n        target: group,\n        targets: group.getObjects(),\n      });\n      group.setCoords();\n      return group;\n    });\n  }\n}\n\nclassRegistry.setClass(Group);\n","import type { GroupProps } from '../../shapes/Group';\nimport { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\n\n/**\n * TODO experiment with different layout manager and svg results ( fixed fit content )\n * Groups SVG elements (usually those retrieved from SVG document)\n * @static\n * @param {FabricObject[]} elements FabricObject(s) parsed from svg, to group\n * @return {FabricObject | Group}\n */\nexport const groupSVGElements = (\n  elements: FabricObject[],\n  options?: Partial<GroupProps>,\n) => {\n  if (elements && elements.length === 1) {\n    return elements[0];\n  }\n  return new Group(elements, options);\n};\n","import type { TSize } from '../../typedefs';\n\n/**\n * Finds the scale for the object source to fit inside the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to fit into destination\n */\nexport const findScaleToFit = (source: TSize, destination: TSize) =>\n  Math.min(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n\n/**\n * Finds the scale for the object source to cover entirely the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to cover destination\n */\nexport const findScaleToCover = (source: TSize, destination: TSize) =>\n  Math.max(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n","import { reNum } from '../../parser/constants';\n\nconst commaWsp = `\\\\s*,?\\\\s*`;\n\n/**\n * p for param\n * using \"bad naming\" here because it makes the regex much easier to read\n * p is a number that is preceded by an arbitary number of spaces, maybe 0,\n * a comma or not, and then possibly more spaces or not.\n */\nconst p = `${commaWsp}(${reNum})`;\n\n// const reMoveToCommand = `(M) ?(?:${p}${p} ?)+`;\n\n// const reLineCommand = `(L) ?(?:${p}${p} ?)+`;\n\n// const reHorizontalLineCommand = `(H) ?(?:${p} ?)+`;\n\n// const reVerticalLineCommand = `(V) ?(?:${p} ?)+`;\n\n// const reClosePathCommand = String.raw`(Z)\\s*`;\n\n// const reCubicCurveCommand = `(C) ?(?:${p}${p}${p}${p}${p}${p} ?)+`;\n\n// const reCubicCurveShortcutCommand = `(S) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveCommand = `(Q) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveShortcutCommand = `(T) ?(?:${p}${p} ?)+`;\n\nexport const reArcCommandPoints = `${p}${p}${p}${commaWsp}([01])${commaWsp}([01])${p}${p}`;\n// const reArcCommand = `(A) ?(?:${reArcCommandPoints} ?)+`;\n\n// export const rePathCommandGroups =\n//   `(?:(?:${reMoveToCommand})` +\n//   `|(?:${reLineCommand})` +\n//   `|(?:${reHorizontalLineCommand})` +\n//   `|(?:${reVerticalLineCommand})` +\n//   `|(?:${reClosePathCommand})` +\n//   `|(?:${reCubicCurveCommand})` +\n//   `|(?:${reCubicCurveShortcutCommand})` +\n//   `|(?:${reQuadraticCurveCommand})` +\n//   `|(?:${reQuadraticCurveShortcutCommand})` +\n//   `|(?:${reArcCommand}))`;\n\nexport const rePathCommand = '[mzlhvcsqta][^mzlhvcsqta]*';\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport { halfPI, PiBy180 } from '../../constants';\nimport type { TMat2D, TRadian, TRectBounds } from '../../typedefs';\nimport { cos } from '../misc/cos';\nimport { multiplyTransformMatrices, transformPoint } from '../misc/matrix';\nimport { sin } from '../misc/sin';\nimport { toFixed } from '../misc/toFixed';\nimport type {\n  TCurveInfo,\n  TComplexPathData,\n  TParsedAbsoluteCubicCurveCommand,\n  TPathSegmentInfo,\n  TPointAngle,\n  TSimpleParsedCommand,\n  TSimplePathData,\n  TPathSegmentCommandInfo,\n  TComplexParsedCommand,\n  TPathSegmentInfoCommon,\n  TEndPathInfo,\n  TParsedArcCommand,\n  TComplexParsedCommandType,\n} from './typedefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { reArcCommandPoints, rePathCommand } from './regex';\nimport { reNum } from '../../parser/constants';\n\n/**\n * Commands that may be repeated\n */\nconst repeatedCommands: Record<string, 'l' | 'L'> = {\n  m: 'l',\n  M: 'L',\n};\n\n/**\n * Convert an arc of a rotated ellipse to a Bezier Curve\n * @param {TRadian} theta1 start of the arc\n * @param {TRadian} theta2 end of the arc\n * @param cosTh cosine of the angle of rotation\n * @param sinTh sine of the angle of rotation\n * @param rx x-axis radius (before rotation)\n * @param ry y-axis radius (before rotation)\n * @param cx1 center x of the ellipse\n * @param cy1 center y of the ellipse\n * @param mT\n * @param fromX starting point of arc x\n * @param fromY starting point of arc y\n */\nconst segmentToBezier = (\n  theta1: TRadian,\n  theta2: TRadian,\n  cosTh: number,\n  sinTh: number,\n  rx: number,\n  ry: number,\n  cx1: number,\n  cy1: number,\n  mT: number,\n  fromX: number,\n  fromY: number,\n): TParsedAbsoluteCubicCurveCommand => {\n  const costh1 = cos(theta1),\n    sinth1 = sin(theta1),\n    costh2 = cos(theta2),\n    sinth2 = sin(theta2),\n    toX = cosTh * rx * costh2 - sinTh * ry * sinth2 + cx1,\n    toY = sinTh * rx * costh2 + cosTh * ry * sinth2 + cy1,\n    cp1X = fromX + mT * (-cosTh * rx * sinth1 - sinTh * ry * costh1),\n    cp1Y = fromY + mT * (-sinTh * rx * sinth1 + cosTh * ry * costh1),\n    cp2X = toX + mT * (cosTh * rx * sinth2 + sinTh * ry * costh2),\n    cp2Y = toY + mT * (sinTh * rx * sinth2 - cosTh * ry * costh2);\n\n  return ['C', cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n};\n\n/**\n * Adapted from {@link http://dxr.mozilla.org/mozilla-central/source/dom/svg/SVGPathDataParser.cpp}\n * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n * http://mozilla.org/MPL/2.0/\n * @param toX\n * @param toY\n * @param rx\n * @param ry\n * @param {number} large 0 or 1 flag\n * @param {number} sweep 0 or 1 flag\n * @param rotateX\n */\nconst arcToSegments = (\n  toX: number,\n  toY: number,\n  rx: number,\n  ry: number,\n  large: number,\n  sweep: number,\n  rotateX: TRadian,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n  let fromX = 0,\n    fromY = 0,\n    root = 0;\n  const PI = Math.PI,\n    theta = rotateX * PiBy180,\n    sinTheta = sin(theta),\n    cosTh = cos(theta),\n    px = 0.5 * (-cosTh * toX - sinTheta * toY),\n    py = 0.5 * (-cosTh * toY + sinTheta * toX),\n    rx2 = rx ** 2,\n    ry2 = ry ** 2,\n    py2 = py ** 2,\n    px2 = px ** 2,\n    pl = rx2 * ry2 - rx2 * py2 - ry2 * px2;\n  let _rx = Math.abs(rx);\n  let _ry = Math.abs(ry);\n\n  if (pl < 0) {\n    const s = Math.sqrt(1 - pl / (rx2 * ry2));\n    _rx *= s;\n    _ry *= s;\n  } else {\n    root =\n      (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n  }\n\n  const cx = (root * _rx * py) / _ry,\n    cy = (-root * _ry * px) / _rx,\n    cx1 = cosTh * cx - sinTheta * cy + toX * 0.5,\n    cy1 = sinTheta * cx + cosTh * cy + toY * 0.5;\n  let mTheta = calcVectorAngle(1, 0, (px - cx) / _rx, (py - cy) / _ry);\n  let dtheta = calcVectorAngle(\n    (px - cx) / _rx,\n    (py - cy) / _ry,\n    (-px - cx) / _rx,\n    (-py - cy) / _ry,\n  );\n\n  if (sweep === 0 && dtheta > 0) {\n    dtheta -= 2 * PI;\n  } else if (sweep === 1 && dtheta < 0) {\n    dtheta += 2 * PI;\n  }\n\n  // Convert into cubic bezier segments <= 90deg\n  const segments = Math.ceil(Math.abs((dtheta / PI) * 2)),\n    result = [],\n    mDelta = dtheta / segments,\n    mT =\n      ((8 / 3) * Math.sin(mDelta / 4) * Math.sin(mDelta / 4)) /\n      Math.sin(mDelta / 2);\n  let th3 = mTheta + mDelta;\n\n  for (let i = 0; i < segments; i++) {\n    result[i] = segmentToBezier(\n      mTheta,\n      th3,\n      cosTh,\n      sinTheta,\n      _rx,\n      _ry,\n      cx1,\n      cy1,\n      mT,\n      fromX,\n      fromY,\n    );\n    fromX = result[i][5];\n    fromY = result[i][6];\n    mTheta = th3;\n    th3 += mDelta;\n  }\n  return result;\n};\n\n/**\n * @private\n * Calculate the angle between two vectors\n * @param ux u endpoint x\n * @param uy u endpoint y\n * @param vx v endpoint x\n * @param vy v endpoint y\n */\nconst calcVectorAngle = (\n  ux: number,\n  uy: number,\n  vx: number,\n  vy: number,\n): TRadian => {\n  const ta = Math.atan2(uy, ux),\n    tb = Math.atan2(vy, vx);\n  if (tb >= ta) {\n    return tb - ta;\n  } else {\n    return 2 * Math.PI - (ta - tb);\n  }\n};\n\n// functions for the Cubic beizer\n// taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\nconst CB1 = (t: number) => t ** 3;\nconst CB2 = (t: number) => 3 * t ** 2 * (1 - t);\nconst CB3 = (t: number) => 3 * t * (1 - t) ** 2;\nconst CB4 = (t: number) => (1 - t) ** 3;\n\n/**\n * Calculate bounding box of a cubic Bezier curve\n * Taken from http://jsbin.com/ivomiq/56/edit (no credits available)\n * TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n * @param {number} begx starting point\n * @param {number} begy\n * @param {number} cp1x first control point\n * @param {number} cp1y\n * @param {number} cp2x second control point\n * @param {number} cp2y\n * @param {number} endx end of bezier\n * @param {number} endy\n * @return {TRectBounds} the rectangular bounds\n */\nexport function getBoundsOfCurve(\n  begx: number,\n  begy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  endx: number,\n  endy: number,\n): TRectBounds {\n  let argsString: string;\n  if (config.cachesBoundsOfCurve) {\n    // eslint-disable-next-line\n    argsString = [...arguments].join();\n    if (cache.boundsOfCurveCache[argsString]) {\n      return cache.boundsOfCurveCache[argsString];\n    }\n  }\n\n  const sqrt = Math.sqrt,\n    abs = Math.abs,\n    tvalues = [],\n    bounds: [[x: number, y: number], [x: number, y: number]] = [\n      [0, 0],\n      [0, 0],\n    ];\n\n  let b = 6 * begx - 12 * cp1x + 6 * cp2x;\n  let a = -3 * begx + 9 * cp1x - 9 * cp2x + 3 * endx;\n  let c = 3 * cp1x - 3 * begx;\n\n  for (let i = 0; i < 2; ++i) {\n    if (i > 0) {\n      b = 6 * begy - 12 * cp1y + 6 * cp2y;\n      a = -3 * begy + 9 * cp1y - 9 * cp2y + 3 * endy;\n      c = 3 * cp1y - 3 * begy;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n      const t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    const b2ac = b * b - 4 * c * a;\n    if (b2ac < 0) {\n      continue;\n    }\n    const sqrtb2ac = sqrt(b2ac);\n    const t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    const t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  let j = tvalues.length;\n  const jlen = j;\n  const iterator = getPointOnCubicBezierIterator(\n    begx,\n    begy,\n    cp1x,\n    cp1y,\n    cp2x,\n    cp2y,\n    endx,\n    endy,\n  );\n  while (j--) {\n    const { x, y } = iterator(tvalues[j]);\n    bounds[0][j] = x;\n    bounds[1][j] = y;\n  }\n\n  bounds[0][jlen] = begx;\n  bounds[1][jlen] = begy;\n  bounds[0][jlen + 1] = endx;\n  bounds[1][jlen + 1] = endy;\n  const result: TRectBounds = [\n    new Point(Math.min(...bounds[0]), Math.min(...bounds[1])),\n    new Point(Math.max(...bounds[0]), Math.max(...bounds[1])),\n  ];\n  if (config.cachesBoundsOfCurve) {\n    cache.boundsOfCurveCache[argsString!] = result;\n  }\n  return result;\n}\n\n/**\n * Converts arc to a bunch of cubic Bezier curves\n * @param {number} fx starting point x\n * @param {number} fy starting point y\n * @param {TParsedArcCommand} coords Arc command\n */\nexport const fromArcToBeziers = (\n  fx: number,\n  fy: number,\n  [_, rx, ry, rot, large, sweep, tx, ty]: TParsedArcCommand,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  const segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n  for (let i = 0, len = segsNorm.length; i < len; i++) {\n    segsNorm[i][1] += fx;\n    segsNorm[i][2] += fy;\n    segsNorm[i][3] += fx;\n    segsNorm[i][4] += fy;\n    segsNorm[i][5] += fx;\n    segsNorm[i][6] += fy;\n  }\n  return segsNorm;\n};\n\n/**\n * This function takes a parsed SVG path and makes it simpler for fabricJS logic.\n * Simplification consist of:\n * - All commands converted to absolute (lowercase to uppercase)\n * - S converted to C\n * - T converted to Q\n * - A converted to C\n * @param {TComplexPathData} path the array of commands of a parsed SVG path for `Path`\n * @return {TSimplePathData} the simplified array of commands of a parsed SVG path for `Path`\n * TODO: figure out how to remove the type assertions in a nice way\n */\nexport const makePathSimpler = (path: TComplexPathData): TSimplePathData => {\n  // x and y represent the last point of the path, AKA the previous command point.\n  // we add them to each relative command to make it an absolute comment.\n  // we also swap the v V h H with L, because are easier to transform.\n  let x = 0,\n    y = 0;\n  // x1 and y1 represent the last point of the subpath. the subpath is started with\n  // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n  // the last x1 and y1.\n  let x1 = 0,\n    y1 = 0;\n  // previous will host the letter of the previous command, to handle S and T.\n  // controlX and controlY will host the previous reflected control point\n  const destinationPath: TSimplePathData = [];\n  let previous,\n    // placeholders\n    controlX = 0,\n    controlY = 0;\n  for (const parsedCommand of path) {\n    const current: TComplexParsedCommand = [...parsedCommand];\n    let converted: TSimpleParsedCommand | undefined;\n    switch (\n      current[0] // first letter\n    ) {\n      case 'l': // lineto, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'L':\n        x = current[1];\n        y = current[2];\n        converted = ['L', x, y];\n        break;\n      case 'h': // horizontal lineto, relative\n        current[1] += x;\n      // falls through\n      case 'H':\n        x = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'v': // vertical lineto, relative\n        current[1] += y;\n      // falls through\n      case 'V':\n        y = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'm': // moveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'M':\n        x = current[1];\n        y = current[2];\n        x1 = current[1];\n        y1 = current[2];\n        converted = ['M', x, y];\n        break;\n      case 'c': // bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n        current[5] += x;\n        current[6] += y;\n      // falls through\n      case 'C':\n        controlX = current[3];\n        controlY = current[4];\n        x = current[5];\n        y = current[6];\n        converted = ['C', current[1], current[2], controlX, controlY, x, y];\n        break;\n      case 's': // shorthand cubic bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'S':\n        // would be sScC but since we are swapping sSc for C, we check just that.\n        if (previous === 'C') {\n          // calculate reflection of previous control points\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a C, c, S, or s,\n          // the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[3];\n        y = current[4];\n        converted = ['C', controlX, controlY, current[1], current[2], x, y];\n        // converted[3] and converted[4] are NOW the second control point.\n        // we keep it for the next reflection.\n        controlX = converted[3];\n        controlY = converted[4];\n        break;\n      case 'q': // quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'Q':\n        controlX = current[1];\n        controlY = current[2];\n        x = current[3];\n        y = current[4];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 't': // shorthand quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'T':\n        if (previous === 'Q') {\n          // calculate reflection of previous control point\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[1];\n        y = current[2];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 'a':\n        current[6] += x;\n        current[7] += y;\n      // falls through\n      case 'A':\n        fromArcToBeziers(x, y, current).forEach((b) => destinationPath.push(b));\n        x = current[6];\n        y = current[7];\n        break;\n      case 'z':\n      case 'Z':\n        x = x1;\n        y = y1;\n        converted = ['Z'];\n        break;\n      default:\n    }\n    if (converted) {\n      destinationPath.push(converted);\n      previous = converted[0];\n    } else {\n      previous = '';\n    }\n  }\n  return destinationPath;\n};\n\n// todo verify if we can just use the point class here\n/**\n * Calc length from point x1,y1 to x2,y2\n * @param {number} x1 starting point x\n * @param {number} y1 starting point y\n * @param {number} x2 starting point x\n * @param {number} y2 starting point y\n * @return {number} length of segment\n */\nconst calcLineLength = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): number => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n/**\n * Get an iterator that takes a percentage and returns a point\n * @param {number} begx\n * @param {number} begy\n * @param {number} cp1x\n * @param {number} cp1y\n * @param {number} cp2x\n * @param {number} cp2y\n * @param {number} endx\n * @param {number} endy\n */\nconst getPointOnCubicBezierIterator =\n  (\n    begx: number,\n    begy: number,\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    endx: number,\n    endy: number,\n  ) =>\n  (pct: number) => {\n    const c1 = CB1(pct),\n      c2 = CB2(pct),\n      c3 = CB3(pct),\n      c4 = CB4(pct);\n    return new Point(\n      endx * c1 + cp2x * c2 + cp1x * c3 + begx * c4,\n      endy * c1 + cp2y * c2 + cp1y * c3 + begy * c4,\n    );\n  };\n\nconst QB1 = (t: number) => t ** 2;\nconst QB2 = (t: number) => 2 * t * (1 - t);\nconst QB3 = (t: number) => (1 - t) ** 2;\n\nconst getTangentCubicIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number,\n  ) =>\n  (pct: number) => {\n    const qb1 = QB1(pct),\n      qb2 = QB2(pct),\n      qb3 = QB3(pct),\n      tangentX =\n        3 * (qb3 * (p2x - p1x) + qb2 * (p3x - p2x) + qb1 * (p4x - p3x)),\n      tangentY =\n        3 * (qb3 * (p2y - p1y) + qb2 * (p3y - p2y) + qb1 * (p4y - p3y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\nconst getPointOnQuadraticBezierIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const c1 = QB1(pct),\n      c2 = QB2(pct),\n      c3 = QB3(pct);\n    return new Point(\n      p3x * c1 + p2x * c2 + p1x * c3,\n      p3y * c1 + p2y * c2 + p1y * c3,\n    );\n  };\n\nconst getTangentQuadraticIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const invT = 1 - pct,\n      tangentX = 2 * (invT * (p2x - p1x) + pct * (p3x - p2x)),\n      tangentY = 2 * (invT * (p2y - p1y) + pct * (p3y - p2y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\n// this will run over a path segment (a cubic or quadratic segment) and approximate it\n// with 100 segments. This will good enough to calculate the length of the curve\nconst pathIterator = (\n  iterator: (pct: number) => Point,\n  x1: number,\n  y1: number,\n) => {\n  let tempP = new Point(x1, y1),\n    tmpLen = 0;\n  for (let perc = 1; perc <= 100; perc += 1) {\n    const p = iterator(perc / 100);\n    tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    tempP = p;\n  }\n  return tmpLen;\n};\n\n/**\n * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n * that correspond to that pixels run over the path.\n * The percentage will be then used to find the correct point on the canvas for the path.\n * @param {Array} segInfo fabricJS collection of information on a parsed path\n * @param {number} distance from starting point, in pixels.\n * @return {TPointAngle} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n */\nconst findPercentageForDistance = (\n  segInfo: TCurveInfo<'Q' | 'C'>,\n  distance: number,\n): TPointAngle => {\n  let perc = 0,\n    tmpLen = 0,\n    tempP: XY = { x: segInfo.x, y: segInfo.y },\n    p: XY = { ...tempP },\n    nextLen: number,\n    nextStep = 0.01,\n    lastPerc = 0;\n  // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n  // the path\n  const iterator = segInfo.iterator,\n    angleFinder = segInfo.angleFinder;\n  while (tmpLen < distance && nextStep > 0.0001) {\n    p = iterator(perc);\n    lastPerc = perc;\n    nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    // compare tmpLen each cycle with distance, decide next perc to test.\n    if (nextLen + tmpLen > distance) {\n      // we discard this step and we make smaller steps.\n      perc -= nextStep;\n      nextStep /= 2;\n    } else {\n      tempP = p;\n      perc += nextStep;\n      tmpLen += nextLen;\n    }\n  }\n  return { ...p, angle: angleFinder(lastPerc) };\n};\n\n/**\n * Run over a parsed and simplified path and extract some information (length of each command and starting point)\n * @param {TSimplePathData} path parsed path commands\n * @return {TPathSegmentInfo[]} path commands information\n */\nexport const getPathSegmentsInfo = (\n  path: TSimplePathData,\n): TPathSegmentInfo[] => {\n  let totalLength = 0,\n    //x2 and y2 are the coords of segment start\n    //x1 and y1 are the coords of the current point\n    x1 = 0,\n    y1 = 0,\n    x2 = 0,\n    y2 = 0,\n    iterator,\n    tempInfo: TPathSegmentInfo;\n  const info: TPathSegmentInfo[] = [];\n  for (const current of path) {\n    const basicInfo: TPathSegmentInfoCommon<keyof TPathSegmentCommandInfo> = {\n      x: x1,\n      y: y1,\n      command: current[0],\n      length: 0,\n    };\n    switch (\n      current[0] //first letter\n    ) {\n      case 'M':\n        tempInfo = <TPathSegmentInfoCommon<'M'>>basicInfo;\n        tempInfo.x = x2 = x1 = current[1];\n        tempInfo.y = y2 = y1 = current[2];\n        break;\n      case 'L':\n        tempInfo = <TPathSegmentInfoCommon<'L'>>basicInfo;\n        tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n        x1 = current[1];\n        y1 = current[2];\n        break;\n      case 'C':\n        iterator = getPointOnCubicBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo = <TCurveInfo<'C'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentCubicIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n\n        x1 = current[5];\n        y1 = current[6];\n        break;\n      case 'Q':\n        iterator = getPointOnQuadraticBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo = <TCurveInfo<'Q'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentQuadraticIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n        x1 = current[3];\n        y1 = current[4];\n        break;\n      case 'Z':\n        // we add those in order to ease calculations later\n        tempInfo = <TEndPathInfo>basicInfo;\n        tempInfo.destX = x2;\n        tempInfo.destY = y2;\n        tempInfo.length = calcLineLength(x1, y1, x2, y2);\n        x1 = x2;\n        y1 = y2;\n        break;\n    }\n    totalLength += tempInfo.length;\n    info.push(tempInfo);\n  }\n  info.push({ length: totalLength, x: x1, y: y1 });\n  return info;\n};\n\n/**\n * Get the point on the path that is distance along the path\n * @param path\n * @param distance\n * @param infos\n */\nexport const getPointOnPath = (\n  path: TSimplePathData,\n  distance: number,\n  infos: TPathSegmentInfo[] = getPathSegmentsInfo(path),\n): TPointAngle | undefined => {\n  let i = 0;\n  while (distance - infos[i].length > 0 && i < infos.length - 2) {\n    distance -= infos[i].length;\n    i++;\n  }\n  const segInfo = infos[i],\n    segPercent = distance / segInfo.length,\n    segment = path[i];\n\n  switch (segInfo.command) {\n    case 'M':\n      return { x: segInfo.x, y: segInfo.y, angle: 0 };\n    case 'Z':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segInfo.destX, segInfo.destY),\n          segPercent,\n        ),\n        angle: Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x),\n      };\n    case 'L':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segment[1]!, segment[2]!),\n          segPercent,\n        ),\n        angle: Math.atan2(segment[2]! - segInfo.y, segment[1]! - segInfo.x),\n      };\n    case 'C':\n      return findPercentageForDistance(segInfo, distance);\n    case 'Q':\n      return findPercentageForDistance(segInfo, distance);\n    default:\n    // throw Error('Invalid command');\n  }\n};\n\nconst rePathCmdAll = new RegExp(rePathCommand, 'gi');\nconst regExpArcCommandPoints = new RegExp(reArcCommandPoints, 'g');\nconst reMyNum = new RegExp(reNum, 'gi');\nconst commandLengths = {\n  m: 2,\n  l: 2,\n  h: 1,\n  v: 1,\n  c: 6,\n  s: 4,\n  q: 4,\n  t: 2,\n  a: 7,\n} as const;\n/**\n *\n * @param {string} pathString\n * @return {TComplexPathData} An array of SVG path commands\n * @example <caption>Usage</caption>\n * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n *   ['M', 3, 4],\n *   ['Q', 3, 5, 2, 1, 4, 0],\n *   ['Q', 9, 12, 2, 1, 4, 0],\n * ];\n */\nexport const parsePath = (pathString: string): TComplexPathData => {\n  const chain: TComplexPathData = [];\n  const all = pathString.match(rePathCmdAll) ?? [];\n  for (const matchStr of all) {\n    // take match string and save the first letter as the command\n    const commandLetter = matchStr[0] as TComplexParsedCommandType;\n    // in case of Z we have very little to do\n    if (commandLetter === 'z' || commandLetter === 'Z') {\n      chain.push([commandLetter]);\n      continue;\n    }\n    const commandLength =\n      commandLengths[\n        commandLetter.toLowerCase() as keyof typeof commandLengths\n      ];\n\n    let paramArr = [];\n    if (commandLetter === 'a' || commandLetter === 'A') {\n      // the arc command ha some peculariaties that requires a special regex other than numbers\n      // it is possible to avoid using a space between the sweep and large arc flags, making them either\n      // 00, 01, 10 or 11, making them identical to a plain number for the regex reMyNum\n      // reset the regexp\n      regExpArcCommandPoints.lastIndex = 0;\n      for (let out = null; (out = regExpArcCommandPoints.exec(matchStr)); ) {\n        paramArr.push(...out.slice(1));\n      }\n    } else {\n      paramArr = matchStr.match(reMyNum) || [];\n    }\n\n    // inspect the length of paramArr, if is longer than commandLength\n    // we are dealing with repeated commands\n    for (let i = 0; i < paramArr.length; i += commandLength) {\n      const newCommand = new Array(commandLength) as TComplexParsedCommand;\n      const transformedCommand = repeatedCommands[commandLetter];\n      newCommand[0] =\n        i > 0 && transformedCommand ? transformedCommand : commandLetter;\n      for (let j = 0; j < commandLength; j++) {\n        newCommand[j + 1] = parseFloat(paramArr[i + j]);\n      }\n      chain.push(newCommand);\n    }\n  }\n  return chain;\n};\n\n/**\n *\n * Converts points to a smooth SVG path\n * @param {XY[]} points Array of points\n * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n * @return {(string|number)[][]} An array of SVG path commands\n */\nexport const getSmoothPathFromPoints = (\n  points: Point[],\n  correction = 0,\n): TSimplePathData => {\n  let p1 = new Point(points[0]),\n    p2 = new Point(points[1]),\n    multSignX = 1,\n    multSignY = 0;\n  const path: TSimplePathData = [],\n    len = points.length,\n    manyPoints = len > 2;\n\n  if (manyPoints) {\n    multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n    multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n  }\n  path.push([\n    'M',\n    p1.x - multSignX * correction,\n    p1.y - multSignY * correction,\n  ]);\n  let i;\n  for (i = 1; i < len; i++) {\n    if (!p1.eq(p2)) {\n      const midPoint = p1.midPointFrom(p2);\n      // p1 is our bezier control point\n      // midpoint is our endpoint\n      // start point is p(i-1) value.\n      path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n    }\n    p1 = points[i];\n    if (i + 1 < points.length) {\n      p2 = points[i + 1];\n    }\n  }\n  if (manyPoints) {\n    multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n    multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n  }\n  path.push([\n    'L',\n    p1.x + multSignX * correction,\n    p1.y + multSignY * correction,\n  ]);\n  return path;\n};\n\n/**\n * Transform a path by transforming each segment.\n * it has to be a simplified path or it won't work.\n * WARNING: this depends from pathOffset for correct operation\n * @param {TSimplePathData} path fabricJS parsed and simplified path commands\n * @param {TMat2D} transform matrix that represent the transformation\n * @param {Point} [pathOffset] `Path.pathOffset`\n * @returns {TSimplePathData} the transformed path\n */\nexport const transformPath = (\n  path: TSimplePathData,\n  transform: TMat2D,\n  pathOffset: Point,\n): TSimplePathData => {\n  if (pathOffset) {\n    transform = multiplyTransformMatrices(transform, [\n      1,\n      0,\n      0,\n      1,\n      -pathOffset.x,\n      -pathOffset.y,\n    ]);\n  }\n  return path.map((pathSegment) => {\n    const newSegment: TSimpleParsedCommand = [...pathSegment];\n    for (let i = 1; i < pathSegment.length - 1; i += 2) {\n      // TODO: is there a way to get around casting to any?\n      const { x, y } = transformPoint(\n        {\n          x: pathSegment[i] as number,\n          y: pathSegment[i + 1] as number,\n        },\n        transform,\n      );\n      newSegment[i] = x;\n      newSegment[i + 1] = y;\n    }\n    return newSegment;\n  });\n};\n\n/**\n * Returns an array of path commands to create a regular polygon\n * @param {number} numVertexes\n * @param {number} radius\n * @returns {TSimplePathData} An array of SVG path commands\n */\nexport const getRegularPolygonPath = (\n  numVertexes: number,\n  radius: number,\n): TSimplePathData => {\n  const interiorAngle = (Math.PI * 2) / numVertexes;\n  // rotationAdjustment rotates the path by 1/2 the interior angle so that the polygon always has a flat side on the bottom\n  // This isn't strictly necessary, but it's how we tend to think of and expect polygons to be drawn\n  let rotationAdjustment = -halfPI;\n  if (numVertexes % 2 === 0) {\n    rotationAdjustment += interiorAngle / 2;\n  }\n  const d = new Array(numVertexes + 1);\n  for (let i = 0; i < numVertexes; i++) {\n    const rad = i * interiorAngle + rotationAdjustment;\n    const { x, y } = new Point(cos(rad), sin(rad)).scalarMultiply(radius);\n    d[i] = [i === 0 ? 'M' : 'L', x, y];\n  }\n  d[numVertexes] = ['Z'];\n  return d;\n};\n\n/**\n * Join path commands to go back to svg format\n * @param {TSimplePathData} pathData fabricJS parsed path commands\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {String} joined path 'M 0 0 L 20 30'\n */\nexport const joinPath = (pathData: TSimplePathData, fractionDigits?: number) =>\n  pathData\n    .map((segment) => {\n      return segment\n        .map((arg, i) => {\n          if (i === 0) return arg;\n          return fractionDigits === undefined\n            ? arg\n            : toFixed(arg, fractionDigits);\n        })\n        .join(' ');\n    })\n    .join(' ');\n","// TODO this file needs to go away, cross browser style support is not fabricjs domain.\n\n/**\n * wrapper for setting element's style\n * @param {HTMLElement} element\n * @param {Object | string} styles\n */\nexport function setStyle(\n  element: HTMLElement,\n  styles: string | Record<string, string>,\n) {\n  const elementStyle = element.style;\n  if (!elementStyle || !styles) {\n    return;\n  } else if (typeof styles === 'string') {\n    elementStyle.cssText += ';' + styles;\n  } else {\n    Object.entries(styles).forEach(([property, value]) =>\n      elementStyle.setProperty(property, value),\n    );\n  }\n}\n","import type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { sendObjectToPlane } from './planeChange';\nimport { Group } from '../../shapes/Group';\n/**\n * Merges 2 clip paths into one visually equal clip path\n *\n * **IMPORTANT**:\\\n * Does **NOT** clone the arguments, clone them proir if necessary.\n *\n * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n *\n * In order to handle the `inverted` property we follow logic described in the following cases:\\\n * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n *\n * @memberOf fabric.util\n * @param {fabric.Object} c1\n * @param {fabric.Object} c2\n * @returns {fabric.Object} merged clip path\n */\nexport const mergeClipPaths = (c1: FabricObject, c2: FabricObject) => {\n  let a = c1,\n    b = c2;\n  if (a.inverted && !b.inverted) {\n    //  case (2)\n    a = c2;\n    b = c1;\n  }\n  //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n  sendObjectToPlane(b, b.group?.calcTransformMatrix(), a.calcTransformMatrix());\n  //  assign the `inverted` prop to the wrapping group\n  const inverted = a.inverted && b.inverted;\n  if (inverted) {\n    //  case (1)\n    a.inverted = b.inverted = false;\n  }\n  return new Group([a], { clipPath: b, inverted });\n};\n","/**\n * Returns random number between 2 specified ones.\n * @param {Number} min lower limit\n * @param {Number} max upper limit\n * @return {Number} random value (between min and max)\n */\nexport const getRandomInt = (min: number, max: number): number =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n","import { getFabricWindow } from '../../env';\nimport { noop } from '../../constants';\nimport type { Abortable } from '../../typedefs';\nimport { SignalAbortedError } from './console';\n\ntype requestOptions = Abortable & {\n  onComplete?: (xhr: XMLHttpRequest) => void;\n};\n\n/**\n * Cross-browser abstraction for sending XMLHttpRequest\n * @deprecated this has to go away, we can use a modern browser method to do the same.\n * @param {String} url URL to send XMLHttpRequest to\n * @param {Object} [options] Options object\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @param {Function} options.onComplete Callback to invoke when request is completed\n * @return {XMLHttpRequest} request\n */\n\nexport function request(url: string, options: requestOptions = {}) {\n  const onComplete = options.onComplete || noop,\n    xhr = new (getFabricWindow().XMLHttpRequest)(),\n    signal = options.signal,\n    abort = function () {\n      xhr.abort();\n    },\n    removeListener = function () {\n      signal && signal.removeEventListener('abort', abort);\n      xhr.onerror = xhr.ontimeout = noop;\n    };\n\n  if (signal && signal.aborted) {\n    throw new SignalAbortedError('request');\n  } else if (signal) {\n    signal.addEventListener('abort', abort, { once: true });\n  }\n\n  /** @ignore */\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      removeListener();\n      onComplete(xhr);\n      xhr.onreadystatechange = noop;\n    }\n  };\n\n  xhr.onerror = xhr.ontimeout = removeListener;\n\n  xhr.open('get', url, true);\n\n  xhr.send();\n  return xhr;\n}\n","import { CENTER, SCALE_X, SCALE_Y } from '../constants';\nimport type { FabricImage } from '../shapes/Image';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { qrDecompose } from './misc/matrix';\n\ntype FabricObjectWithTransformMatrix = FabricObject & {\n  transformMatrix?: TMat2D;\n};\n\n/**\n * This function is an helper for svg import. it decompose the transformMatrix\n * and assign properties to object.\n * untransformed coordinates\n * @private\n */\nconst _assignTransformMatrixProps = (\n  object: FabricObjectWithTransformMatrix,\n) => {\n  if (object.transformMatrix) {\n    const { scaleX, scaleY, angle, skewX } = qrDecompose(\n      object.transformMatrix,\n    );\n    object.flipX = false;\n    object.flipY = false;\n    object.set(SCALE_X, scaleX);\n    object.set(SCALE_Y, scaleY);\n    object.angle = angle;\n    object.skewX = skewX;\n    object.skewY = 0;\n  }\n};\n\n/**\n * This function is an helper for svg import. it removes the transform matrix\n * and set to object properties that fabricjs can handle\n * @private\n * @param {Object} preserveAspectRatioOptions\n */\nexport const removeTransformMatrixForSvgParsing = (\n  object: FabricObjectWithTransformMatrix,\n  preserveAspectRatioOptions?: any,\n) => {\n  let center = object._findCenterFromElement();\n  if (object.transformMatrix) {\n    _assignTransformMatrixProps(object);\n    center = center.transform(object.transformMatrix);\n  }\n  delete object.transformMatrix;\n  if (preserveAspectRatioOptions) {\n    object.scaleX *= preserveAspectRatioOptions.scaleX;\n    object.scaleY *= preserveAspectRatioOptions.scaleY;\n    (object as FabricImage).cropX = preserveAspectRatioOptions.cropX;\n    (object as FabricImage).cropY = preserveAspectRatioOptions.cropY;\n    center.x += preserveAspectRatioOptions.offsetLeft;\n    center.y += preserveAspectRatioOptions.offsetTop;\n    object.width = preserveAspectRatioOptions.width;\n    object.height = preserveAspectRatioOptions.height;\n  }\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n","import type { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n/**\n * Rotates `point` around `origin` with `radians`\n * @deprecated use the Point.rotate\n * @param {Point} origin The origin of the rotation\n * @param {Point} origin The origin of the rotation\n * @param {TRadian} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotatePoint = (\n  point: Point,\n  origin: Point,\n  radians: TRadian,\n): Point => point.rotate(radians, origin);\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport { createCanvasElement, setStyle } from '../../util';\nimport type { CSSDimensions } from './util';\nimport { makeElementUnselectable, setCSSDimensions } from './util';\nimport type { CanvasItem } from './StaticCanvasDOMManager';\nimport { StaticCanvasDOMManager } from './StaticCanvasDOMManager';\nimport { setCanvasDimensions } from './util';\nimport { NONE } from '../../constants';\n\nexport class CanvasDOMManager extends StaticCanvasDOMManager {\n  upper: CanvasItem;\n  container: HTMLDivElement;\n\n  constructor(\n    arg0?: string | HTMLCanvasElement,\n    {\n      allowTouchScrolling = false,\n      containerClass = '',\n    }: {\n      allowTouchScrolling?: boolean;\n      /**\n       * @deprecated here only for backward compatibility\n       */\n      containerClass?: string;\n    } = {},\n  ) {\n    super(arg0);\n    const { el: lowerCanvasEl } = this.lower;\n    const upperCanvasEl = this.createUpperCanvas();\n    this.upper = { el: upperCanvasEl, ctx: upperCanvasEl.getContext('2d')! };\n    this.applyCanvasStyle(lowerCanvasEl, {\n      allowTouchScrolling,\n    });\n    this.applyCanvasStyle(upperCanvasEl, {\n      allowTouchScrolling,\n      styles: {\n        position: 'absolute',\n        left: '0',\n        top: '0',\n      },\n    });\n    const container = this.createContainerElement();\n    container.classList.add(containerClass);\n    if (lowerCanvasEl.parentNode) {\n      lowerCanvasEl.parentNode.replaceChild(container, lowerCanvasEl);\n    }\n    container.append(lowerCanvasEl, upperCanvasEl);\n    this.container = container;\n  }\n\n  protected createUpperCanvas() {\n    const { el: lowerCanvasEl } = this.lower;\n    const el = createCanvasElement();\n    // we assign the same classname of the lowerCanvas\n    el.className = lowerCanvasEl.className;\n    // but then we remove the lower-canvas specific className\n    el.classList.remove('lower-canvas');\n    // we add the specific upper-canvas class\n    el.classList.add('upper-canvas');\n    el.setAttribute('data-fabric', 'top');\n    el.style.cssText = lowerCanvasEl.style.cssText;\n    el.setAttribute('draggable', 'true');\n    return el;\n  }\n\n  protected createContainerElement() {\n    const container = getFabricDocument().createElement('div');\n    container.setAttribute('data-fabric', 'wrapper');\n    setStyle(container, {\n      position: 'relative',\n    });\n    makeElementUnselectable(container);\n    return container;\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} element canvas element to apply styles on\n   */\n  protected applyCanvasStyle(\n    element: HTMLCanvasElement,\n    options: {\n      allowTouchScrolling?: boolean;\n      styles?: Record<string, string>;\n    },\n  ) {\n    const { styles, allowTouchScrolling } = options;\n    setStyle(element, {\n      ...styles,\n      'touch-action': allowTouchScrolling ? 'manipulation' : NONE,\n    });\n    makeElementUnselectable(element);\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    super.setDimensions(size, retinaScaling);\n    const { el, ctx } = this.upper;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>): void {\n    super.setCSSDimensions(size);\n    setCSSDimensions(this.upper.el, size);\n    setCSSDimensions(this.container, size);\n  }\n\n  cleanupDOM(size: TSize) {\n    const container = this.container,\n      { el: lowerCanvasEl } = this.lower,\n      { el: upperCanvasEl } = this.upper;\n    super.cleanupDOM(size);\n    container.removeChild(upperCanvasEl);\n    container.removeChild(lowerCanvasEl);\n    if (container.parentNode) {\n      container.parentNode.replaceChild(lowerCanvasEl, container);\n    }\n  }\n\n  dispose() {\n    super.dispose();\n    getEnv().dispose(this.upper.el);\n    // @ts-expect-error disposing\n    delete this.upper;\n    // @ts-expect-error disposing\n    delete this.container;\n  }\n}\n","import { dragHandler } from '../controls/drag';\nimport { getActionFromCorner } from '../controls/util';\nimport { Point } from '../Point';\nimport { FabricObject } from '../shapes/Object/FabricObject';\nimport type {\n  CanvasEvents,\n  ModifierKey,\n  TOptionalModifierKey,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport {\n  addTransformToObject,\n  saveObjectTransform,\n} from '../util/misc/objectTransforms';\nimport type { TCanvasSizeOptions } from './StaticCanvas';\nimport { StaticCanvas } from './StaticCanvas';\nimport { isCollection } from '../Collection';\nimport { isTransparent } from '../util/misc/isTransparent';\nimport type {\n  TMat2D,\n  TOriginX,\n  TOriginY,\n  TSize,\n  TSVGReviver,\n} from '../typedefs';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { getPointer, isTouchEvent } from '../util/dom_event';\nimport type { IText } from '../shapes/IText/IText';\nimport type { BaseBrush } from '../brushes/BaseBrush';\nimport { pick } from '../util/misc/pick';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { cos, createCanvasElement, sin } from '../util';\nimport { CanvasDOMManager } from './DOMManagers/CanvasDOMManager';\nimport {\n  BOTTOM,\n  CENTER,\n  LEFT,\n  MODIFIED,\n  RESIZING,\n  RIGHT,\n  ROTATE,\n  SCALE,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CanvasOptions } from './CanvasOptions';\nimport { canvasDefaults } from './CanvasOptions';\nimport { Intersection } from '../Intersection';\nimport { isActiveSelection } from '../util/typeAssertions';\n\n/**\n * Canvas class\n * @class Canvas\n * @extends StaticCanvas\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n *\n * @fires object:modified at the end of a transform\n * @fires object:rotating while an object is being rotated from the control\n * @fires object:scaling while an object is being scaled by controls\n * @fires object:moving while an object is being dragged\n * @fires object:skewing while an object is being skewed from the controls\n *\n * @fires before:transform before a transform is is started\n * @fires before:selection:cleared\n * @fires selection:cleared\n * @fires selection:updated\n * @fires selection:created\n *\n * @fires path:created after a drawing operation ends and the path is added\n * @fires mouse:down\n * @fires mouse:move\n * @fires mouse:up\n * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n * @fires mouse:over\n * @fires mouse:out\n * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drag:enter object drag enter\n * @fires drag:leave object drag leave\n * @fires drop:before before drop event. Prepare for the drop event (same native event).\n * @fires drop\n * @fires drop:after after drop event. Run logic on canvas after event has been accepted/declined (same native event).\n * @example\n * let a: fabric.Object, b: fabric.Object;\n * let flag = false;\n * canvas.add(a, b);\n * a.on('drop:before', opt => {\n *  //  we want a to accept the drop even though it's below b in the stack\n *  flag = this.canDrop(opt.e);\n * });\n * b.canDrop = function(e) {\n *  !flag && this.draggableTextDelegate.canDrop(e);\n * }\n * b.on('dragover', opt => b.set('fill', opt.dropTarget === b ? 'pink' : 'black'));\n * a.on('drop', opt => {\n *  opt.e.defaultPrevented  //  drop occurred\n *  opt.didDrop             //  drop occurred on canvas\n *  opt.target              //  drop target\n *  opt.target !== a && a.set('text', 'I lost');\n * });\n * canvas.on('drop:after', opt => {\n *  //  inform user who won\n *  if(!opt.e.defaultPrevented) {\n *    // no winners\n *  }\n *  else if(!opt.didDrop) {\n *    //  my objects didn't win, some other lucky object\n *  }\n *  else {\n *    //  we have a winner it's opt.target!!\n *  }\n * })\n *\n * @fires after:render at the end of the render process, receives the context in the callback\n * @fires before:render at start the render process, receives the context in the callback\n *\n * @fires contextmenu:before\n * @fires contextmenu\n * @example\n * let handler;\n * targets.forEach(target => {\n *   target.on('contextmenu:before', opt => {\n *     //  decide which target should handle the event before canvas hijacks it\n *     if (someCaseHappens && opt.targets.includes(target)) {\n *       handler = target;\n *     }\n *   });\n *   target.on('contextmenu', opt => {\n *     //  do something fantastic\n *   });\n * });\n * canvas.on('contextmenu', opt => {\n *   if (!handler) {\n *     //  no one takes responsibility, it's always left to me\n *     //  let's show them how it's done!\n *   }\n * });\n *\n */\nexport class SelectableCanvas<EventSpec extends CanvasEvents = CanvasEvents>\n  extends StaticCanvas<EventSpec>\n  implements Omit<CanvasOptions, 'enablePointerEvents'>\n{\n  declare _objects: FabricObject[];\n\n  // transform config\n  declare uniformScaling: boolean;\n  declare uniScaleKey: TOptionalModifierKey;\n  declare centeredScaling: boolean;\n  declare centeredRotation: boolean;\n  declare centeredKey: TOptionalModifierKey;\n  declare altActionKey: TOptionalModifierKey;\n\n  // selection config\n  declare selection: boolean;\n  declare selectionKey: TOptionalModifierKey | ModifierKey[];\n  declare altSelectionKey: TOptionalModifierKey;\n  declare selectionColor: string;\n  declare selectionDashArray: number[];\n  declare selectionBorderColor: string;\n  declare selectionLineWidth: number;\n  declare selectionFullyContained: boolean;\n\n  // cursors\n  declare hoverCursor: CSSStyleDeclaration['cursor'];\n  declare moveCursor: CSSStyleDeclaration['cursor'];\n  declare defaultCursor: CSSStyleDeclaration['cursor'];\n  declare freeDrawingCursor: CSSStyleDeclaration['cursor'];\n  declare notAllowedCursor: CSSStyleDeclaration['cursor'];\n\n  declare containerClass: string;\n\n  // target find config\n  declare perPixelTargetFind: boolean;\n  declare targetFindTolerance: number;\n  declare skipTargetFind: boolean;\n\n  /**\n   * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n   * After mousedown, mousemove creates a shape,\n   * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n   * @type Boolean\n   * @default\n   */\n  declare isDrawingMode: boolean;\n\n  declare preserveObjectStacking: boolean;\n\n  // event config\n  declare stopContextMenu: boolean;\n  declare fireRightClick: boolean;\n  declare fireMiddleClick: boolean;\n\n  /**\n   * Keep track of the subTargets for Mouse Events, ordered bottom up from innermost nested subTarget\n   * @type FabricObject[]\n   */\n  targets: FabricObject[] = [];\n\n  /**\n   * Keep track of the hovered target\n   * @type FabricObject | null\n   * @private\n   */\n  declare _hoveredTarget?: FabricObject;\n\n  /**\n   * hold the list of nested targets hovered\n   * @type FabricObject[]\n   * @private\n   */\n  _hoveredTargets: FabricObject[] = [];\n\n  /**\n   * hold the list of objects to render\n   * @type FabricObject[]\n   * @private\n   */\n  _objectsToRender?: FabricObject[];\n\n  /**\n   * hold a reference to a data structure that contains information\n   * on the current on going transform\n   * @type\n   * @private\n   */\n  _currentTransform: Transform | null = null;\n\n  /**\n   * hold a reference to a data structure used to track the selection\n   * box on canvas drag\n   * on the current on going transform\n   * x, y, deltaX and deltaY are in scene plane\n   * @type\n   * @private\n   */\n  protected _groupSelector: {\n    x: number;\n    y: number;\n    deltaX: number;\n    deltaY: number;\n  } | null = null;\n\n  /**\n   * internal flag used to understand if the context top requires a cleanup\n   * in case this is true, the contextTop will be cleared at the next render\n   * @type boolean\n   * @private\n   */\n  contextTopDirty = false;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _absolutePointer holds a reference to the pointer in fabricCanvas/design coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _absolutePointer?: Point;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _pointer holds a reference to the pointer in html coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _pointer?: Point;\n\n  /**\n   * During a mouse event we may need the target multiple times in multiple functions.\n   * _target holds a reference to the target that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * @type {FabricObject}\n   */\n  protected declare _target?: FabricObject;\n\n  static ownDefaults = canvasDefaults;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...SelectableCanvas.ownDefaults };\n  }\n\n  declare elements: CanvasDOMManager;\n  get upperCanvasEl() {\n    return this.elements.upper?.el;\n  }\n  get contextTop() {\n    return this.elements.upper?.ctx;\n  }\n  get wrapperEl() {\n    return this.elements.container;\n  }\n  private declare pixelFindCanvasEl: HTMLCanvasElement;\n  private declare pixelFindContext: CanvasRenderingContext2D;\n\n  protected declare _isCurrentlyDrawing: boolean;\n  declare freeDrawingBrush?: BaseBrush;\n  declare _activeObject?: FabricObject;\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new CanvasDOMManager(el, {\n      allowTouchScrolling: this.allowTouchScrolling,\n      containerClass: this.containerClass,\n    });\n    this._createCacheCanvas();\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was added\n   */\n  _onObjectAdded(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    super._onObjectAdded(obj);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was removed\n   */\n  _onObjectRemoved(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    // removing active object should fire \"selection:cleared\" events\n    if (obj === this._activeObject) {\n      this.fire('before:selection:cleared', { deselected: [obj] });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { deselected: [obj] });\n      obj.fire('deselected', {\n        target: obj,\n      });\n    }\n    if (obj === this._hoveredTarget) {\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n    super._onObjectRemoved(obj);\n  }\n\n  _onStackOrderChanged() {\n    this._objectsToRender = undefined;\n    super._onStackOrderChanged();\n  }\n\n  /**\n   * Divides objects in two groups, one to render immediately\n   * and one to render as activeGroup.\n   * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n   */\n  _chooseObjectsToRender(): FabricObject[] {\n    const activeObject = this._activeObject;\n    return !this.preserveObjectStacking && activeObject\n      ? this._objects\n          .filter((object) => !object.group && object !== activeObject)\n          .concat(activeObject)\n      : this._objects;\n  }\n\n  /**\n   * Renders both the top canvas and the secondary container canvas.\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n      this.clearContext(this.contextTop);\n      this.contextTopDirty = false;\n    }\n    if (this.hasLostContext) {\n      this.renderTopLayer(this.contextTop);\n      this.hasLostContext = false;\n    }\n    !this._objectsToRender &&\n      (this._objectsToRender = this._chooseObjectsToRender());\n    this.renderCanvas(this.getContext(), this._objectsToRender);\n  }\n\n  /**\n   * text selection is rendered by the active text instance during the rendering cycle\n   */\n  renderTopLayer(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this.freeDrawingBrush && this.freeDrawingBrush._render();\n      this.contextTopDirty = true;\n    }\n    // we render the top context - last object\n    if (this.selection && this._groupSelector) {\n      this._drawSelection(ctx);\n      this.contextTopDirty = true;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Method to render only the top canvas.\n   * Also used to render the group selection box.\n   * Does not render text selection.\n   */\n  renderTop() {\n    const ctx = this.contextTop;\n    this.clearContext(ctx);\n    this.renderTopLayer(ctx);\n    // todo: how do i know if the after:render is for the top or normal contex?\n    this.fire('after:render', { ctx });\n  }\n\n  /**\n   * Set the canvas tolerance value for pixel taret find.\n   * Use only integer numbers.\n   * @private\n   */\n  setTargetFindTolerance(value: number) {\n    value = Math.round(value);\n    this.targetFindTolerance = value;\n    const retina = this.getRetinaScaling();\n    const size = Math.ceil((value * 2 + 1) * retina);\n    this.pixelFindCanvasEl.width = this.pixelFindCanvasEl.height = size;\n    this.pixelFindContext.scale(retina, retina);\n  }\n\n  /**\n   * Returns true if object is transparent at a certain location\n   * Clarification: this is `is target transparent at location X or are controls there`\n   * @TODO this seems dumb that we treat controls with transparency. we can find controls\n   * programmatically without painting them, the cache canvas optimization is always valid\n   * @param {FabricObject} target Object to check\n   * @param {Number} x Left coordinate in viewport space\n   * @param {Number} y Top coordinate in viewport space\n   * @return {Boolean}\n   */\n  isTargetTransparent(target: FabricObject, x: number, y: number): boolean {\n    const tolerance = this.targetFindTolerance;\n    const ctx = this.pixelFindContext;\n    this.clearContext(ctx);\n    ctx.save();\n    ctx.translate(-x + tolerance, -y + tolerance);\n    ctx.transform(...this.viewportTransform);\n    const selectionBgc = target.selectionBackgroundColor;\n    target.selectionBackgroundColor = '';\n    target.render(ctx);\n    target.selectionBackgroundColor = selectionBgc;\n    ctx.restore();\n    // our canvas is square, and made around tolerance.\n    // so tolerance in this case also represent the center of the canvas.\n    const enhancedTolerance = Math.round(tolerance * this.getRetinaScaling());\n    return isTransparent(\n      ctx,\n      enhancedTolerance,\n      enhancedTolerance,\n      enhancedTolerance,\n    );\n  }\n\n  /**\n   * takes an event and determines if selection key has been pressed\n   * @private\n   * @param {TPointerEvent} e Event object\n   */\n  _isSelectionKeyPressed(e: TPointerEvent): boolean {\n    const sKey = this.selectionKey;\n    if (!sKey) {\n      return false;\n    }\n    if (Array.isArray(sKey)) {\n      return !!sKey.find((key) => !!key && e[key] === true);\n    } else {\n      return e[sKey];\n    }\n  }\n\n  /**\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target\n   */\n  _shouldClearSelection(\n    e: TPointerEvent,\n    target?: FabricObject,\n  ): target is undefined {\n    const activeObjects = this.getActiveObjects(),\n      activeObject = this._activeObject;\n\n    return !!(\n      !target ||\n      (target &&\n        activeObject &&\n        activeObjects.length > 1 &&\n        activeObjects.indexOf(target) === -1 &&\n        activeObject !== target &&\n        !this._isSelectionKeyPressed(e)) ||\n      (target && !target.evented) ||\n      (target && !target.selectable && activeObject && activeObject !== target)\n    );\n  }\n\n  /**\n   * This method will take in consideration a modifier key pressed and the control we are\n   * about to drag, and try to guess the anchor point ( origin ) of the transormation.\n   * This should be really in the realm of controls, and we should remove specific code for legacy\n   * embedded actions.\n   * @TODO this probably deserve discussion/rediscovery and change/refactor\n   * @private\n   * @deprecated\n   * @param {FabricObject} target\n   * @param {string} action\n   * @param {boolean} altKey\n   * @returns {boolean} true if the transformation should be centered\n   */\n  private _shouldCenterTransform(\n    target: FabricObject,\n    action: string,\n    modifierKeyPressed: boolean,\n  ) {\n    if (!target) {\n      return;\n    }\n\n    let centerTransform;\n\n    if (\n      action === SCALE ||\n      action === SCALE_X ||\n      action === SCALE_Y ||\n      action === RESIZING\n    ) {\n      centerTransform = this.centeredScaling || target.centeredScaling;\n    } else if (action === ROTATE) {\n      centerTransform = this.centeredRotation || target.centeredRotation;\n    }\n\n    return centerTransform ? !modifierKeyPressed : modifierKeyPressed;\n  }\n\n  /**\n   * Given the control clicked, determine the origin of the transform.\n   * This is bad because controls can totally have custom names\n   * should disappear before release 4.0\n   * @private\n   * @deprecated\n   */\n  _getOriginFromCorner(\n    target: FabricObject,\n    controlName: string,\n  ): { x: TOriginX; y: TOriginY } {\n    const origin = {\n      x: target.originX,\n      y: target.originY,\n    };\n\n    if (!controlName) {\n      return origin;\n    }\n\n    // is a left control ?\n    if (['ml', 'tl', 'bl'].includes(controlName)) {\n      origin.x = RIGHT;\n      // is a right control ?\n    } else if (['mr', 'tr', 'br'].includes(controlName)) {\n      origin.x = LEFT;\n    }\n    // is a top control ?\n    if (['tl', 'mt', 'tr'].includes(controlName)) {\n      origin.y = BOTTOM;\n      // is a bottom control ?\n    } else if (['bl', 'mb', 'br'].includes(controlName)) {\n      origin.y = TOP;\n    }\n    return origin;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @param {FabricObject} target\n   * @param {boolean} [alreadySelected] pass true to setup the active control\n   */\n  _setupCurrentTransform(\n    e: TPointerEvent,\n    target: FabricObject,\n    alreadySelected: boolean,\n  ): void {\n    const pointer = target.group\n      ? // transform pointer to target's containing coordinate plane\n        sendPointToPlane(\n          this.getScenePoint(e),\n          undefined,\n          target.group.calcTransformMatrix(),\n        )\n      : this.getScenePoint(e);\n    const { key: corner = '', control } = target.getActiveControl() || {},\n      actionHandler =\n        alreadySelected && control\n          ? control.getActionHandler(e, target, control)?.bind(control)\n          : dragHandler,\n      action = getActionFromCorner(alreadySelected, corner, e, target),\n      altKey = e[this.centeredKey as ModifierKey],\n      origin = this._shouldCenterTransform(target, action, altKey)\n        ? ({ x: CENTER, y: CENTER } as const)\n        : this._getOriginFromCorner(target, corner),\n      /**\n       * relative to target's containing coordinate plane\n       * both agree on every point\n       **/\n      transform: Transform = {\n        target: target,\n        action,\n        actionHandler,\n        actionPerformed: false,\n        corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        theta: degreesToRadians(target.angle),\n        width: target.width,\n        height: target.height,\n        shiftKey: e.shiftKey,\n        altKey,\n        original: {\n          ...saveObjectTransform(target),\n          originX: origin.x,\n          originY: origin.y,\n        },\n      };\n\n    this._currentTransform = transform;\n\n    this.fire('before:transform', {\n      e,\n      transform,\n    });\n  }\n\n  /**\n   * Set the cursor type of the canvas element\n   * @param {String} value Cursor type of the canvas element.\n   * @see http://www.w3.org/TR/css3-ui/#cursor\n   */\n  setCursor(value: CSSStyleDeclaration['cursor']): void {\n    this.upperCanvasEl.style.cursor = value;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx to draw the selection on\n   */\n  _drawSelection(ctx: CanvasRenderingContext2D): void {\n    const { x, y, deltaX, deltaY } = this._groupSelector!,\n      start = new Point(x, y).transform(this.viewportTransform),\n      extent = new Point(x + deltaX, y + deltaY).transform(\n        this.viewportTransform,\n      ),\n      strokeOffset = this.selectionLineWidth / 2;\n    let minX = Math.min(start.x, extent.x),\n      minY = Math.min(start.y, extent.y),\n      maxX = Math.max(start.x, extent.x),\n      maxY = Math.max(start.y, extent.y);\n\n    if (this.selectionColor) {\n      ctx.fillStyle = this.selectionColor;\n      ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    if (!this.selectionLineWidth || !this.selectionBorderColor) {\n      return;\n    }\n    ctx.lineWidth = this.selectionLineWidth;\n    ctx.strokeStyle = this.selectionBorderColor;\n\n    minX += strokeOffset;\n    minY += strokeOffset;\n    maxX -= strokeOffset;\n    maxY -= strokeOffset;\n    // selection border\n    // @TODO: is _setLineDash still necessary on modern canvas?\n    FabricObject.prototype._setLineDash.call(\n      this,\n      ctx,\n      this.selectionDashArray,\n    );\n    ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  /**\n   * Method that determines what object we are clicking on\n   * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n   * or the outside part of the corner.\n   * @param {Event} e mouse event\n   * @return {FabricObject | null} the target found\n   */\n  findTarget(e: TPointerEvent): FabricObject | undefined {\n    if (this.skipTargetFind) {\n      return undefined;\n    }\n\n    const pointer = this.getViewportPoint(e),\n      activeObject = this._activeObject,\n      aObjects = this.getActiveObjects();\n\n    this.targets = [];\n\n    if (activeObject && aObjects.length >= 1) {\n      if (activeObject.findControl(pointer, isTouchEvent(e))) {\n        // if we hit the corner of the active object, let's return that.\n        return activeObject;\n      } else if (\n        aObjects.length > 1 &&\n        // check pointer is over active selection and possibly perform `subTargetCheck`\n        this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active selection does not select sub targets like normal groups\n        return activeObject;\n      } else if (\n        activeObject === this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active object is not an active selection\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          const subTargets = this.targets;\n          this.targets = [];\n          const target = this.searchPossibleTargets(this._objects, pointer);\n          if (\n            e[this.altSelectionKey as ModifierKey] &&\n            target &&\n            target !== activeObject\n          ) {\n            // alt selection: select active object even though it is not the top most target\n            // restore targets\n            this.targets = subTargets;\n            return activeObject;\n          }\n          return target;\n        }\n      }\n    }\n\n    return this.searchPossibleTargets(this._objects, pointer);\n  }\n\n  /**\n   * Checks if the point is inside the object selection area including padding\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point in scene coordinates\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  private _pointIsInObjectSelectionArea(obj: FabricObject, point: Point) {\n    // getCoords will already take care of group de-nesting\n    let coords = obj.getCoords();\n    const viewportZoom = this.getZoom();\n    const padding = obj.padding / viewportZoom;\n    if (padding) {\n      const [tl, tr, br, bl] = coords;\n      // what is the angle of the object?\n      // we could use getTotalAngle, but is way easier to look at it\n      // from how coords are oriented, since if something went wrong\n      // at least we are consistent.\n      const angleRadians = Math.atan2(tr.y - tl.y, tr.x - tl.x),\n        cosP = cos(angleRadians) * padding,\n        sinP = sin(angleRadians) * padding,\n        cosPSinP = cosP + sinP,\n        cosPMinusSinP = cosP - sinP;\n\n      coords = [\n        new Point(tl.x - cosPMinusSinP, tl.y - cosPSinP),\n        new Point(tr.x + cosPSinP, tr.y - cosPMinusSinP),\n        new Point(br.x + cosPMinusSinP, br.y + cosPSinP),\n        new Point(bl.x - cosPSinP, bl.y + cosPMinusSinP),\n      ];\n      // in case of padding we calculate the new coords on the fly.\n      // otherwise we have to maintain 2 sets of coordinates for everything.\n      // we can reiterate on storing them.\n      // if this is slow, for now the semplification is large and doesn't impact\n      // rendering.\n      // the idea behind this is that outside target check we don't need ot know\n      // where those coords are\n    }\n    return Intersection.isPointInPolygon(point, coords);\n  }\n\n  /**\n   * Checks point is inside the object selection condition. Either area with padding\n   * or over pixels if perPixelTargetFind is enabled\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point from viewport.\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  _checkTarget(obj: FabricObject, pointer: Point): boolean {\n    if (\n      obj &&\n      obj.visible &&\n      obj.evented &&\n      this._pointIsInObjectSelectionArea(\n        obj,\n        sendPointToPlane(pointer, undefined, this.viewportTransform),\n      )\n    ) {\n      if (\n        (this.perPixelTargetFind || obj.perPixelTargetFind) &&\n        !(obj as unknown as IText).isEditing\n      ) {\n        if (!this.isTargetTransparent(obj, pointer.x, pointer.y)) {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Internal Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @param {Array} [objects] objects array to look into\n   * @param {Object} [pointer] x,y object of point coordinates we want to check.\n   * @return {FabricObject} **top most object from given `objects`** that contains pointer\n   * @private\n   */\n  _searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    // Cache all targets where their bounding box contains point.\n    let i = objects.length;\n    // Do not check for currently grouped objects, since we check the parent group itself.\n    // until we call this function specifically to search inside the activeGroup\n    while (i--) {\n      const target = objects[i];\n      if (this._checkTarget(target, pointer)) {\n        if (isCollection(target) && target.subTargetCheck) {\n          const subTarget = this._searchPossibleTargets(\n            target._objects as FabricObject[],\n            pointer,\n          );\n          subTarget && this.targets.push(subTarget);\n        }\n        return target;\n      }\n    }\n  }\n\n  /**\n   * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @see {@link _searchPossibleTargets}\n   * @param {FabricObject[]} [objects] objects array to look into\n   * @param {Point} [pointer] coordinates from viewport to check.\n   * @return {FabricObject} **top most object on screen** that contains pointer\n   */\n  searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    const target = this._searchPossibleTargets(objects, pointer);\n\n    // if we found something in this.targets, and the group is interactive, return the innermost subTarget\n    // that is still interactive\n    // TODO: reverify why interactive. the target should be returned always, but selected only\n    // if interactive.\n    if (\n      target &&\n      isCollection(target) &&\n      target.interactive &&\n      this.targets[0]\n    ) {\n      /** targets[0] is the innermost nested target, but it could be inside non interactive groups and so not a selection target */\n      const targets = this.targets;\n      for (let i = targets.length - 1; i > 0; i--) {\n        const t = targets[i];\n        if (!(isCollection(t) && t.interactive)) {\n          // one of the subtargets was not interactive. that is the last subtarget we can return.\n          // we can't dig more deep;\n          return t;\n        }\n      }\n      return targets[0];\n    }\n\n    return target;\n  }\n\n  /**\n   * @returns point existing in the same plane as the {@link HTMLCanvasElement},\n   * `(0, 0)` being the top left corner of the {@link HTMLCanvasElement}.\n   * This means that changes to the {@link viewportTransform} do not change the values of the point\n   * and it remains unchanged from the viewer's perspective.\n   *\n   * @example\n   * const scenePoint = sendPointToPlane(\n   *  this.getViewportPoint(e),\n   *  undefined,\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getViewportPoint(e: TPointerEvent) {\n    if (this._pointer) {\n      return this._pointer;\n    }\n    return this.getPointer(e, true);\n  }\n\n  /**\n   * @returns point existing in the scene (the same plane as the plane {@link FabricObject#getCenterPoint} exists in).\n   * This means that changes to the {@link viewportTransform} do not change the values of the point,\n   * however, from the viewer's perspective, the point is changed.\n   *\n   * @example\n   * const viewportPoint = sendPointToPlane(\n   *  this.getScenePoint(e),\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getScenePoint(e: TPointerEvent) {\n    if (this._absolutePointer) {\n      return this._absolutePointer;\n    }\n    return this.getPointer(e);\n  }\n\n  /**\n   * Returns pointer relative to canvas.\n   *\n   * @deprecated This method is deprecated since v6 to protect you from misuse.\n   * Use {@link getViewportPoint} or {@link getScenePoint} instead.\n   *\n   * @param {Event} e\n   * @param {Boolean} [fromViewport] whether to return the point from the viewport or in the scene\n   * @return {Point}\n   */\n  getPointer(e: TPointerEvent, fromViewport = false): Point {\n    const upperCanvasEl = this.upperCanvasEl,\n      bounds = upperCanvasEl.getBoundingClientRect();\n    let pointer = getPointer(e),\n      boundsWidth = bounds.width || 0,\n      boundsHeight = bounds.height || 0;\n\n    if (!boundsWidth || !boundsHeight) {\n      if (TOP in bounds && BOTTOM in bounds) {\n        boundsHeight = Math.abs(bounds.top - bounds.bottom);\n      }\n      if (RIGHT in bounds && LEFT in bounds) {\n        boundsWidth = Math.abs(bounds.right - bounds.left);\n      }\n    }\n\n    this.calcOffset();\n    pointer.x = pointer.x - this._offset.left;\n    pointer.y = pointer.y - this._offset.top;\n    if (!fromViewport) {\n      pointer = sendPointToPlane(pointer, undefined, this.viewportTransform);\n    }\n\n    const retinaScaling = this.getRetinaScaling();\n    if (retinaScaling !== 1) {\n      pointer.x /= retinaScaling;\n      pointer.y /= retinaScaling;\n    }\n\n    // If bounds are not available (i.e. not visible), do not apply scale.\n    const cssScale =\n      boundsWidth === 0 || boundsHeight === 0\n        ? new Point(1, 1)\n        : new Point(\n            upperCanvasEl.width / boundsWidth,\n            upperCanvasEl.height / boundsHeight,\n          );\n\n    return pointer.multiply(cssScale);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: TSize,\n    options?: TCanvasSizeOptions,\n  ) {\n    // @ts-expect-error this method exists in the subclass - should be moved or declared as abstract\n    this._resetTransformEventData();\n    super._setDimensionsImpl(dimensions, options);\n    if (this._isCurrentlyDrawing) {\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush._setBrushStyles(this.contextTop);\n    }\n  }\n\n  protected _createCacheCanvas() {\n    this.pixelFindCanvasEl = createCanvasElement();\n    this.pixelFindContext = this.pixelFindCanvasEl.getContext('2d', {\n      willReadFrequently: true,\n    })!;\n    this.setTargetFindTolerance(this.targetFindTolerance);\n  }\n\n  /**\n   * Returns context of top canvas where interactions are drawn\n   * @returns {CanvasRenderingContext2D}\n   */\n  getTopContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns context of canvas where object selection is drawn\n   * @alias\n   * @return {CanvasRenderingContext2D}\n   */\n  getSelectionContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns &lt;canvas> element on which object selection is drawn\n   * @return {HTMLCanvasElement}\n   */\n  getSelectionElement(): HTMLCanvasElement {\n    return this.elements.upper.el;\n  }\n\n  /**\n   * Returns currently active object\n   * @return {FabricObject | null} active object\n   */\n  getActiveObject(): FabricObject | undefined {\n    return this._activeObject;\n  }\n\n  /**\n   * Returns an array with the current selected objects\n   * @return {FabricObject[]} active objects array\n   */\n  getActiveObjects(): FabricObject[] {\n    const active = this._activeObject;\n    return isActiveSelection(active)\n      ? active.getObjects()\n      : active\n        ? [active]\n        : [];\n  }\n\n  /**\n   * @private\n   * Compares the old activeObject with the current one and fires correct events\n   * @param {FabricObject[]} oldObjects old activeObject\n   * @param {TPointerEvent} e mouse event triggering the selection events\n   */\n  _fireSelectionEvents(oldObjects: FabricObject[], e?: TPointerEvent) {\n    let somethingChanged = false,\n      invalidate = false;\n    const objects = this.getActiveObjects(),\n      added: FabricObject[] = [],\n      removed: FabricObject[] = [];\n\n    oldObjects.forEach((target) => {\n      if (!objects.includes(target)) {\n        somethingChanged = true;\n        target.fire('deselected', {\n          e,\n          target,\n        });\n        removed.push(target);\n      }\n    });\n\n    objects.forEach((target) => {\n      if (!oldObjects.includes(target)) {\n        somethingChanged = true;\n        target.fire('selected', {\n          e,\n          target,\n        });\n        added.push(target);\n      }\n    });\n\n    if (oldObjects.length > 0 && objects.length > 0) {\n      invalidate = true;\n      somethingChanged &&\n        this.fire('selection:updated', {\n          e,\n          selected: added,\n          deselected: removed,\n        });\n    } else if (objects.length > 0) {\n      invalidate = true;\n      this.fire('selection:created', {\n        e,\n        selected: added,\n      });\n    } else if (oldObjects.length > 0) {\n      invalidate = true;\n      this.fire('selection:cleared', {\n        e,\n        deselected: removed,\n      });\n    }\n    invalidate && (this._objectsToRender = undefined);\n  }\n\n  /**\n   * Sets given object as the only active object on canvas\n   * @param {FabricObject} object Object to set as an active one\n   * @param {TPointerEvent} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    // we can't inline this, since _setActiveObject will change what getActiveObjects returns\n    const currentActives = this.getActiveObjects();\n    const selected = this._setActiveObject(object, e);\n    this._fireSelectionEvents(currentActives, e);\n    return selected;\n  }\n\n  /**\n   * This is supposed to be equivalent to setActiveObject but without firing\n   * any event. There is commitment to have this stay this way.\n   * This is the functional part of setActiveObject.\n   * @param {Object} object to set as active\n   * @param {Event} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  _setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    const prevActiveObject = this._activeObject;\n    if (prevActiveObject === object) {\n      return false;\n    }\n    // after calling this._discardActiveObject, this,_activeObject could be undefined\n    if (!this._discardActiveObject(e, object) && this._activeObject) {\n      // refused to deselect\n      return false;\n    }\n    if (object.onSelect({ e })) {\n      return false;\n    }\n\n    this._activeObject = object;\n\n    if (isActiveSelection(object) && prevActiveObject !== object) {\n      object.set('canvas', this);\n    }\n    object.setCoords();\n\n    return true;\n  }\n\n  /**\n   * This is supposed to be equivalent to discardActiveObject but without firing\n   * any selection events ( can still fire object transformation events ). There is commitment to have this stay this way.\n   * This is the functional part of discardActiveObject.\n   * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n   * @param {Object} object the next object to set as active, reason why we are discarding this\n   * @return {Boolean} true if the active object has been discarded\n   */\n  _discardActiveObject(\n    e?: TPointerEvent,\n    object?: FabricObject,\n  ): this is { _activeObject: undefined } {\n    const obj = this._activeObject;\n    if (obj) {\n      // onDeselect return TRUE to cancel selection;\n      if (obj.onDeselect({ e, object })) {\n        return false;\n      }\n      if (this._currentTransform && this._currentTransform.target === obj) {\n        this.endCurrentTransform(e);\n      }\n      if (isActiveSelection(obj) && obj === this._hoveredTarget) {\n        this._hoveredTarget = undefined;\n      }\n      this._activeObject = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Discards currently active object and fire events. If the function is called by fabric\n   * as a consequence of a mouse event, the event is passed as a parameter and\n   * sent to the fire function for the custom events. When used as a method the\n   * e param does not have any application.\n   * @param {event} e\n   * @return {Boolean} true if the active object has been discarded\n   */\n  discardActiveObject(e?: TPointerEvent): this is { _activeObject: undefined } {\n    const currentActives = this.getActiveObjects(),\n      activeObject = this.getActiveObject();\n    if (currentActives.length) {\n      this.fire('before:selection:cleared', {\n        e,\n        deselected: [activeObject!],\n      });\n    }\n    const discarded = this._discardActiveObject(e);\n    this._fireSelectionEvents(currentActives, e);\n    return discarded;\n  }\n\n  /**\n   * End the current transform.\n   * You don't usually need to call this method unless you are interrupting a user initiated transform\n   * because of some other event ( a press of key combination, or something that block the user UX )\n   * @param {Event} [e] send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  endCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform;\n    this._finalizeCurrentTransform(e);\n    if (transform && transform.target) {\n      // this could probably go inside _finalizeCurrentTransform\n      transform.target.isMoving = false;\n    }\n    this._currentTransform = null;\n  }\n\n  /**\n   * @private\n   * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  _finalizeCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform!,\n      target = transform.target,\n      options = {\n        e,\n        target,\n        transform,\n        action: transform.action,\n      };\n\n    if (target._scaling) {\n      target._scaling = false;\n    }\n\n    target.setCoords();\n\n    if (transform.actionPerformed) {\n      this.fire('object:modified', options);\n      target.fire(MODIFIED, options);\n    }\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    super.setViewportTransform(vpt);\n    const activeObject = this._activeObject;\n    if (activeObject) {\n      activeObject.setCoords();\n    }\n  }\n\n  /**\n   * @override clears active selection ref and interactive canvas elements and contexts\n   */\n  destroy() {\n    // dispose of active selection\n    const activeObject = this._activeObject;\n    if (isActiveSelection(activeObject)) {\n      activeObject.removeAll();\n      activeObject.dispose();\n    }\n\n    delete this._activeObject;\n\n    super.destroy();\n\n    // free resources\n\n    // pixel find canvas\n    // @ts-expect-error disposing\n    this.pixelFindContext = null;\n    // @ts-expect-error disposing\n    this.pixelFindCanvasEl = undefined;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    // discard active object and fire events\n    this.discardActiveObject();\n    // make sure we clear the active object in case it refused to be discarded\n    this._activeObject = undefined;\n    this.clearContext(this.contextTop);\n    super.clear();\n  }\n\n  /**\n   * Draws objects' controls (borders/controls)\n   * @param {CanvasRenderingContext2D} ctx Context to render controls on\n   */\n  drawControls(ctx: CanvasRenderingContext2D) {\n    const activeObject = this._activeObject;\n\n    if (activeObject) {\n      activeObject._renderControls(ctx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: 'toObject' | 'toDatalessObject',\n    propertiesToInclude: string[],\n  ): Record<string, any> {\n    // If the object is part of the current selection group, it should\n    // be transformed appropriately\n    // i.e. it should be serialised as it would appear if the selection group\n    // were to be destroyed.\n    const originalProperties = this._realizeGroupTransformOnObject(instance),\n      object = super._toObject(instance, methodName, propertiesToInclude);\n    //Undo the damage we did by changing all of its properties\n    instance.set(originalProperties);\n    return object;\n  }\n\n  /**\n   * Realizes an object's group transformation on it\n   * @private\n   * @param {FabricObject} [instance] the object to transform (gets mutated)\n   * @returns the original values of instance which were changed\n   */\n  private _realizeGroupTransformOnObject(\n    instance: FabricObject,\n  ): Partial<typeof instance> {\n    const { group } = instance;\n    if (group && isActiveSelection(group) && this._activeObject === group) {\n      const layoutProps = [\n        'angle',\n        'flipX',\n        'flipY',\n        LEFT,\n        SCALE_X,\n        SCALE_Y,\n        SKEW_X,\n        SKEW_Y,\n        TOP,\n      ] as (keyof typeof instance)[];\n      const originalValues = pick<typeof instance>(instance, layoutProps);\n      addTransformToObject(instance, group.calcOwnMatrix());\n      return originalValues;\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    // If the object is in a selection group, simulate what would happen to that\n    // object when the group is deselected\n    const originalProperties = this._realizeGroupTransformOnObject(instance);\n    super._setSVGObject(markup, instance, reviver);\n    instance.set(originalProperties);\n  }\n}\n","import type { ModifierKey, TOptionalModifierKey } from '../EventTypeDefs';\nimport type { TOptions } from '../typedefs';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\n\nexport interface CanvasTransformOptions {\n  /**\n   * When true, objects can be transformed by one side (unproportionately)\n   * when dragged on the corners that normally would not do that.\n   * @type Boolean\n   * @default\n   * @since fabric 4.0 // changed name and default value\n   */\n  uniformScaling: boolean;\n\n  /**\n   * Indicates which key switches uniform scaling.\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * totally wrong named. this sounds like `uniform scaling`\n   * if Canvas.uniformScaling is true, pressing this will set it to false\n   * and viceversa.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  uniScaleKey: TOptionalModifierKey;\n\n  /**\n   * When true, objects use center point as the origin of scale transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredScaling: boolean;\n\n  /**\n   * When true, objects use center point as the origin of rotate transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredRotation: boolean;\n\n  /**\n   * Indicates which key enable centered Transform\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  centeredKey: TOptionalModifierKey;\n\n  /**\n   * Indicates which key enable alternate action on corner\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  altActionKey: TOptionalModifierKey;\n}\n\nexport interface CanvasSelectionOptions {\n  /**\n   * Indicates whether group selection should be enabled\n   * @type Boolean\n   * @default\n   */\n  selection: boolean;\n\n  /**\n   * Indicates which key or keys enable multiple click selection\n   * Pass value as a string or array of strings\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or empty or containing any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.2\n   * @type ModifierKey|ModifierKey[]\n   * @default\n   */\n  selectionKey: TOptionalModifierKey | ModifierKey[];\n\n  /**\n   * Indicates which key enable alternative selection\n   * in case of target overlapping with active object\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * For a series of reason that come from the general expectations on how\n   * things should work, this feature works only for preserveObjectStacking true.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.5\n   * @type null|ModifierKey\n   * @default\n   */\n  altSelectionKey: TOptionalModifierKey;\n\n  /**\n   * Color of selection\n   * @type String\n   * @default\n   */\n  selectionColor: string;\n\n  /**\n   * Default dash array pattern\n   * If not empty the selection border is dashed\n   * @type Array\n   */\n  selectionDashArray: number[];\n\n  /**\n   * Color of the border of selection (usually slightly darker than color of selection itself)\n   * @type String\n   * @default\n   */\n  selectionBorderColor: string;\n\n  /**\n   * Width of a line used in object/group selection\n   * @type Number\n   * @default\n   */\n  selectionLineWidth: number;\n\n  /**\n   * Select only shapes that are fully contained in the dragged selection rectangle.\n   * @type Boolean\n   * @default\n   */\n  selectionFullyContained: boolean;\n}\n\nexport interface CanvasCursorOptions {\n  /**\n   * Default cursor value used when hovering over an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  hoverCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used when moving an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  moveCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used for the entire canvas\n   * @type String\n   * @default default\n   */\n  defaultCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used during free drawing\n   * @type String\n   * @default crosshair\n   */\n  freeDrawingCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used for disabled elements ( corners with disabled action )\n   * @type String\n   * @since 2.0.0\n   * @default not-allowed\n   */\n  notAllowedCursor: CSSStyleDeclaration['cursor'];\n}\n\nexport interface TargetFindOptions {\n  /**\n   * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n   * @type Boolean\n   * @default\n   */\n  perPixelTargetFind: boolean;\n\n  /**\n   * Number of pixels around target pixel to tolerate (consider active) during object detection\n   * @type Number\n   * @default\n   */\n  targetFindTolerance: number;\n\n  /**\n   * When true, target detection is skipped. Target detection will return always undefined.\n   * click selection won't work anymore, events will fire with no targets.\n   * if something is selected before setting it to true, it will be deselected at the first click.\n   * area selection will still work. check the `selection` property too.\n   * if you deactivate both, you should look into staticCanvas.\n   * @type Boolean\n   * @default\n   */\n  skipTargetFind: boolean;\n}\n\nexport interface CanvasEventsOptions {\n  /**\n   * Indicates if the right click on canvas can output the context menu or not\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  stopContextMenu: boolean;\n\n  /**\n   * Indicates if the canvas can fire right click events\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  fireRightClick: boolean;\n\n  /**\n   * Indicates if the canvas can fire middle click events\n   * @type Boolean\n   * @since 1.7.8\n   * @default\n   */\n  fireMiddleClick: boolean;\n\n  /**\n   * When the option is enabled, PointerEvent is used instead of TPointerEvent.\n   * @type Boolean\n   * @default\n   */\n  enablePointerEvents: boolean;\n}\n\nexport interface CanvasOptions\n  extends StaticCanvasOptions,\n    CanvasTransformOptions,\n    CanvasSelectionOptions,\n    CanvasCursorOptions,\n    TargetFindOptions,\n    CanvasEventsOptions {\n  /**\n   * Default element class that's given to wrapper (div) element of canvas\n   * @type String\n   * @default\n   * @deprecated customize {@link CanvasDOMManager} instead or access {@link elements} directly\n   */\n  containerClass: string;\n\n  /**\n   * Indicates whether objects should remain in current stack position when selected.\n   * When false objects are brought to top and rendered as part of the selection group\n   * @type Boolean\n   * @default\n   */\n  preserveObjectStacking: boolean;\n}\n\nexport type TCanvasOptions = TOptions<CanvasOptions>;\n\nexport const canvasDefaults: TOptions<CanvasOptions> = {\n  uniformScaling: true,\n  uniScaleKey: 'shiftKey',\n  centeredScaling: false,\n  centeredRotation: false,\n  centeredKey: 'altKey',\n  altActionKey: 'shiftKey',\n\n  selection: true,\n  selectionKey: 'shiftKey',\n  selectionColor: 'rgba(100, 100, 255, 0.3)',\n  selectionDashArray: [],\n  selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n  selectionLineWidth: 1,\n  selectionFullyContained: false,\n\n  hoverCursor: 'move',\n  moveCursor: 'move',\n  defaultCursor: 'default',\n  freeDrawingCursor: 'crosshair',\n  notAllowedCursor: 'not-allowed',\n\n  perPixelTargetFind: false,\n  targetFindTolerance: 0,\n  skipTargetFind: false,\n\n  stopContextMenu: false,\n  fireRightClick: false,\n  fireMiddleClick: false,\n  enablePointerEvents: false,\n\n  containerClass: 'canvas-container',\n  // turn to true for fabric 7.0\n  preserveObjectStacking: false,\n};\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport type { ITextBehavior } from '../shapes/IText/ITextBehavior';\nimport { removeFromArray } from '../util/internals/removeFromArray';\nimport type { Canvas } from './Canvas';\n\n/**\n * In charge of synchronizing all interactive text instances of a canvas\n */\nexport class TextEditingManager {\n  private targets: ITextBehavior[] = [];\n  private declare target?: ITextBehavior;\n  private __disposer: VoidFunction;\n\n  constructor(canvas: Canvas) {\n    const cb = () => {\n      const { hiddenTextarea } =\n        (canvas.getActiveObject() as ITextBehavior) || {};\n      hiddenTextarea && hiddenTextarea.focus();\n    };\n    const el = canvas.upperCanvasEl;\n    el.addEventListener('click', cb);\n    this.__disposer = () => el.removeEventListener('click', cb);\n  }\n\n  exitTextEditing() {\n    this.target = undefined;\n    this.targets.forEach((target) => {\n      if (target.isEditing) {\n        target.exitEditing();\n      }\n    });\n  }\n\n  add(target: ITextBehavior) {\n    this.targets.push(target);\n  }\n\n  remove(target: ITextBehavior) {\n    this.unregister(target);\n    removeFromArray(this.targets, target);\n  }\n\n  register(target: ITextBehavior) {\n    this.target = target;\n  }\n\n  unregister(target: ITextBehavior) {\n    if (target === this.target) {\n      this.target = undefined;\n    }\n  }\n\n  onMouseMove(e: TPointerEvent) {\n    this.target?.isEditing && this.target.updateSelectionOnMouseMove(e);\n  }\n\n  clear() {\n    this.targets = [];\n    this.target = undefined;\n  }\n\n  dispose() {\n    this.clear();\n    this.__disposer();\n    // @ts-expect-error disposing\n    delete this.__disposer;\n  }\n}\n","import { classRegistry } from '../ClassRegistry';\nimport { NONE } from '../constants';\nimport type {\n  CanvasEvents,\n  DragEventData,\n  ObjectEvents,\n  TEventsExtraData,\n  TPointerEvent,\n  TPointerEventNames,\n  Transform,\n} from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\nimport type { Group } from '../shapes/Group';\nimport type { IText } from '../shapes/IText/IText';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { isTouchEvent, stopEvent } from '../util/dom_event';\nimport { getDocumentFromElement, getWindowFromElement } from '../util/dom_misc';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { isActiveSelection } from '../util/typeAssertions';\nimport type { CanvasOptions, TCanvasOptions } from './CanvasOptions';\nimport { SelectableCanvas } from './SelectableCanvas';\nimport { TextEditingManager } from './TextEditingManager';\n\nconst addEventOptions = { passive: false } as EventListenerOptions;\n\nconst getEventPoints = (canvas: Canvas, e: TPointerEvent) => {\n  const viewportPoint = canvas.getViewportPoint(e);\n  const scenePoint = canvas.getScenePoint(e);\n  return {\n    viewportPoint,\n    scenePoint,\n    pointer: viewportPoint,\n    absolutePointer: scenePoint,\n  };\n};\n\n// just to be clear, the utils are now deprecated and those are here exactly as minifier helpers\n// because el.addEventListener can't me be minified while a const yes and we use it 47 times in this file.\n// few bytes but why give it away.\nconst addListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['addEventListener']>\n) => el.addEventListener(...args);\nconst removeListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['removeEventListener']>\n) => el.removeEventListener(...args);\n\nconst syntheticEventConfig = {\n  mouse: {\n    in: 'over',\n    out: 'out',\n    targetIn: 'mouseover',\n    targetOut: 'mouseout',\n    canvasIn: 'mouse:over',\n    canvasOut: 'mouse:out',\n  },\n  drag: {\n    in: 'enter',\n    out: 'leave',\n    targetIn: 'dragenter',\n    targetOut: 'dragleave',\n    canvasIn: 'drag:enter',\n    canvasOut: 'drag:leave',\n  },\n} as const;\n\ntype TSyntheticEventContext = {\n  mouse: { e: TPointerEvent };\n  drag: DragEventData;\n};\n\nexport class Canvas extends SelectableCanvas implements CanvasOptions {\n  /**\n   * Contains the id of the touch event that owns the fabric transform\n   * @type Number\n   * @private\n   */\n  declare mainTouchId?: number;\n\n  declare enablePointerEvents: boolean;\n\n  /**\n   * Holds a reference to a setTimeout timer for event synchronization\n   * @type number\n   * @private\n   */\n  private declare _willAddMouseDown: number;\n\n  /**\n   * Holds a reference to an object on the canvas that is receiving the drag over event.\n   * @type FabricObject\n   * @private\n   */\n  private declare _draggedoverTarget?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas from where the drag operation started\n   * @type FabricObject\n   * @private\n   */\n  private declare _dragSource?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas that is the current drop target\n   * May differ from {@link _draggedoverTarget}\n   * @todo inspect whether {@link _draggedoverTarget} and {@link _dropTarget} should be merged somehow\n   * @type FabricObject\n   * @private\n   */\n  private declare _dropTarget: FabricObject<ObjectEvents> | undefined;\n\n  /**\n   * a boolean that keeps track of the click state during a cycle of mouse down/up.\n   * If a mouse move occurs it becomes false.\n   * Is true by default, turns false on mouse move.\n   * Used to determine if a mouseUp is a click\n   */\n  private _isClick: boolean;\n\n  textEditingManager = new TextEditingManager(this);\n\n  constructor(el?: string | HTMLCanvasElement, options: TCanvasOptions = {}) {\n    super(el, options);\n    // bind event handlers\n    (\n      [\n        '_onMouseDown',\n        '_onTouchStart',\n        '_onMouseMove',\n        '_onMouseUp',\n        '_onTouchEnd',\n        '_onResize',\n        // '_onGesture',\n        // '_onDrag',\n        // '_onShake',\n        // '_onLongPress',\n        // '_onOrientationChange',\n        '_onMouseWheel',\n        '_onMouseOut',\n        '_onMouseEnter',\n        '_onContextMenu',\n        '_onClick',\n        '_onDragStart',\n        '_onDragEnd',\n        '_onDragProgress',\n        '_onDragOver',\n        '_onDragEnter',\n        '_onDragLeave',\n        '_onDrop',\n      ] as (keyof this)[]\n    ).forEach((eventHandler) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n      this[eventHandler] = (this[eventHandler] as Function).bind(this);\n    });\n    // register event handlers\n    this.addOrRemove(addListener, 'add');\n  }\n\n  /**\n   * return an event prefix pointer or mouse.\n   * @private\n   */\n  private _getEventPrefix() {\n    return this.enablePointerEvents ? 'pointer' : 'mouse';\n  }\n\n  addOrRemove(functor: any, _eventjsFunctor: 'add' | 'remove') {\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    functor(getWindowFromElement(canvasElement), 'resize', this._onResize);\n    functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    functor(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove,\n      addEventOptions,\n    );\n    functor(canvasElement, `${eventTypePrefix}out`, this._onMouseOut);\n    functor(canvasElement, `${eventTypePrefix}enter`, this._onMouseEnter);\n    functor(canvasElement, 'wheel', this._onMouseWheel);\n    functor(canvasElement, 'contextmenu', this._onContextMenu);\n    functor(canvasElement, 'click', this._onClick);\n    // decide if to remove in fabric 7.0\n    functor(canvasElement, 'dblclick', this._onClick);\n    functor(canvasElement, 'dragstart', this._onDragStart);\n    functor(canvasElement, 'dragend', this._onDragEnd);\n    functor(canvasElement, 'dragover', this._onDragOver);\n    functor(canvasElement, 'dragenter', this._onDragEnter);\n    functor(canvasElement, 'dragleave', this._onDragLeave);\n    functor(canvasElement, 'drop', this._onDrop);\n    if (!this.enablePointerEvents) {\n      functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n    }\n    // if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n    //   eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n    //   eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n    //   eventjs[eventjsFunctor](\n    //     canvasElement,\n    //     'orientation',\n    //     this._onOrientationChange\n    //   );\n    //   eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n    //   eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n    // }\n  }\n\n  /**\n   * Removes all event listeners, used when disposing the instance\n   */\n  removeListeners() {\n    this.addOrRemove(removeListener, 'remove');\n    // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      `${eventTypePrefix}up`,\n      this._onMouseUp as EventListener,\n    );\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    clearTimeout(this._willAddMouseDown);\n  }\n\n  /**\n   * @private\n   * @param {Event} [e] Event object fired on wheel event\n   */\n  private _onMouseWheel(e: MouseEvent) {\n    this.__onMouseWheel(e);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onMouseOut(e: TPointerEvent) {\n    const target = this._hoveredTarget;\n    const shared = {\n      e,\n      ...getEventPoints(this, e),\n    };\n    this.fire('mouse:out', { ...shared, target });\n    this._hoveredTarget = undefined;\n    target && target.fire('mouseout', { ...shared });\n    this._hoveredTargets.forEach((nestedTarget) => {\n      this.fire('mouse:out', { ...shared, target: nestedTarget });\n      nestedTarget && nestedTarget.fire('mouseout', { ...shared });\n    });\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseenter\n   */\n  private _onMouseEnter(e: TPointerEvent) {\n    // This find target and consequent 'mouse:over' is used to\n    // clear old instances on hovered target.\n    // calling findTarget has the side effect of killing target.__corner.\n    // as a short term fix we are not firing this if we are currently transforming.\n    // as a long term fix we need to separate the action of finding a target with the\n    // side effects we added to it.\n    if (!this._currentTransform && !this.findTarget(e)) {\n      this.fire('mouse:over', {\n        e,\n        ...getEventPoints(this, e),\n      });\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n  }\n\n  /**\n   * supports native like text dragging\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragStart(e: DragEvent) {\n    this._isClick = false;\n    const activeObject = this.getActiveObject();\n    if (activeObject && activeObject.onDragStart(e)) {\n      this._dragSource = activeObject;\n      const options = { e, target: activeObject };\n      this.fire('dragstart', options);\n      activeObject.fire('dragstart', options);\n      addListener(\n        this.upperCanvasEl,\n        'drag',\n        this._onDragProgress as EventListener,\n      );\n      return;\n    }\n    stopEvent(e);\n  }\n\n  /**\n   * First we clear top context where the effects are being rendered.\n   * Then we render the effects.\n   * Doing so will render the correct effect for all cases including an overlap between `source` and `target`.\n   * @private\n   */\n  private _renderDragEffects(\n    e: DragEvent,\n    source?: FabricObject,\n    target?: FabricObject,\n  ) {\n    let dirty = false;\n    // clear top context\n    const dropTarget = this._dropTarget;\n    if (dropTarget && dropTarget !== source && dropTarget !== target) {\n      dropTarget.clearContextTop();\n      dirty = true;\n    }\n    source?.clearContextTop();\n    target !== source && target?.clearContextTop();\n    // render effects\n    const ctx = this.contextTop;\n    ctx.save();\n    ctx.transform(...this.viewportTransform);\n    if (source) {\n      ctx.save();\n      source.transform(ctx);\n      source.renderDragSourceEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    if (target) {\n      ctx.save();\n      target.transform(ctx);\n      target.renderDropTargetEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    ctx.restore();\n    dirty && (this.contextTopDirty = true);\n  }\n\n  /**\n   * supports native like text dragging\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragEnd(e: DragEvent) {\n    const didDrop = !!e.dataTransfer && e.dataTransfer.dropEffect !== NONE,\n      dropTarget = didDrop ? this._activeObject : undefined,\n      options = {\n        e,\n        target: this._dragSource as FabricObject,\n        subTargets: this.targets,\n        dragSource: this._dragSource as FabricObject,\n        didDrop,\n        dropTarget: dropTarget as FabricObject,\n      };\n    removeListener(\n      this.upperCanvasEl,\n      'drag',\n      this._onDragProgress as EventListener,\n    );\n    this.fire('dragend', options);\n    this._dragSource && this._dragSource.fire('dragend', options);\n    delete this._dragSource;\n    // we need to call mouse up synthetically because the browser won't\n    this._onMouseUp(e);\n  }\n\n  /**\n   * fire `drag` event on canvas and drag source\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragProgress(e: DragEvent) {\n    const options = {\n      e,\n      target: this._dragSource as FabricObject | undefined,\n      dragSource: this._dragSource as FabricObject | undefined,\n      dropTarget: this._draggedoverTarget as FabricObject,\n    };\n    this.fire('drag', options);\n    this._dragSource && this._dragSource.fire('drag', options);\n  }\n\n  /**\n   * As opposed to {@link findTarget} we want the top most object to be returned w/o the active object cutting in line.\n   * Override at will\n   */\n  protected findDragTargets(e: DragEvent) {\n    this.targets = [];\n    const target = this._searchPossibleTargets(\n      this._objects,\n      this.getViewportPoint(e),\n    );\n    return {\n      target,\n      targets: [...this.targets],\n    };\n  }\n\n  /**\n   * prevent default to allow drop event to be fired\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n   * @private\n   * @param {DragEvent} [e] Event object fired on Event.js shake\n   */\n  private _onDragOver(e: DragEvent) {\n    const eventType = 'dragover';\n    const { target, targets } = this.findDragTargets(e);\n    const dragSource = this._dragSource as FabricObject;\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource,\n      canDrop: false,\n      dropTarget: undefined,\n    };\n    let dropTarget;\n    //  fire on canvas\n    this.fire(eventType, options);\n    //  make sure we fire dragenter events before dragover\n    //  if dragleave is needed, object will not fire dragover so we don't need to trouble ourselves with it\n    this._fireEnterLeaveEvents(target, options);\n    if (target) {\n      if (target.canDrop(e)) {\n        dropTarget = target;\n      }\n      target.fire(eventType, options);\n    }\n    //  propagate the event to subtargets\n    for (let i = 0; i < targets.length; i++) {\n      const subTarget = targets[i];\n      // accept event only if previous targets didn't (the accepting target calls `preventDefault` to inform that the event is taken)\n      // TODO: verify if those should loop in inverse order then?\n      // what is the order of subtargets?\n      if (subTarget.canDrop(e)) {\n        dropTarget = subTarget;\n      }\n      subTarget.fire(eventType, options);\n    }\n    //  render drag effects now that relations between source and target is clear\n    this._renderDragEffects(e, dragSource, dropTarget);\n    this._dropTarget = dropTarget;\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragEnter(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragenter', options);\n    //  fire dragenter on targets\n    this._fireEnterLeaveEvents(target, options);\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragLeave(e: DragEvent) {\n    const options = {\n      e,\n      target: this._draggedoverTarget,\n      subTargets: this.targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragleave', options);\n\n    //  fire dragleave on targets\n    this._fireEnterLeaveEvents(undefined, options);\n    this._renderDragEffects(e, this._dragSource);\n    this._dropTarget = undefined;\n    //  clear targets\n    this.targets = [];\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * `drop:before` is a an event that allows you to schedule logic\n   * before the `drop` event. Prefer `drop` event always, but if you need\n   * to run some drop-disabling logic on an event, since there is no way\n   * to handle event handlers ordering, use `drop:before`\n   * @private\n   * @param {Event} e\n   */\n  private _onDrop(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = this._basicEventHandler('drop:before', {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n      ...getEventPoints(this, e),\n    });\n    //  will be set by the drop target\n    options.didDrop = false;\n    //  will be set by the drop target, used in case options.target refuses the drop\n    options.dropTarget = undefined;\n    //  fire `drop`\n    this._basicEventHandler('drop', options);\n    //  inform canvas of the drop\n    //  we do this because canvas was unaware of what happened at the time the `drop` event was fired on it\n    //  use for side effects\n    this.fire('drop:after', options);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onContextMenu(e: TPointerEvent): false {\n    const target = this.findTarget(e),\n      subTargets = this.targets || [];\n    const options = this._basicEventHandler('contextmenu:before', {\n      e,\n      target,\n      subTargets,\n    });\n    // TODO: this line is silly because the dev can subscribe to the event and prevent it themselves\n    this.stopContextMenu && stopEvent(e);\n    this._basicEventHandler('contextmenu', options);\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onClick(e: TPointerEvent) {\n    const clicks = e.detail;\n    if (clicks > 3 || clicks < 2) return;\n    this._cacheTransformEventData(e);\n    clicks == 2 && e.type === 'dblclick' && this._handleEvent(e, 'dblclick');\n    clicks == 3 && this._handleEvent(e, 'tripleclick');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Return a the id of an event.\n   * returns either the pointerId or the identifier or 0 for the mouse event\n   * @private\n   * @param {Event} evt Event object\n   */\n  getPointerId(evt: TouchEvent | PointerEvent): number {\n    const changedTouches = (evt as TouchEvent).changedTouches;\n\n    if (changedTouches) {\n      return changedTouches[0] && changedTouches[0].identifier;\n    }\n\n    if (this.enablePointerEvents) {\n      return (evt as PointerEvent).pointerId;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines if an event has the id of the event that is considered main\n   * @private\n   * @param {evt} event Event object\n   */\n  _isMainEvent(evt: TPointerEvent): boolean {\n    if ((evt as PointerEvent).isPrimary === true) {\n      return true;\n    }\n    if ((evt as PointerEvent).isPrimary === false) {\n      return false;\n    }\n    if (evt.type === 'touchend' && (evt as TouchEvent).touches.length === 0) {\n      return true;\n    }\n    if ((evt as TouchEvent).changedTouches) {\n      return (\n        (evt as TouchEvent).changedTouches[0].identifier === this.mainTouchId\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchStart(e: TouchEvent) {\n    // we will prevent scrolling if allowTouchScrolling is not enabled and\n    let shouldPreventScrolling = !this.allowTouchScrolling;\n    const currentActiveObject = this._activeObject;\n    if (this.mainTouchId === undefined) {\n      this.mainTouchId = this.getPointerId(e);\n    }\n    this.__onMouseDown(e);\n    // after executing fabric logic for mouse down let's see\n    // if we didn't change target or if we are drawing\n    // we want to prevent scrolling anyway\n    if (\n      this.isDrawingMode ||\n      (currentActiveObject && this._target === currentActiveObject)\n    ) {\n      shouldPreventScrolling = true;\n    }\n    // prevent default, will block scrolling from start\n    shouldPreventScrolling && e.preventDefault();\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    // if we scroll don't register the touch move event\n    shouldPreventScrolling &&\n      addListener(\n        doc,\n        'touchmove',\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    // Unbind mousedown to prevent double triggers from touch devices\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}down`,\n      this._onMouseDown as EventListener,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDown(e: TPointerEvent) {\n    this.__onMouseDown(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(doc, `${eventTypePrefix}up`, this._onMouseUp as EventListener);\n    addListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchEnd(e: TouchEvent) {\n    if (e.touches.length > 0) {\n      // if there are still touches stop here\n      return;\n    }\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    delete this.mainTouchId;\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    if (this._willAddMouseDown) {\n      clearTimeout(this._willAddMouseDown);\n    }\n    this._willAddMouseDown = setTimeout(() => {\n      // Wait 400ms before rebinding mousedown to prevent double triggers\n      // from touch devices\n      addListener(\n        this.upperCanvasEl,\n        `${eventTypePrefix}down`,\n        this._onMouseDown as EventListener,\n      );\n      this._willAddMouseDown = 0;\n    }, 400) as unknown as number;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUp(e: TPointerEvent) {\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    if (this._isMainEvent(e)) {\n      const doc = getDocumentFromElement(this.upperCanvasEl);\n      removeListener(\n        doc,\n        `${eventTypePrefix}up`,\n        this._onMouseUp as EventListener,\n      );\n      removeListener(\n        doc,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n      addListener(\n        canvasElement,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMove(e: TPointerEvent) {\n    const activeObject = this.getActiveObject();\n    !this.allowTouchScrolling &&\n      (!activeObject ||\n        // a drag event sequence is started by the active object flagging itself on mousedown / mousedown:before\n        // we must not prevent the event's default behavior in order for the window to start dragging\n        !activeObject.shouldStartDragging(e)) &&\n      e.preventDefault &&\n      e.preventDefault();\n    this.__onMouseMove(e);\n  }\n\n  /**\n   * @private\n   */\n  _onResize() {\n    this.calcOffset();\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n   * @private\n   * @param {Object} target\n   */\n  _shouldRender(target: FabricObject | undefined) {\n    const activeObject = this.getActiveObject();\n    // if just one of them is available or if they are both but are different objects\n    // this covers: switch of target, from target to no target, selection of target\n    // multiSelection with key and mouse\n    return (\n      !!activeObject !== !!target ||\n      (activeObject && target && activeObject !== target)\n    );\n  }\n\n  /**\n   * Method that defines the actions when mouse is released on canvas.\n   * The method resets the currentTransform parameters, store the image corner\n   * position in the image object and render the canvas on top.\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseUp(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'up:before');\n\n    const transform = this._currentTransform;\n    const isClick = this._isClick;\n    const target = this._target;\n\n    // if right/middle click just fire events and return\n    // target undefined will make the _handleEvent search the target\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'up');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this._onMouseUpInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n    let shouldRender = false;\n    if (transform) {\n      this._finalizeCurrentTransform(e);\n      shouldRender = transform.actionPerformed;\n    }\n    if (!isClick) {\n      const targetWasActive = target === this._activeObject;\n      this.handleSelection(e);\n      if (!shouldRender) {\n        shouldRender =\n          this._shouldRender(target) ||\n          (!targetWasActive && target === this._activeObject);\n      }\n    }\n    let pointer, corner;\n    if (target) {\n      const found = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      const { key, control } = found || {};\n      corner = key;\n      if (\n        target.selectable &&\n        target !== this._activeObject &&\n        target.activeOn === 'up'\n      ) {\n        this.setActiveObject(target, e);\n        shouldRender = true;\n      } else if (control) {\n        const mouseUpHandler = control.getMouseUpHandler(e, target, control);\n        if (mouseUpHandler) {\n          pointer = this.getScenePoint(e);\n          mouseUpHandler.call(control, e, transform!, pointer.x, pointer.y);\n        }\n      }\n      target.isMoving = false;\n    }\n    // if we are ending up a transform on a different control or a new object\n    // fire the original mouse up from the corner that started the transform\n    if (\n      transform &&\n      (transform.target !== target || transform.corner !== corner)\n    ) {\n      const originalControl =\n          transform.target && transform.target.controls[transform.corner],\n        originalMouseUpHandler =\n          originalControl &&\n          originalControl.getMouseUpHandler(\n            e,\n            transform.target,\n            originalControl,\n          );\n      pointer = pointer || this.getScenePoint(e);\n      originalMouseUpHandler &&\n        originalMouseUpHandler.call(\n          originalControl,\n          e,\n          transform,\n          pointer.x,\n          pointer.y,\n        );\n    }\n    this._setCursorFromEvent(e, target);\n    this._handleEvent(e, 'up');\n    this._groupSelector = null;\n    this._currentTransform = null;\n    // reset the target information about which corner is selected\n    target && (target.__corner = undefined);\n    if (shouldRender) {\n      this.requestRenderAll();\n    } else if (!isClick && !(this._activeObject as IText)?.isEditing) {\n      this.renderTop();\n    }\n  }\n\n  _basicEventHandler<T extends keyof (CanvasEvents | ObjectEvents)>(\n    eventType: T,\n    options: (CanvasEvents & ObjectEvents)[T],\n  ) {\n    const { target, subTargets = [] } = options as {\n      target?: FabricObject;\n      subTargets: FabricObject[];\n    };\n    this.fire(eventType, options);\n    target && target.fire(eventType, options);\n    for (let i = 0; i < subTargets.length; i++) {\n      subTargets[i] !== target && subTargets[i].fire(eventType, options);\n    }\n    return options;\n  }\n\n  /**\n   * @private\n   * Handle event firing for target and subtargets\n   * @param {TPointerEvent} e event from mouse\n   * @param {TPointerEventNames} eventType\n   */\n  _handleEvent<T extends TPointerEventNames>(\n    e: TPointerEvent,\n    eventType: T,\n    extraData?: TEventsExtraData[T],\n  ) {\n    const target = this._target,\n      targets = this.targets || [],\n      options: CanvasEvents[`mouse:${T}`] = {\n        e,\n        target,\n        subTargets: targets,\n        ...getEventPoints(this, e),\n        transform: this._currentTransform,\n        ...(eventType === 'up:before' || eventType === 'up'\n          ? {\n              isClick: this._isClick,\n              currentTarget: this.findTarget(e),\n              // set by the preceding `findTarget` call\n              currentSubTargets: this.targets,\n            }\n          : {}),\n        ...(eventType === 'down:before' || eventType === 'down'\n          ? extraData\n          : {}),\n      } as CanvasEvents[`mouse:${T}`];\n    this.fire(`mouse:${eventType}`, options);\n    // this may be a little be more complicated of what we want to handle\n    target && target.fire(`mouse${eventType}`, options);\n    for (let i = 0; i < targets.length; i++) {\n      targets[i] !== target && targets[i].fire(`mouse${eventType}`, options);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDownInDrawingMode(e: TPointerEvent) {\n    this._isCurrentlyDrawing = true;\n    if (this.getActiveObject()) {\n      this.discardActiveObject(e);\n      this.requestRenderAll();\n    }\n    // TODO: this is a scene point so it should be renamed\n    const pointer = this.getScenePoint(e);\n    this.freeDrawingBrush &&\n      this.freeDrawingBrush.onMouseDown(pointer, { e, pointer });\n    this._handleEvent(e, 'down', { alreadySelected: false });\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMoveInDrawingMode(e: TPointerEvent) {\n    if (this._isCurrentlyDrawing) {\n      const pointer = this.getScenePoint(e);\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e,\n          // this is an absolute pointer, the naming is wrong\n          pointer,\n        });\n    }\n    this.setCursor(this.freeDrawingCursor);\n    this._handleEvent(e, 'move');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUpInDrawingMode(e: TPointerEvent) {\n    const pointer = this.getScenePoint(e);\n    if (this.freeDrawingBrush) {\n      this._isCurrentlyDrawing = !!this.freeDrawingBrush.onMouseUp({\n        e: e,\n        // this is an absolute pointer, the naming is wrong\n        pointer,\n      });\n    } else {\n      this._isCurrentlyDrawing = false;\n    }\n    this._handleEvent(e, 'up');\n  }\n\n  /**\n   * Method that defines the actions when mouse is clicked on canvas.\n   * The method inits the currentTransform parameters and renders all the\n   * canvas so the current image can be placed on the top canvas and the rest\n   * in on the container one.\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  __onMouseDown(e: TPointerEvent) {\n    this._isClick = true;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'down:before');\n\n    let target: FabricObject | undefined = this._target;\n    let alreadySelected = !!target && target === this._activeObject;\n    // if right/middle click just fire events\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'down', {\n          alreadySelected,\n        });\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode) {\n      this._onMouseDownInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    // ignore if some object is being transformed at this moment\n    if (this._currentTransform) {\n      return;\n    }\n\n    let shouldRender = this._shouldRender(target);\n    let grouped = false;\n    if (this.handleMultiSelection(e, target)) {\n      // active object might have changed while grouping\n      target = this._activeObject;\n      grouped = true;\n      shouldRender = true;\n    } else if (this._shouldClearSelection(e, target)) {\n      this.discardActiveObject(e);\n    }\n    // we start a group selector rectangle if\n    // selection is enabled\n    // and there is no target, or the following 3 conditions are satisfied:\n    // target is not selectable ( otherwise we selected it )\n    // target is not editing\n    // target is not already selected ( otherwise we drag )\n    if (\n      this.selection &&\n      (!target ||\n        (!target.selectable &&\n          !(target as IText).isEditing &&\n          target !== this._activeObject))\n    ) {\n      const p = this.getScenePoint(e);\n      this._groupSelector = {\n        x: p.x,\n        y: p.y,\n        deltaY: 0,\n        deltaX: 0,\n      };\n    }\n\n    // check again because things could have changed\n    alreadySelected = !!target && target === this._activeObject;\n    if (target) {\n      if (target.selectable && target.activeOn === 'down') {\n        this.setActiveObject(target, e);\n      }\n      const handle = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      if (target === this._activeObject && (handle || !grouped)) {\n        this._setupCurrentTransform(e, target, alreadySelected);\n        const control = handle ? handle.control : undefined,\n          pointer = this.getScenePoint(e),\n          mouseDownHandler =\n            control && control.getMouseDownHandler(e, target, control);\n        mouseDownHandler &&\n          mouseDownHandler.call(\n            control,\n            e,\n            this._currentTransform!,\n            pointer.x,\n            pointer.y,\n          );\n      }\n    }\n    //  we clear `_objectsToRender` in case of a change in order to repopulate it at rendering\n    //  run before firing the `down` event to give the dev a chance to populate it themselves\n    shouldRender && (this._objectsToRender = undefined);\n    this._handleEvent(e, 'down', { alreadySelected: alreadySelected });\n    // we must renderAll so that we update the visuals\n    shouldRender && this.requestRenderAll();\n  }\n\n  /**\n   * reset cache form common information needed during event processing\n   * @private\n   */\n  _resetTransformEventData() {\n    this._target = this._pointer = this._absolutePointer = undefined;\n  }\n\n  /**\n   * Cache common information needed during event processing\n   * @private\n   * @param {Event} e Event object fired on event\n   */\n  _cacheTransformEventData(e: TPointerEvent) {\n    // reset in order to avoid stale caching\n    this._resetTransformEventData();\n    this._pointer = this.getViewportPoint(e);\n    this._absolutePointer = sendPointToPlane(\n      this._pointer,\n      undefined,\n      this.viewportTransform,\n    );\n    this._target = this._currentTransform\n      ? this._currentTransform.target\n      : this.findTarget(e);\n  }\n\n  /**\n   * Method that defines the actions when mouse is hovering the canvas.\n   * The currentTransform parameter will define whether the user is rotating/scaling/translating\n   * an image or neither of them (only hovering). A group selection is also possible and would cancel\n   * all any other type of action.\n   * In case of an image transformation only the top canvas will be rendered.\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  __onMouseMove(e: TPointerEvent) {\n    this._isClick = false;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'move:before');\n\n    if (this.isDrawingMode) {\n      this._onMouseMoveInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    const groupSelector = this._groupSelector;\n\n    // We initially clicked in an empty area, so we draw a box for multiple selection\n    if (groupSelector) {\n      const pointer = this.getScenePoint(e);\n\n      groupSelector.deltaX = pointer.x - groupSelector.x;\n      groupSelector.deltaY = pointer.y - groupSelector.y;\n\n      this.renderTop();\n    } else if (!this._currentTransform) {\n      const target = this.findTarget(e);\n      this._setCursorFromEvent(e, target);\n      this._fireOverOutEvents(e, target);\n    } else {\n      this._transformObject(e);\n    }\n    this.textEditingManager.onMouseMove(e);\n    this._handleEvent(e, 'move');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Manage the mouseout, mouseover events for the fabric object on the canvas\n   * @param {Fabric.Object} target the target where the target from the mousemove event\n   * @param {Event} e Event object fired on mousemove\n   * @private\n   */\n  _fireOverOutEvents(e: TPointerEvent, target?: FabricObject) {\n    const _hoveredTarget = this._hoveredTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('mouse', {\n      e,\n      target,\n      oldTarget: _hoveredTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('mouse', {\n        e,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._hoveredTarget = target;\n    this._hoveredTargets = this.targets.concat();\n  }\n\n  /**\n   * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the onDrag event\n   * @param {Object} data Event object fired on dragover\n   * @private\n   */\n  _fireEnterLeaveEvents(target: FabricObject | undefined, data: DragEventData) {\n    const draggedoverTarget = this._draggedoverTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('drag', {\n      ...data,\n      target,\n      oldTarget: draggedoverTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('drag', {\n        ...data,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._draggedoverTarget = target;\n  }\n\n  /**\n   * Manage the synthetic in/out events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the supported events\n   * @param {Object} data Event object fired\n   * @param {Object} config configuration for the function to work\n   * @param {String} config.targetName property on the canvas where the old target is stored\n   * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n   * @param {String} config.evtOut name of the event to fire for out\n   * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n   * @param {String} config.evtIn name of the event to fire for in\n   * @private\n   */\n  fireSyntheticInOutEvents<T extends keyof TSyntheticEventContext>(\n    type: T,\n    {\n      target,\n      oldTarget,\n      fireCanvas,\n      e,\n      ...data\n    }: TSyntheticEventContext[T] & {\n      target?: FabricObject;\n      oldTarget?: FabricObject;\n      fireCanvas?: boolean;\n    },\n  ) {\n    const { targetIn, targetOut, canvasIn, canvasOut } =\n      syntheticEventConfig[type];\n    const targetChanged = oldTarget !== target;\n\n    if (oldTarget && targetChanged) {\n      const outOpt: CanvasEvents[typeof canvasOut] = {\n        ...data,\n        e,\n        target: oldTarget,\n        nextTarget: target,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasOut, outOpt);\n      oldTarget.fire(targetOut, outOpt);\n    }\n    if (target && targetChanged) {\n      const inOpt: CanvasEvents[typeof canvasIn] = {\n        ...data,\n        e,\n        target,\n        previousTarget: oldTarget,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasIn, inOpt);\n      target.fire(targetIn, inOpt);\n    }\n  }\n\n  /**\n   * Method that defines actions when an Event Mouse Wheel\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseWheel(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'wheel');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event fired on mousemove\n   */\n  _transformObject(e: TPointerEvent) {\n    const scenePoint = this.getScenePoint(e),\n      transform = this._currentTransform!,\n      target = transform.target,\n      //  transform pointer to target's containing coordinate plane\n      //  both pointer and object should agree on every point\n      localPointer = target.group\n        ? sendPointToPlane(\n            scenePoint,\n            undefined,\n            target.group.calcTransformMatrix(),\n          )\n        : scenePoint;\n    transform.shiftKey = e.shiftKey;\n    transform.altKey = !!this.centeredKey && e[this.centeredKey];\n\n    this._performTransformAction(e, transform, localPointer);\n    transform.actionPerformed && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   */\n  _performTransformAction(\n    e: TPointerEvent,\n    transform: Transform,\n    pointer: Point,\n  ) {\n    const { action, actionHandler, target } = transform;\n\n    const actionPerformed =\n      !!actionHandler && actionHandler(e, transform, pointer.x, pointer.y);\n    actionPerformed && target.setCoords();\n\n    // this object could be created from the function in the control handlers\n    if (action === 'drag' && actionPerformed) {\n      transform.target.isMoving = true;\n      this.setCursor(transform.target.moveCursor || this.moveCursor);\n    }\n    transform.actionPerformed = transform.actionPerformed || actionPerformed;\n  }\n\n  /**\n   * Sets the cursor depending on where the canvas is being hovered.\n   * Note: very buggy in Opera\n   * @param {Event} e Event object\n   * @param {Object} target Object that the mouse is hovering, if so.\n   */\n  _setCursorFromEvent(e: TPointerEvent, target?: FabricObject) {\n    if (!target) {\n      this.setCursor(this.defaultCursor);\n      return;\n    }\n    let hoverCursor = target.hoverCursor || this.hoverCursor;\n    const activeSelection = isActiveSelection(this._activeObject)\n        ? this._activeObject\n        : null,\n      // only show proper corner when group selection is not active\n      corner =\n        (!activeSelection || target.group !== activeSelection) &&\n        // here we call findTargetCorner always with undefined for the touch parameter.\n        // we assume that if you are using a cursor you do not need to interact with\n        // the bigger touch area.\n        target.findControl(this.getViewportPoint(e));\n\n    if (!corner) {\n      if ((target as Group).subTargetCheck) {\n        // hoverCursor should come from top-most subTarget,\n        // so we walk the array backwards\n        this.targets\n          .concat()\n          .reverse()\n          .map((_target) => {\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n      }\n      this.setCursor(hoverCursor);\n    } else {\n      const control = corner.control;\n      this.setCursor(control.cursorStyleHandler(e, control, target));\n    }\n  }\n\n  /**\n   * ## Handles multiple selection\n   * - toggles `target` selection (selects/deselects `target` if it isn't/is selected respectively)\n   * - sets the active object in case it is not set or in case there is a single active object left under active selection.\n   * ---\n   * - If the active object is the active selection we add/remove `target` from it\n   * - If not, add the active object and `target` to the active selection and make it the active object.\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target target of event to select/deselect\n   * @returns true if grouping occurred\n   */\n  protected handleMultiSelection(e: TPointerEvent, target?: FabricObject) {\n    const activeObject = this._activeObject;\n    const isAS = isActiveSelection(activeObject);\n    if (\n      // check if an active object exists on canvas and if the user is pressing the `selectionKey` while canvas supports multi selection.\n      !!activeObject &&\n      this._isSelectionKeyPressed(e) &&\n      this.selection &&\n      // on top of that the user also has to hit a target that is selectable.\n      !!target &&\n      target.selectable &&\n      // group target and active object only if they are different objects\n      // else we try to find a subtarget of `ActiveSelection`\n      (activeObject !== target || isAS) &&\n      //  make sure `activeObject` and `target` aren't ancestors of each other in case `activeObject` is not `ActiveSelection`\n      // if it is then we want to remove `target` from it\n      (isAS ||\n        (!target.isDescendantOf(activeObject) &&\n          !activeObject.isDescendantOf(target))) &&\n      //  target accepts selection\n      !target.onSelect({ e }) &&\n      // make sure we are not on top of a control\n      !activeObject.getActiveControl()\n    ) {\n      if (isAS) {\n        const prevActiveObjects = activeObject.getObjects();\n        if (target === activeObject) {\n          const pointer = this.getViewportPoint(e);\n          target =\n            // first search active objects for a target to remove\n            this.searchPossibleTargets(prevActiveObjects, pointer) ||\n            //  if not found, search under active selection for a target to add\n            // `prevActiveObjects` will be searched but we already know they will not be found\n            this.searchPossibleTargets(this._objects, pointer);\n          // if nothing is found bail out\n          if (!target || !target.selectable) {\n            return false;\n          }\n        }\n        if (target.group === activeObject) {\n          // `target` is part of active selection => remove it\n          activeObject.remove(target);\n          this._hoveredTarget = target;\n          this._hoveredTargets = [...this.targets];\n          // if after removing an object we are left with one only...\n          if (activeObject.size() === 1) {\n            // activate last remaining object\n            // deselecting the active selection will remove the remaining object from it\n            this._setActiveObject(activeObject.item(0), e);\n          }\n        } else {\n          // `target` isn't part of active selection => add it\n          activeObject.multiSelectAdd(target);\n          this._hoveredTarget = activeObject;\n          this._hoveredTargets = [...this.targets];\n        }\n        this._fireSelectionEvents(prevActiveObjects, e);\n      } else {\n        (activeObject as IText).isEditing &&\n          (activeObject as IText).exitEditing();\n        // add the active object and the target to the active selection and set it as the active object\n        const klass =\n          classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n        const newActiveSelection = new klass([], {\n          /**\n           * it is crucial to pass the canvas ref before calling {@link ActiveSelection#multiSelectAdd}\n           * since it uses {@link FabricObject#isInFrontOf} which relies on the canvas ref\n           */\n          canvas: this,\n        });\n        newActiveSelection.multiSelectAdd(activeObject, target);\n        this._hoveredTarget = newActiveSelection;\n        // ISSUE 4115: should we consider subTargets here?\n        // this._hoveredTargets = [];\n        // this._hoveredTargets = this.targets.concat();\n        this._setActiveObject(newActiveSelection, e);\n        this._fireSelectionEvents([activeObject], e);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * ## Handles selection\n   * - selects objects that are contained in (and possibly intersecting) the selection bounding box\n   * - sets the active object\n   * ---\n   * runs on mouse up after a mouse move\n   */\n  protected handleSelection(e: TPointerEvent) {\n    if (!this.selection || !this._groupSelector) {\n      return false;\n    }\n    const { x, y, deltaX, deltaY } = this._groupSelector,\n      point1 = new Point(x, y),\n      point2 = point1.add(new Point(deltaX, deltaY)),\n      tl = point1.min(point2),\n      br = point1.max(point2),\n      size = br.subtract(tl);\n\n    const collectedObjects = this.collectObjects(\n      {\n        left: tl.x,\n        top: tl.y,\n        width: size.x,\n        height: size.y,\n      },\n      { includeIntersecting: !this.selectionFullyContained },\n    ) as FabricObject[];\n\n    const objects =\n      // though this method runs only after mouse move the pointer could do a mouse up on the same position as mouse down\n      // should it be handled as is?\n      point1.eq(point2)\n        ? collectedObjects[0]\n          ? [collectedObjects[0]]\n          : []\n        : collectedObjects.length > 1\n          ? collectedObjects\n              .filter((object) => !object.onSelect({ e }))\n              .reverse()\n          : // `setActiveObject` will call `onSelect(collectedObjects[0])` in this case\n            collectedObjects;\n\n    // set active object\n    if (objects.length === 1) {\n      // set as active object\n      this.setActiveObject(objects[0], e);\n    } else if (objects.length > 1) {\n      // add to active selection and make it the active object\n      const klass =\n        classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n      this.setActiveObject(new klass(objects, { canvas: this }), e);\n    }\n\n    // cleanup\n    this._groupSelector = null;\n    return true;\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  clear() {\n    this.textEditingManager.clear();\n    super.clear();\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  destroy() {\n    this.removeListeners();\n    this.textEditingManager.dispose();\n    super.destroy();\n  }\n}\n","export const linearDefaultCoords = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n};\n\nexport const radialDefaultCoords = {\n  ...linearDefaultCoords,\n  r1: 0,\n  r2: 0,\n};\n","/**\n *\n * @param value value to check if NaN\n * @param [valueIfNaN]\n * @returns `fallback` is `value is NaN\n */\nexport const ifNaN = (value: number, valueIfNaN?: number) => {\n  return isNaN(value) && typeof valueIfNaN === 'number' ? valueIfNaN : value;\n};\n","import { ifNaN } from '../util/internals/ifNaN';\nimport { capValue } from '../util/misc/capValue';\n\nconst RE_PERCENT = /^(\\d+\\.\\d+)%|(\\d+)%$/;\n\nexport function isPercent(value: string | null) {\n  return value && RE_PERCENT.test(value);\n}\n\n/**\n *\n * @param value\n * @param valueIfNaN\n * @returns ∈ [0, 1]\n */\nexport function parsePercent(\n  value: string | number | null | undefined,\n  valueIfNaN?: number,\n) {\n  const parsed =\n    typeof value === 'number'\n      ? value\n      : typeof value === 'string'\n        ? parseFloat(value) / (isPercent(value) ? 100 : 1)\n        : NaN;\n  return capValue(0, ifNaN(parsed, valueIfNaN), 1);\n}\n","import { Color } from '../../color/Color';\nimport { parsePercent } from '../../parser/percent';\nimport { ifNaN } from '../../util/internals/ifNaN';\nimport type { ColorStop } from '../typedefs';\n\nconst RE_KEY_VALUE_PAIRS = /\\s*;\\s*/;\nconst RE_KEY_VALUE = /\\s*:\\s*/;\n\nfunction parseColorStop(el: SVGStopElement, multiplier: number) {\n  let colorValue, opacity;\n  const style = el.getAttribute('style');\n  if (style) {\n    const keyValuePairs = style.split(RE_KEY_VALUE_PAIRS);\n\n    if (keyValuePairs[keyValuePairs.length - 1] === '') {\n      keyValuePairs.pop();\n    }\n\n    for (let i = keyValuePairs.length; i--; ) {\n      const [key, value] = keyValuePairs[i]\n        .split(RE_KEY_VALUE)\n        .map((s) => s.trim());\n      if (key === 'stop-color') {\n        colorValue = value;\n      } else if (key === 'stop-opacity') {\n        opacity = value;\n      }\n    }\n  }\n\n  const color = new Color(\n    colorValue || el.getAttribute('stop-color') || 'rgb(0,0,0)',\n  );\n\n  return {\n    offset: parsePercent(el.getAttribute('offset'), 0),\n    color: color.toRgb(),\n    opacity:\n      ifNaN(parseFloat(opacity || el.getAttribute('stop-opacity') || ''), 1) *\n      color.getAlpha() *\n      multiplier,\n  };\n}\n\nexport function parseColorStops(\n  el: SVGGradientElement,\n  opacityAttr: string | null,\n) {\n  const colorStops: ColorStop[] = [],\n    colorStopEls = el.getElementsByTagName('stop'),\n    multiplier = parsePercent(opacityAttr, 1);\n  for (let i = colorStopEls.length; i--; ) {\n    colorStops.push(parseColorStop(colorStopEls[i], multiplier));\n  }\n  return colorStops;\n}\n","import type { GradientType, GradientUnits } from '../typedefs';\n\nexport function parseType(el: SVGGradientElement): GradientType {\n  return el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT'\n    ? 'linear'\n    : 'radial';\n}\n\nexport function parseGradientUnits(el: SVGGradientElement): GradientUnits {\n  return el.getAttribute('gradientUnits') === 'userSpaceOnUse'\n    ? 'pixels'\n    : 'percentage';\n}\n","import { isPercent } from '../../parser/percent';\nimport type { TSize } from '../../typedefs';\nimport type { GradientCoords, GradientType, GradientUnits } from '../typedefs';\nimport { parseGradientUnits, parseType } from './misc';\n\nfunction convertPercentUnitsToValues<\n  T extends GradientType,\n  K extends keyof GradientCoords<T>,\n>(\n  valuesToConvert: Record<K, string | number>,\n  { width, height, gradientUnits }: TSize & { gradientUnits: GradientUnits },\n) {\n  let finalValue;\n  return (Object.keys(valuesToConvert) as K[]).reduce(\n    (acc, prop) => {\n      const propValue = valuesToConvert[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      } else if (propValue === '-Infinity') {\n        finalValue = 0;\n      } else {\n        finalValue =\n          typeof propValue === 'string' ? parseFloat(propValue) : propValue;\n        if (typeof propValue === 'string' && isPercent(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= height;\n            }\n          }\n        }\n      }\n      acc[prop] = finalValue;\n      return acc;\n    },\n    {} as Record<K, number>,\n  );\n}\n\nfunction getValue(el: SVGGradientElement, key: string) {\n  return el.getAttribute(key);\n}\n\nexport function parseLinearCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'x1') || 0,\n    y1: getValue(el, 'y1') || 0,\n    x2: getValue(el, 'x2') || '100%',\n    y2: getValue(el, 'y2') || 0,\n  };\n}\n\nexport function parseRadialCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'fx') || getValue(el, 'cx') || '50%',\n    y1: getValue(el, 'fy') || getValue(el, 'cy') || '50%',\n    r1: 0,\n    x2: getValue(el, 'cx') || '50%',\n    y2: getValue(el, 'cy') || '50%',\n    r2: getValue(el, 'r') || '50%',\n  };\n}\n\nexport function parseCoords(el: SVGGradientElement, size: TSize) {\n  return convertPercentUnitsToValues(\n    parseType(el) === 'linear' ? parseLinearCoords(el) : parseRadialCoords(el),\n    {\n      ...size,\n      gradientUnits: parseGradientUnits(el),\n    },\n  );\n}\n","import { Color } from '../color/Color';\nimport { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgExport';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear',\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor(options: GradientOptions<T>) {\n    const {\n      type = 'linear' as T,\n      gradientUnits = 'pixels',\n      coords = {},\n      colorStops = [],\n      offsetX = 0,\n      offsetY = 0,\n      gradientTransform,\n      id,\n    } = options || {};\n    Object.assign(this, {\n      type,\n      gradientUnits,\n      coords: {\n        ...(type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n        ...coords,\n      },\n      colorStops,\n      offsetX,\n      offsetY,\n      gradientTransform,\n      id: id ? `${id}_${uid()}` : uid(),\n    });\n  }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      const color = new Color(colorStops[position]);\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: color.toRgb(),\n        opacity: color.getAlpha(),\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: { ...this.coords },\n      colorStops: this.colorStops.map((colorStop) => ({ ...colorStop })),\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    {\n      additionalTransform: preTransform,\n    }: { additionalTransform?: string } = {},\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n',\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n',\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset, opacity }) => {\n      markup.push(\n        '<stop ',\n        'offset=\"',\n        offset * 100 + '%',\n        '\" style=\"stop-color:',\n        color,\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\n        '\"/>\\n',\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n',\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const { x1, y1, x2, y2, r1, r2 } = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(x1, y1, x2, y2)\n        : ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n\n    this.colorStops.forEach(({ color, opacity, offset }) => {\n      gradient.addColorStop(\n        offset,\n        typeof opacity !== 'undefined'\n          ? new Color(color).setAlpha(opacity).toRgba()\n          : color,\n      );\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) {\n    const { colorStops, gradientTransform } = options;\n    return new this({\n      ...options,\n      colorStops: colorStops\n        ? colorStops.map((colorStop) => ({ ...colorStop }))\n        : undefined,\n      gradientTransform: gradientTransform ? [...gradientTransform] : undefined,\n    });\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions,\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || '',\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n","import { config } from '../config';\nimport type { Abortable, TCrossOrigin, TMat2D, TSize } from '../typedefs';\nimport { ifNaN } from '../util/internals/ifNaN';\nimport { uid } from '../util/internals/uid';\nimport { loadImage } from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { toFixed } from '../util/misc/toFixed';\nimport { classRegistry } from '../ClassRegistry';\nimport type {\n  PatternRepeat,\n  PatternOptions,\n  SerializedPatternOptions,\n} from './types';\nimport { log } from '../util/internals/console';\n\n/**\n * @see {@link http://fabricjs.com/patterns demo}\n * @see {@link http://fabricjs.com/dynamic-patterns demo}\n */\nexport class Pattern {\n  static type = 'Pattern';\n\n  /**\n   * Legacy identifier of the class. Prefer using this.constructor.type 'Pattern'\n   * or utils like isPattern, or instance of to indentify a pattern in your code.\n   * Will be removed in future versiones\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    return 'pattern';\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * @type PatternRepeat\n   * @defaults\n   */\n  repeat: PatternRepeat = 'repeat';\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX = 0;\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY = 0;\n\n  /**\n   * @type TCrossOrigin\n   * @default\n   */\n  crossOrigin: TCrossOrigin = '';\n\n  /**\n   * transform matrix to change the pattern, imported from svgs.\n   * @todo verify if using the identity matrix as default makes the rest of the code more easy\n   * @type Array\n   * @default\n   */\n  declare patternTransform?: TMat2D;\n\n  /**\n   * The actual pixel source of the pattern\n   */\n  declare source: CanvasImageSource;\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number\n   */\n  declare readonly id: number;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @param {option.source} [source] the pattern source, eventually empty or a drawable\n   */\n  constructor(options: PatternOptions) {\n    this.id = uid();\n    Object.assign(this, options);\n  }\n\n  /**\n   * @returns true if {@link source} is an <img> element\n   */\n  isImageSource(): this is { source: HTMLImageElement } {\n    return (\n      !!this.source && typeof (this.source as HTMLImageElement).src === 'string'\n    );\n  }\n\n  /**\n   * @returns true if {@link source} is a <canvas> element\n   */\n  isCanvasSource(): this is { source: HTMLCanvasElement } {\n    return !!this.source && !!(this.source as HTMLCanvasElement).toDataURL;\n  }\n\n  sourceToString(): string {\n    return this.isImageSource()\n      ? this.source.src\n      : this.isCanvasSource()\n        ? this.source.toDataURL()\n        : '';\n  }\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasPattern | null {\n    if (\n      // if the image failed to load, return, and allow rest to continue loading\n      !this.source ||\n      // if an image\n      (this.isImageSource() &&\n        (!this.source.complete ||\n          this.source.naturalWidth === 0 ||\n          this.source.naturalHeight === 0))\n    ) {\n      return null;\n    }\n\n    return ctx.createPattern(this.source, this.repeat)!;\n  }\n\n  /**\n   * Returns object representation of a pattern\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object} Object representation of a pattern instance\n   */\n  toObject(propertiesToInclude: string[] = []): Record<string, any> {\n    const { repeat, crossOrigin } = this;\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: 'pattern',\n      source: this.sourceToString(),\n      repeat,\n      crossOrigin,\n      offsetX: toFixed(this.offsetX, config.NUM_FRACTION_DIGITS),\n      offsetY: toFixed(this.offsetY, config.NUM_FRACTION_DIGITS),\n      patternTransform: this.patternTransform\n        ? [...this.patternTransform]\n        : null,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   */\n  toSVG({ width, height }: TSize): string {\n    const { source: patternSource, repeat, id } = this,\n      patternOffsetX = ifNaN(this.offsetX / width, 0),\n      patternOffsetY = ifNaN(this.offsetY / height, 0),\n      patternWidth =\n        repeat === 'repeat-y' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetX || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).width as number) / width,\n              0,\n            ),\n      patternHeight =\n        repeat === 'repeat-x' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetY || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).height as number) / height,\n              0,\n            );\n\n    return [\n      `<pattern id=\"SVGID_${id}\" x=\"${patternOffsetX}\" y=\"${patternOffsetY}\" width=\"${patternWidth}\" height=\"${patternHeight}\">`,\n      `<image x=\"0\" y=\"0\" width=\"${\n        (patternSource as HTMLImageElement).width\n      }\" height=\"${\n        (patternSource as HTMLImageElement).height\n      }\" xlink:href=\"${this.sourceToString()}\"></image>`,\n      `</pattern>`,\n      '',\n    ].join('\\n');\n  }\n  /* _TO_SVG_END_ */\n\n  static async fromObject(\n    {\n      type,\n      source,\n      patternTransform,\n      ...otherOptions\n    }: SerializedPatternOptions,\n    options?: Abortable,\n  ): Promise<Pattern> {\n    const img = await loadImage(source, {\n      ...options,\n      crossOrigin: otherOptions.crossOrigin,\n    });\n    return new this({\n      ...otherOptions,\n      patternTransform:\n        patternTransform && (patternTransform.slice(0) as TMat2D),\n      source: img,\n    });\n  }\n}\n\nclassRegistry.setClass(Pattern);\n// kept for compatibility reason\nclassRegistry.setClass(Pattern, 'pattern');\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport type { Shadow } from '../Shadow';\nimport type { Canvas } from '../canvas/Canvas';\nimport type { TBrushEventData } from './typedefs';\n\n/**\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nexport abstract class BaseBrush {\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color = 'rgb(0, 0, 0)';\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width = 1;\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type Shadow\n   * @default\n   */\n  shadow: Shadow | null = null;\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: CanvasLineCap = 'round';\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: CanvasLineJoin = 'round';\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit = 10;\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: number[] | null = null;\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n   */\n\n  limitedToCanvasSize = false;\n\n  /**\n   * @todo add type\n   */\n  declare canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  abstract _render(): void;\n  abstract onMouseDown(pointer: Point, ev: TBrushEventData): void;\n  abstract onMouseMove(pointer: Point, ev: TBrushEventData): void;\n  /**\n   * @returns true if brush should continue blocking interaction\n   */\n  abstract onMouseUp(ev: TBrushEventData): boolean | void;\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  }\n\n  /**\n   * Sets the transformation on given context\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @private\n   */\n  protected _saveAndTransform(ctx: CanvasRenderingContext2D) {\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n  protected needsFullRender() {\n    const color = new Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  }\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  protected _setShadow() {\n    if (!this.shadow || !this.canvas) {\n      return;\n    }\n\n    const canvas = this.canvas,\n      shadow = this.shadow,\n      ctx = canvas.contextTop,\n      zoom = canvas.getZoom() * canvas.getRetinaScaling();\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  }\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  protected _resetShadow() {\n    const ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n   */\n  protected _isOutSideCanvas(pointer: Point) {\n    return (\n      pointer.x < 0 ||\n      pointer.x > this.canvas.getWidth() ||\n      pointer.y < 0 ||\n      pointer.y > this.canvas.getHeight()\n    );\n  }\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { toFixed } from '../util/misc/toFixed';\nimport {\n  getBoundsOfCurve,\n  joinPath,\n  makePathSimpler,\n  parsePath,\n} from '../util/path';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type {\n  TComplexPathData,\n  TPathSegmentInfo,\n  TSimplePathData,\n} from '../util/path/typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type {\n  TBBox,\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n} from '../typedefs';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\ninterface UniquePathProps {\n  sourcePath?: string;\n  path?: TSimplePathData;\n}\n\nexport interface SerializedPathProps\n  extends SerializedObjectProps,\n    UniquePathProps {}\n\nexport interface PathProps extends FabricObjectProps, UniquePathProps {}\n\nexport interface IPathBBox extends TBBox {\n  left: number;\n  top: number;\n  pathOffset: Point;\n}\n\nexport class Path<\n  Props extends TOptions<PathProps> = Partial<PathProps>,\n  SProps extends SerializedPathProps = SerializedPathProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Array of path points\n   * @type Array\n   * @default\n   */\n  declare path: TSimplePathData;\n\n  declare pathOffset: Point;\n\n  declare sourcePath?: string;\n\n  declare segmentsInfo?: TPathSegmentInfo[];\n\n  static type = 'Path';\n\n  static cacheProperties = [...cacheProperties, 'path', 'fillRule'];\n\n  /**\n   * Constructor\n   * @param {TComplexPathData} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {Partial<PathProps>} [options] Options object\n   * @return {Path} thisArg\n   */\n  constructor(\n    path: TComplexPathData | string,\n    // todo: evaluate this spread here\n    { path: _, left, top, ...options }: Partial<Props> = {},\n  ) {\n    super();\n    Object.assign(this, Path.ownDefaults);\n    this.setOptions(options);\n    this._setPath(path || [], true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {TComplexPathData | string} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {boolean} [adjustPosition] pass true to reposition the object according to the bounding box\n   * @returns {Point} top left position of the bounding box, useful for complementary positioning\n   */\n  _setPath(path: TComplexPathData | string, adjustPosition?: boolean) {\n    this.path = makePathSimpler(Array.isArray(path) ? path : parsePath(path));\n    this.setBoundingBox(adjustPosition);\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = this._calcBoundsFromPath();\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _renderPathCommands(ctx: CanvasRenderingContext2D) {\n    const l = -this.pathOffset.x,\n      t = -this.pathOffset.y;\n\n    ctx.beginPath();\n\n    for (const command of this.path) {\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          ctx.lineTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'M': // moveTo, absolute\n          ctx.moveTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          ctx.bezierCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n            command[5] + l,\n            command[6] + t,\n          );\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          ctx.quadraticCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n          );\n          break;\n\n        case 'Z':\n          ctx.closePath();\n          break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    this._renderPathCommands(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {string} string representation of an instance\n   */\n  toString() {\n    return `#<Path (${this.complexity()}): { \"top\": ${this.top}, \"left\": ${\n      this.left\n    } }>`;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      path: this.path.map((pathCmd) => pathCmd.slice()),\n    };\n  }\n\n  /**\n   * Returns dataless object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const o = this.toObject<T, K>(propertiesToInclude);\n    if (this.sourcePath) {\n      delete o.path;\n      o.sourcePath = this.sourcePath;\n    }\n    return o;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const path = joinPath(this.path, config.NUM_FRACTION_DIGITS);\n    return [\n      '<path ',\n      'COMMON_PARTS',\n      `d=\"${path}\" stroke-linecap=\"round\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @return the path command's translate transform attribute\n   */\n  _getOffsetTransform() {\n    const digits = config.NUM_FRACTION_DIGITS;\n    return ` translate(${toFixed(-this.pathOffset.x, digits)}, ${toFixed(\n      -this.pathOffset.y,\n      digits,\n    )})`;\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver,\n        additionalTransform: additionalTransform,\n      })\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      additionalTransform: additionalTransform,\n    });\n  }\n\n  /**\n   * Returns number representation of an instance complexity\n   * @return {number} complexity of this instance\n   */\n  complexity() {\n    return this.path.length;\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { width, height, pathOffset } = this._calcDimensions();\n    this.set({ width, height, pathOffset });\n    // using pathOffset because it match the use case.\n    // if pathOffset change here we need to use left + width/2 , top + height/2\n    adjustPosition && this.setPositionByOrigin(pathOffset, CENTER, CENTER);\n  }\n\n  _calcBoundsFromPath(): TBBox {\n    const bounds: XY[] = [];\n    let subpathStartX = 0,\n      subpathStartY = 0,\n      x = 0, // current x\n      y = 0; // current y\n\n    for (const command of this.path) {\n      // current instruction\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          x = command[1];\n          y = command[2];\n          bounds.push({ x: subpathStartX, y: subpathStartY }, { x, y });\n          break;\n\n        case 'M': // moveTo, absolute\n          x = command[1];\n          y = command[2];\n          subpathStartX = x;\n          subpathStartY = y;\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n              command[5],\n              command[6],\n            ),\n          );\n          x = command[5];\n          y = command[6];\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n            ),\n          );\n          x = command[3];\n          y = command[4];\n          break;\n\n        case 'Z':\n          x = subpathStartX;\n          y = subpathStartY;\n          break;\n      }\n    }\n    return makeBoundingBoxFromPoints(bounds);\n  }\n\n  /**\n   * @private\n   */\n  _calcDimensions(): IPathBBox {\n    const bbox = this._calcBoundsFromPath();\n\n    return {\n      ...bbox,\n      pathOffset: new Point(\n        bbox.left + bbox.width / 2,\n        bbox.top + bbox.height / 2,\n      ),\n    };\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Path.fromElement`)\n   * @static\n   * @memberOf Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'd'];\n\n  /**\n   * Creates an instance of Path from an object\n   * @static\n   * @memberOf Path\n   * @param {Object} object\n   * @returns {Promise<Path>}\n   */\n  static fromObject<T extends TOptions<SerializedPathProps>>(object: T) {\n    return this._fromObject<Path>(object, {\n      extraParam: 'path',\n    });\n  }\n\n  /**\n   * Creates an instance of Path from an SVG <path> element\n   * @static\n   * @memberOf Path\n   * @param {HTMLElement} element to parse\n   * @param {Partial<PathProps>} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Partial<PathProps>,\n    cssRules?: CSSRules,\n  ) {\n    const { d, ...parsedAttributes } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return new this(d, {\n      ...parsedAttributes,\n      ...options,\n      // we pass undefined to instruct the constructor to position the object using the bbox\n      left: undefined,\n      top: undefined,\n    });\n  }\n}\n\nclassRegistry.setClass(Path);\nclassRegistry.setSVGClass(Path);\n\n/* _FROM_SVG_START_ */\n","import type { ModifierKey, TEvent } from '../EventTypeDefs';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Path } from '../shapes/Path';\nimport { getSmoothPathFromPoints, joinPath } from '../util/path';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\n/**\n * @private\n * @param {TSimplePathData} pathData SVG path commands\n * @returns {boolean}\n */\nfunction isEmptySVGPath(pathData: TSimplePathData): boolean {\n  return joinPath(pathData) === 'M 0 0 Q 0 0 0 0 L 0 0';\n}\n\nexport class PencilBrush extends BaseBrush {\n  /**\n   * Discard points that are less than `decimate` pixel distant from each other\n   * @type Number\n   * @default 0.4\n   */\n  decimate = 0.4;\n\n  /**\n   * Draws a straight line between last recorded point to current pointer\n   * Used for `shift` functionality\n   *\n   * @type boolean\n   * @default false\n   */\n  drawStraightLine = false;\n\n  /**\n   * The event modifier key that makes the brush draw a straight line.\n   * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n   * @type {ModifierKey | undefined | null}\n   */\n  straightLineKey: ModifierKey | undefined | null = 'shiftKey';\n\n  protected declare _points: Point[];\n  protected declare _hasStraightLine: boolean;\n  protected declare oldEnd?: Point;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this._points = [];\n    this._hasStraightLine = false;\n  }\n\n  needsFullRender() {\n    return super.needsFullRender() || this._hasStraightLine;\n  }\n\n  static drawSegment(ctx: CanvasRenderingContext2D, p1: Point, p2: Point) {\n    const midPoint = p1.midPointFrom(p2);\n    ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n    return midPoint;\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    this._prepareForDrawing(pointer);\n    // capture coordinates immediately\n    // this allows to draw dots (when movement never occurs)\n    this._addPoint(pointer);\n    this._render();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this._addPoint(pointer) && this._points.length > 1) {\n      if (this.needsFullRender()) {\n        // redraw curve\n        // clear top canvas\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._render();\n      } else {\n        const points = this._points,\n          length = points.length,\n          ctx = this.canvas.contextTop;\n        // draw the curve update\n        this._saveAndTransform(ctx);\n        if (this.oldEnd) {\n          ctx.beginPath();\n          ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n        }\n        this.oldEnd = PencilBrush.drawSegment(\n          ctx,\n          points[length - 2],\n          points[length - 1],\n        );\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp({ e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return true;\n    }\n    this.drawStraightLine = false;\n    this.oldEnd = undefined;\n    this._finalizeAndAddPath();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Point} pointer Actual mouse position related to the canvas.\n   */\n  _prepareForDrawing(pointer: Point) {\n    this._reset();\n    this._addPoint(pointer);\n    this.canvas.contextTop.moveTo(pointer.x, pointer.y);\n  }\n\n  /**\n   * @private\n   * @param {Point} point Point to be added to points array\n   */\n  _addPoint(point: Point) {\n    if (\n      this._points.length > 1 &&\n      point.eq(this._points[this._points.length - 1])\n    ) {\n      return false;\n    }\n    if (this.drawStraightLine && this._points.length > 1) {\n      this._hasStraightLine = true;\n      this._points.pop();\n    }\n    this._points.push(point);\n    return true;\n  }\n\n  /**\n   * Clear points array and set contextTop canvas style.\n   * @private\n   */\n  _reset() {\n    this._points = [];\n    this._setBrushStyles(this.canvas.contextTop);\n    this._setShadow();\n    this._hasStraightLine = false;\n  }\n\n  /**\n   * Draw a smooth path on the topCanvas using quadraticCurveTo\n   * @private\n   * @param {CanvasRenderingContext2D} [ctx]\n   */\n  _render(ctx: CanvasRenderingContext2D = this.canvas.contextTop) {\n    let p1 = this._points[0],\n      p2 = this._points[1];\n    this._saveAndTransform(ctx);\n    ctx.beginPath();\n    //if we only have 2 points in the path and they are the same\n    //it means that the user only clicked the canvas without moving the mouse\n    //then we should be drawing a dot. A path isn't drawn between two identical dots\n    //that's why we set them apart a bit\n    if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n      const width = this.width / 1000;\n      p1.x -= width;\n      p2.x += width;\n    }\n    ctx.moveTo(p1.x, p1.y);\n\n    for (let i = 1; i < this._points.length; i++) {\n      // we pick the point between pi + 1 & pi + 2 as the\n      // end point and p1 as our control point.\n      PencilBrush.drawSegment(ctx, p1, p2);\n      p1 = this._points[i];\n      p2 = this._points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    ctx.lineTo(p1.x, p1.y);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * Converts points to SVG path\n   * @param {Point[]} points Array of points\n   * @return {TSimplePathData} SVG path commands\n   */\n  convertPointsToSVGPath(points: Point[]): TSimplePathData {\n    const correction = this.width / 1000;\n    return getSmoothPathFromPoints(points, correction);\n  }\n\n  /**\n   * Creates a Path object to add on canvas\n   * @param {TSimplePathData} pathData Path data\n   * @return {Path} Path to add on canvas\n   */\n  createPath(pathData: TSimplePathData): Path {\n    const path = new Path(pathData, {\n      fill: null,\n      stroke: this.color,\n      strokeWidth: this.width,\n      strokeLineCap: this.strokeLineCap,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeDashArray: this.strokeDashArray,\n    });\n    if (this.shadow) {\n      this.shadow.affectStroke = true;\n      path.shadow = new Shadow(this.shadow);\n    }\n\n    return path;\n  }\n\n  /**\n   * Decimate points array with the decimate value\n   */\n  decimatePoints(points: Point[], distance: number) {\n    if (points.length <= 2) {\n      return points;\n    }\n    let lastPoint = points[0],\n      cDistance;\n    const zoom = this.canvas.getZoom(),\n      adjustedDistance = Math.pow(distance / zoom, 2),\n      l = points.length - 1,\n      newPoints = [lastPoint];\n    for (let i = 1; i < l - 1; i++) {\n      cDistance =\n        Math.pow(lastPoint.x - points[i].x, 2) +\n        Math.pow(lastPoint.y - points[i].y, 2);\n      if (cDistance >= adjustedDistance) {\n        lastPoint = points[i];\n        newPoints.push(lastPoint);\n      }\n    }\n    // Add the last point from the original line to the end of the array.\n    // This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n    newPoints.push(points[l]);\n    return newPoints;\n  }\n\n  /**\n   * On mouseup after drawing the path on contextTop canvas\n   * we use the points captured to create an new Path object\n   * and add it to the canvas.\n   */\n  _finalizeAndAddPath() {\n    const ctx = this.canvas.contextTop;\n    ctx.closePath();\n    if (this.decimate) {\n      this._points = this.decimatePoints(this._points, this.decimate);\n    }\n    const pathData = this.convertPointsToSVGPath(this._points);\n    if (isEmptySVGPath(pathData)) {\n      // do not create 0 width/height paths, as they are\n      // rendered inconsistently across browsers\n      // Firefox 4, for example, renders a dot,\n      // whereas Chrome 10 renders nothing\n      this.canvas.requestRenderAll();\n      return;\n    }\n\n    const path = this.createPath(pathData);\n    this.canvas.clearContext(this.canvas.contextTop);\n    this.canvas.fire('before:path:created', { path: path });\n    this.canvas.add(path);\n    this.canvas.requestRenderAll();\n    path.setCoords();\n    this._resetShadow();\n\n    // fire event 'path' created\n    this.canvas.fire('path:created', { path: path });\n  }\n}\n","import type { ObjectEvents } from '../EventTypeDefs';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { cos } from '../util/misc/cos';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { sin } from '../util/misc/sin';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { CSSRules } from '../parser/typedefs';\nimport { SCALE_X, SCALE_Y } from '../constants';\n\ninterface UniqueCircleProps {\n  /**\n   * Radius of this circle\n   * @type Number\n   * @default 0\n   */\n  radius: number;\n\n  /**\n   * Angle for the start of the circle, in degrees.\n   * @type TDegree 0 - 359\n   * @default 0\n   */\n  startAngle: number;\n\n  /**\n   * Angle for the end of the circle, in degrees\n   * @type TDegree 1 - 360\n   * @default 360\n   */\n  endAngle: number;\n\n  /**\n   * Orientation for the direction of the circle.\n   * Setting to true will switch the arc of the circle to traverse from startAngle to endAngle in a counter-clockwise direction.\n   * Note: this will only change how the circle is drawn, and does not affect rotational transformation.\n   * @default false\n   */\n  counterClockwise: boolean;\n}\n\nexport interface SerializedCircleProps\n  extends SerializedObjectProps,\n    UniqueCircleProps {}\n\nexport interface CircleProps extends FabricObjectProps, UniqueCircleProps {}\n\nconst CIRCLE_PROPS = [\n  'radius',\n  'startAngle',\n  'endAngle',\n  'counterClockwise',\n] as const;\n\nexport const circleDefaultValues: Partial<TClassProperties<Circle>> = {\n  radius: 0,\n  startAngle: 0,\n  endAngle: 360,\n  counterClockwise: false,\n};\n\nexport class Circle<\n    Props extends TOptions<CircleProps> = Partial<CircleProps>,\n    SProps extends SerializedCircleProps = SerializedCircleProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueCircleProps\n{\n  declare radius: number;\n  declare startAngle: number;\n  declare endAngle: number;\n  declare counterClockwise: boolean;\n\n  static type = 'Circle';\n\n  static cacheProperties = [...cacheProperties, ...CIRCLE_PROPS];\n\n  static ownDefaults = circleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Circle.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Circle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n\n    if (key === 'radius') {\n      this.setRadius(value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(\n      0,\n      0,\n      this.radius,\n      degreesToRadians(this.startAngle),\n      degreesToRadians(this.endAngle),\n      this.counterClockwise,\n    );\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusX(): number {\n    return this.get('radius') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusY(): number {\n    return this.get('radius') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Sets radius of an object (and updates width accordingly)\n   */\n  setRadius(value: number) {\n    this.radius = value;\n    this.set({ width: value * 2, height: value * 2 });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...CIRCLE_PROPS, ...propertiesToInclude]);\n  }\n\n  /* _TO_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    const angle = (this.endAngle - this.startAngle) % 360;\n\n    if (angle === 0) {\n      return [\n        '<circle ',\n        'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'r=\"',\n        `${this.radius}`,\n        '\" />\\n',\n      ];\n    } else {\n      const { radius } = this;\n      const start = degreesToRadians(this.startAngle),\n        end = degreesToRadians(this.endAngle),\n        startX = cos(start) * radius,\n        startY = sin(start) * radius,\n        endX = cos(end) * radius,\n        endY = sin(end) * radius,\n        largeFlag = angle > 180 ? 1 : 0,\n        sweepFlag = this.counterClockwise ? 0 : 1;\n      return [\n        `<path d=\"M ${startX} ${startY} A ${radius} ${radius} 0 ${largeFlag} ${sweepFlag} ${endX} ${endY}\" `,\n        'COMMON_PARTS',\n        ' />\\n',\n      ];\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Circle.fromElement})\n   * @static\n   * @memberOf Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  static ATTRIBUTE_NAMES = ['cx', 'cy', 'r', ...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns {@link Circle} instance from an SVG element\n   * @static\n   * @memberOf Circle\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Partial Circle object to default missing properties on the element.\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ): Promise<Circle> {\n    const {\n      left = 0,\n      top = 0,\n      radius = 0,\n      ...otherParsedAttributes\n    } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    ) as Partial<CircleProps>;\n\n    // this probably requires to be fixed for default origins not being top/left.\n\n    return new this({\n      ...otherParsedAttributes,\n      radius,\n      left: left - radius,\n      top: top - radius,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * @todo how do we declare this??\n   */\n  static fromObject<T extends TOptions<SerializedCircleProps>>(object: T) {\n    return super._fromObject<Circle>(object);\n  }\n}\n\nclassRegistry.setClass(Circle);\nclassRegistry.setSVGClass(Circle);\n","import { Pattern } from '../Pattern';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { Canvas } from '../canvas/Canvas';\nimport { PencilBrush } from './PencilBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\nexport class PatternBrush extends PencilBrush {\n  declare source?: CanvasImageSource;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n  }\n\n  getPatternSrc() {\n    const dotWidth = 20,\n      dotDistance = 5,\n      patternCanvas = createCanvasElement(),\n      patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    if (patternCtx) {\n      patternCtx.fillStyle = this.color;\n      patternCtx.beginPath();\n      patternCtx.arc(\n        dotWidth / 2,\n        dotWidth / 2,\n        dotWidth / 2,\n        0,\n        Math.PI * 2,\n        false,\n      );\n      patternCtx.closePath();\n      patternCtx.fill();\n    }\n    return patternCanvas;\n  }\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern(ctx: CanvasRenderingContext2D) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  }\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    super._setBrushStyles(ctx);\n    const pattern = this.getPattern(ctx);\n    pattern && (ctx.strokeStyle = pattern);\n  }\n\n  /**\n   * Creates path\n   */\n  createPath(pathData: TSimplePathData) {\n    const path = super.createPath(pathData),\n      topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new Pattern({\n      source: this.source || this.getPatternSrc(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y,\n    });\n    return path;\n  }\n}\n","import { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport { Point } from '../Point';\nimport { isFiller } from '../util/typeAssertions';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { makeBoundingBoxFromPoints } from '../util';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\n// @TODO this code is terrible and Line should be a special case of polyline.\n\nconst coordProps = ['x1', 'x2', 'y1', 'y2'] as const;\n\ninterface UniqueLineProps {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\nexport interface SerializedLineProps\n  extends SerializedObjectProps,\n    UniqueLineProps {}\n\nexport class Line<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedLineProps = SerializedLineProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueLineProps\n{\n  /**\n   * x value or first line edge\n   * @type number\n   * @default\n   */\n  declare x1: number;\n\n  /**\n   * y value or first line edge\n   * @type number\n   * @default\n   */\n  declare y1: number;\n\n  /**\n   * x value or second line edge\n   * @type number\n   * @default\n   */\n  declare x2: number;\n\n  /**\n   * y value or second line edge\n   * @type number\n   * @default\n   */\n  declare y2: number;\n\n  static type = 'Line';\n\n  static cacheProperties = [...cacheProperties, ...coordProps];\n  /**\n   * Constructor\n   * @param {Array} [points] Array of points\n   * @param {Object} [options] Options object\n   * @return {Line} thisArg\n   */\n  constructor([x1, y1, x2, y2] = [0, 0, 0, 0], options: Partial<Props> = {}) {\n    super();\n    Object.assign(this, Line.ownDefaults);\n    this.setOptions(options);\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y1 = y1;\n    this.y2 = y2;\n    this._setWidthHeight();\n    const { left, top } = options;\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {Object} [options] Options\n   */\n  _setWidthHeight() {\n    const { x1, y1, x2, y2 } = this;\n    this.width = Math.abs(x2 - x1);\n    this.height = Math.abs(y2 - y1);\n    const { left, top, width, height } = makeBoundingBoxFromPoints([\n      { x: x1, y: y1 },\n      { x: x2, y: y2 },\n    ]);\n    const position = new Point(left + width / 2, top + height / 2);\n    this.setPositionByOrigin(position, CENTER, CENTER);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    if (coordProps.includes(key as keyof UniqueLineProps)) {\n      // this doesn't make sense very much, since setting x1 when top or left\n      // are already set, is just going to show a strange result since the\n      // line will move way more than the developer expect.\n      // in fabric5 it worked only when the line didn't have extra transformations,\n      // in fabric6 too. With extra transform they behave bad in different ways.\n      // This needs probably a good rework or a tutorial if you have to create a dynamic line\n      this._setWidthHeight();\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n\n    const p = this.calcLinePoints();\n    ctx.moveTo(p.x1, p.y1);\n    ctx.lineTo(p.x2, p.y2);\n\n    ctx.lineWidth = this.strokeWidth;\n\n    // TODO: test this\n    // make sure setting \"fill\" changes color of a line\n    // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n    const origStrokeStyle = ctx.strokeStyle;\n    if (isFiller(this.stroke)) {\n      ctx.strokeStyle = this.stroke.toLive(ctx)!;\n    } else {\n      ctx.strokeStyle = this.stroke ?? ctx.fillStyle;\n    }\n    this.stroke && this._renderStroke(ctx);\n    ctx.strokeStyle = origStrokeStyle;\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    return new Point((this.x1 + this.x2) / 2, (this.y1 + this.y2) / 2);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      ...this.calcLinePoints(),\n    };\n  }\n\n  /*\n   * Calculate object dimensions from its properties\n   * @private\n   */\n  _getNonTransformedDimensions(): Point {\n    const dim = super._getNonTransformedDimensions();\n    if (this.strokeLineCap === 'butt') {\n      if (this.width === 0) {\n        dim.y -= this.strokeWidth;\n      }\n      if (this.height === 0) {\n        dim.x -= this.strokeWidth;\n      }\n    }\n    return dim;\n  }\n\n  /**\n   * Recalculates line points given width and height\n   * Those points are simply placed around the center,\n   * This is not useful outside internal render functions and svg output\n   * Is not meant to be for the developer.\n   * @private\n   */\n  calcLinePoints(): UniqueLineProps {\n    const { x1: _x1, x2: _x2, y1: _y1, y2: _y2, width, height } = this;\n    const xMult = _x1 <= _x2 ? -1 : 1,\n      yMult = _y1 <= _y2 ? -1 : 1,\n      x1 = (xMult * width) / 2,\n      y1 = (yMult * height) / 2,\n      x2 = (xMult * -width) / 2,\n      y2 = (yMult * -height) / 2;\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { x1, x2, y1, y2 } = this.calcLinePoints();\n    return [\n      '<line ',\n      'COMMON_PARTS',\n      `x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Line.fromElement})\n   * @static\n   * @memberOf Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(coordProps);\n\n  /**\n   * Returns Line instance from an SVG element\n   * @static\n   * @memberOf Line\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      x1 = 0,\n      y1 = 0,\n      x2 = 0,\n      y2 = 0,\n      ...parsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n    return new this([x1, y1, x2, y2], parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Line instance from an object representation\n   * @static\n   * @memberOf Line\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Line>}\n   */\n  static fromObject<T extends TOptions<SerializedLineProps>>({\n    x1,\n    y1,\n    x2,\n    y2,\n    ...object\n  }: T) {\n    return this._fromObject<Line>(\n      {\n        ...object,\n        points: [x1, y1, x2, y2],\n      },\n      {\n        extraParam: 'points',\n      },\n    );\n  }\n}\n\nclassRegistry.setClass(Line);\nclassRegistry.setSVGClass(Line);\n","import { classRegistry } from '../ClassRegistry';\nimport { FabricObject } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { TClassProperties, TOptions } from '../typedefs';\nimport type { ObjectEvents } from '../EventTypeDefs';\n\nexport const triangleDefaultValues: Partial<TClassProperties<Triangle>> = {\n  width: 100,\n  height: 100,\n};\n\nexport class Triangle<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  static type = 'Triangle';\n\n  static ownDefaults = triangleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...Triangle.ownDefaults };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Triangle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2;\n\n    ctx.beginPath();\n    ctx.moveTo(-widthBy2, heightBy2);\n    ctx.lineTo(0, -heightBy2);\n    ctx.lineTo(widthBy2, heightBy2);\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2,\n      points = `${-widthBy2} ${heightBy2},0 ${-heightBy2},${widthBy2} ${heightBy2}`;\n    return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n  }\n}\n\nclassRegistry.setClass(Triangle);\nclassRegistry.setSVGClass(Triangle);\n","import { SCALE_X, SCALE_Y, twoMathPi } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const ellipseDefaultValues: Partial<TClassProperties<Ellipse>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueEllipseProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedEllipseProps\n  extends SerializedObjectProps,\n    UniqueEllipseProps {}\n\nexport interface EllipseProps extends FabricObjectProps, UniqueEllipseProps {}\n\nconst ELLIPSE_PROPS = ['rx', 'ry'] as const;\n\nexport class Ellipse<\n    Props extends TOptions<EllipseProps> = Partial<EllipseProps>,\n    SProps extends SerializedEllipseProps = SerializedEllipseProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements EllipseProps\n{\n  /**\n   * Horizontal radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Ellipse';\n\n  static cacheProperties = [...cacheProperties, ...ELLIPSE_PROPS];\n\n  static ownDefaults = ellipseDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Ellipse.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Ellipse.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   * @return {Ellipse} thisArg\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    switch (key) {\n      case 'rx':\n        this.rx = value;\n        this.set('width', value * 2);\n        break;\n\n      case 'ry':\n        this.ry = value;\n        this.set('height', value * 2);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRx() {\n    return this.get('rx') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns Vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRy() {\n    return this.get('ry') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...ELLIPSE_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    return [\n      '<ellipse ',\n      'COMMON_PARTS',\n      `cx=\"0\" cy=\"0\" rx=\"${this.rx}\" ry=\"${this.ry}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.save();\n    ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n    ctx.arc(0, 0, this.rx, 0, twoMathPi, false);\n    ctx.restore();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Ellipse.fromElement})\n   * @static\n   * @memberOf Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'cx', 'cy', 'rx', 'ry'];\n\n  /**\n   * Returns {@link Ellipse} instance from an SVG element\n   * @static\n   * @memberOf Ellipse\n   * @param {HTMLElement} element Element to parse\n   * @return {Ellipse}\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    return new this(parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Ellipse);\nclassRegistry.setSVGClass(Ellipse);\n","import type { XY } from '../Point';\n\n/**\n * Parses \"points\" attribute, returning an array of values\n * @static\n * @memberOf fabric\n * @param {String} points points attribute string\n * @return {Array} array of points\n */\nexport function parsePointsAttribute(points: string | null): XY[] {\n  // points attribute is required and must not be empty\n  if (!points) {\n    return [];\n  }\n\n  // replace commas with whitespace and remove bookending whitespace\n  const pointsSplit: string[] = points.replace(/,/g, ' ').trim().split(/\\s+/);\n\n  const parsedPoints = [];\n\n  for (let i = 0; i < pointsSplit.length; i += 2) {\n    parsedPoints.push({\n      x: parseFloat(pointsSplit[i]),\n      y: parseFloat(pointsSplit[i + 1]),\n    });\n  }\n\n  // odd number of points is an error\n  // if (parsedPoints.length % 2 !== 0) {\n  //   return null;\n  // }\n  return parsedPoints;\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { parsePointsAttribute } from '../parser/parsePointsAttribute';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { calcDimensionsMatrix, transformPoint } from '../util/misc/matrix';\nimport { projectStrokeOnPoints } from '../util/misc/projectStroke';\nimport type { TProjectStrokeOnPointsOptions } from '../util/misc/projectStroke/types';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport {\n  CENTER,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const polylineDefaultValues: Partial<TClassProperties<Polyline>> = {\n  /**\n   * @deprecated transient option soon to be removed in favor of a different design\n   */\n  exactBoundingBox: false,\n};\n\nexport interface SerializedPolylineProps extends SerializedObjectProps {\n  points: XY[];\n}\n\nexport class Polyline<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedPolylineProps = SerializedPolylineProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Points array\n   * @type Array\n   * @default\n   */\n  declare points: XY[];\n\n  /**\n   * WARNING: Feature in progress\n   * Calculate the exact bounding box taking in account strokeWidth on acute angles\n   * this will be turned to true by default on fabric 6.0\n   * maybe will be left in as an optimization since calculations may be slow\n   * @deprecated transient option soon to be removed in favor of a different design\n   * @type Boolean\n   * @default false\n   */\n  declare exactBoundingBox: boolean;\n\n  private declare initialized: true | undefined;\n\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polyline';\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Polyline.ownDefaults,\n    };\n  }\n\n  /**\n   * A list of properties that if changed trigger a recalculation of dimensions\n   * @todo check if you really need to recalculate for all cases\n   */\n  static layoutProperties: (keyof Polyline)[] = [\n    SKEW_X,\n    SKEW_Y,\n    'strokeLineCap',\n    'strokeLineJoin',\n    'strokeMiterLimit',\n    'strokeWidth',\n    'strokeUniform',\n    'points',\n  ];\n\n  declare pathOffset: Point;\n\n  declare strokeOffset: Point;\n\n  static cacheProperties = [...cacheProperties, 'points'];\n\n  strokeDiff: Point;\n\n  /**\n   * Constructor\n   * @param {Array} points Array of points (where each point is an object with x and y)\n   * @param {Object} [options] Options object\n   * @return {Polyline} thisArg\n   * @example\n   * var poly = new Polyline([\n   *     { x: 10, y: 10 },\n   *     { x: 50, y: 30 },\n   *     { x: 40, y: 70 },\n   *     { x: 60, y: 50 },\n   *     { x: 100, y: 150 },\n   *     { x: 40, y: 100 }\n   *   ], {\n   *   stroke: 'red',\n   *   left: 100,\n   *   top: 100\n   * });\n   */\n  constructor(points: XY[] = [], options: Props = {} as Props) {\n    super();\n    Object.assign(this, Polyline.ownDefaults);\n    this.setOptions(options);\n    this.points = points;\n    const { left, top } = options;\n    this.initialized = true;\n    this.setBoundingBox(true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  protected isOpen() {\n    return true;\n  }\n\n  private _projectStrokeOnPoints(options: TProjectStrokeOnPointsOptions) {\n    return projectStrokeOnPoints(this.points, options, this.isOpen());\n  }\n\n  /**\n   * Calculate the polygon bounding box\n   * @private\n   */\n  _calcDimensions(options?: Partial<TProjectStrokeOnPointsOptions>) {\n    options = {\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      strokeLineCap: this.strokeLineCap,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeUniform: this.strokeUniform,\n      strokeWidth: this.strokeWidth,\n      ...(options || {}),\n    };\n    const points = this.exactBoundingBox\n      ? this._projectStrokeOnPoints(\n          options as TProjectStrokeOnPointsOptions,\n        ).map((projection) => projection.projectedPoint)\n      : this.points;\n    if (points.length === 0) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        pathOffset: new Point(),\n        strokeOffset: new Point(),\n        strokeDiff: new Point(),\n      };\n    }\n    const bbox = makeBoundingBoxFromPoints(points),\n      // Remove scale effect, since it's applied after\n      matrix = calcDimensionsMatrix({ ...options, scaleX: 1, scaleY: 1 }),\n      bboxNoStroke = makeBoundingBoxFromPoints(\n        this.points.map((p) => transformPoint(p, matrix, true)),\n      ),\n      scale = new Point(this.scaleX, this.scaleY);\n    let offsetX = bbox.left + bbox.width / 2,\n      offsetY = bbox.top + bbox.height / 2;\n    if (this.exactBoundingBox) {\n      offsetX = offsetX - offsetY * Math.tan(degreesToRadians(this.skewX));\n      // Order of those assignments is important.\n      // offsetY relies on offsetX being already changed by the line above\n      offsetY = offsetY - offsetX * Math.tan(degreesToRadians(this.skewY));\n    }\n\n    return {\n      ...bbox,\n      pathOffset: new Point(offsetX, offsetY),\n      strokeOffset: new Point(bboxNoStroke.left, bboxNoStroke.top)\n        .subtract(new Point(bbox.left, bbox.top))\n        .multiply(scale),\n      strokeDiff: new Point(bbox.width, bbox.height)\n        .subtract(new Point(bboxNoStroke.width, bboxNoStroke.height))\n        .multiply(scale),\n    };\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = makeBoundingBoxFromPoints(this.points);\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { left, top, width, height, pathOffset, strokeOffset, strokeDiff } =\n      this._calcDimensions();\n    this.set({ width, height, pathOffset, strokeOffset, strokeDiff });\n    adjustPosition &&\n      this.setPositionByOrigin(\n        new Point(left + width / 2, top + height / 2),\n        CENTER,\n        CENTER,\n      );\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return this.exactBoundingBox;\n  }\n\n  /**\n   * @override stroke is taken in account in size\n   */\n  _getNonTransformedDimensions() {\n    return this.exactBoundingBox\n      ? // TODO: fix this\n        new Point(this.width, this.height)\n      : super._getNonTransformedDimensions();\n  }\n\n  /**\n   * @override stroke and skewing are taken into account when projecting stroke on points,\n   * therefore we don't want the default calculation to account for skewing as well.\n   * Though it is possible to pass `width` and `height` in `options`, doing so is very strange, use with discretion.\n   *\n   * @private\n   */\n  _getTransformedDimensions(options: any = {}) {\n    if (this.exactBoundingBox) {\n      let size: Point;\n      /* When `strokeUniform = true`, any changes to the properties require recalculating the `width` and `height` because\n        the stroke projections are affected.\n        When `strokeUniform = false`, we don't need to recalculate for scale transformations, as the effect of scale on\n        projections follows a linear function (e.g. scaleX of 2 just multiply width by 2)*/\n      if (\n        Object.keys(options).some(\n          (key) =>\n            this.strokeUniform ||\n            (this.constructor as typeof Polyline).layoutProperties.includes(\n              key as keyof TProjectStrokeOnPointsOptions,\n            ),\n        )\n      ) {\n        const { width, height } = this._calcDimensions(options);\n        size = new Point(options.width ?? width, options.height ?? height);\n      } else {\n        size = new Point(\n          options.width ?? this.width,\n          options.height ?? this.height,\n        );\n      }\n      return size.multiply(\n        new Point(options.scaleX || this.scaleX, options.scaleY || this.scaleY),\n      );\n    } else {\n      return super._getTransformedDimensions(options);\n    }\n  }\n\n  /**\n   * Recalculates dimensions when changing skew and scale\n   * @private\n   */\n  _set(key: string, value: any) {\n    const changed = this.initialized && this[key as keyof this] !== value;\n    const output = super._set(key, value);\n    if (\n      this.exactBoundingBox &&\n      changed &&\n      (((key === SCALE_X || key === SCALE_Y) &&\n        this.strokeUniform &&\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          'strokeUniform',\n        )) ||\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          key as keyof Polyline,\n        ))\n    ) {\n      this.setDimensions();\n    }\n    return output;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      points: this.points.map(({ x, y }) => ({ x, y })),\n    };\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const points = [],\n      diffX = this.pathOffset.x,\n      diffY = this.pathOffset.y,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n\n    for (let i = 0, len = this.points.length; i < len; i++) {\n      points.push(\n        toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS),\n        ',',\n        toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS),\n        ' ',\n      );\n    }\n    return [\n      `<${\n        (this.constructor as typeof Polyline).type.toLowerCase() as\n          | 'polyline'\n          | 'polygon'\n      } `,\n      'COMMON_PARTS',\n      `points=\"${points.join('')}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const len = this.points.length,\n      x = this.pathOffset.x,\n      y = this.pathOffset.y;\n\n    if (!len || isNaN(this.points[len - 1].y)) {\n      // do not draw if no points or odd points\n      // NaN comes from parseFloat of a empty string in parser\n      return;\n    }\n    ctx.beginPath();\n    ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n    for (let i = 0; i < len; i++) {\n      const point = this.points[i];\n      ctx.lineTo(point.x - x, point.y - y);\n    }\n    !this.isOpen() && ctx.closePath();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance\n   */\n  complexity(): number {\n    return this.points.length;\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Polyline.fromElement})\n   * @static\n   * @memberOf Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns Polyline instance from an SVG element\n   * @static\n   * @memberOf Polyline\n   * @param {HTMLElement} element Element to parser\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const points = parsePointsAttribute(element.getAttribute('points')),\n      // we omit left and top to instruct the constructor to position the object using the bbox\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      { left, top, ...parsedAttributes } = parseAttributes(\n        element,\n        this.ATTRIBUTE_NAMES,\n        cssRules,\n      );\n    return new this(points, {\n      ...parsedAttributes,\n      ...options,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Polyline instance from an object representation\n   * @static\n   * @memberOf Polyline\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Polyline>}\n   */\n  static fromObject<T extends TOptions<SerializedPolylineProps>>(object: T) {\n    return this._fromObject<Polyline>(object, {\n      extraParam: 'points',\n    });\n  }\n}\n\nclassRegistry.setClass(Polyline);\nclassRegistry.setSVGClass(Polyline);\n","import { classRegistry } from '../ClassRegistry';\nimport { Polyline, polylineDefaultValues } from './Polyline';\n\nexport class Polygon extends Polyline {\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polygon';\n\n  protected isOpen() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Polygon);\nclassRegistry.setSVGClass(Polygon);\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { TOptions } from '../../typedefs';\nimport { FabricObject } from '../Object/FabricObject';\nimport { styleProperties } from './constants';\nimport type { StylePropertiesType } from './constants';\nimport type { FabricText } from './Text';\nimport { pick } from '../../util';\nimport { pickBy } from '../../util/misc/pick';\n\nexport type CompleteTextStyleDeclaration = Pick<\n  FabricText,\n  StylePropertiesType\n>;\n\nexport type TextStyleDeclaration = Partial<CompleteTextStyleDeclaration>;\n\nexport type TextStyle = {\n  [line: number | string]: { [char: number | string]: TextStyleDeclaration };\n};\n\nexport abstract class StyledText<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  declare abstract styles: TextStyle;\n  protected declare abstract _textLines: string[][];\n  protected declare _forceClearCache: boolean;\n  static _styleProperties: Readonly<StylePropertiesType[]> = styleProperties;\n  abstract get2DCursorLocation(\n    selectionStart: number,\n    skipWrapping?: boolean,\n  ): { charIndex: number; lineIndex: number };\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex?: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return true;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        // eslint-disable-next-line no-unused-vars\n        for (const p3 in obj[p1][p2]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns true if object has a style property or has it ina specified line\n   * This function is used to detect if a text will use a particular property or not.\n   * @param {String} property to check for\n   * @param {Number} lineIndex to check the style on\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex?: number): boolean {\n    if (!this.styles) {\n      return false;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return false;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { 0: this.styles[lineIndex] };\n    // eslint-disable-next-line\n    for (const p1 in obj) {\n      // eslint-disable-next-line\n      for (const p2 in obj[p1]) {\n        if (typeof obj[p1][p2][property] !== 'undefined') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if characters in a text have a value for a property\n   * whose value matches the textbox's value for that property.  If so,\n   * the character-level property is deleted.  If the character\n   * has no other properties, then it is also deleted.  Finally,\n   * if the line containing that character has no other characters\n   * then it also is deleted.\n   */\n  cleanStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return false;\n    }\n    const obj = this.styles;\n    let stylesCount = 0,\n      letterCount,\n      stylePropertyValue,\n      allStyleObjectPropertiesMatch = true,\n      graphemeCount = 0;\n    for (const p1 in obj) {\n      letterCount = 0;\n      for (const p2 in obj[p1]) {\n        const styleObject = obj[p1][p2] || {},\n          stylePropertyHasBeenSet = styleObject[property] !== undefined;\n\n        stylesCount++;\n\n        if (stylePropertyHasBeenSet) {\n          if (!stylePropertyValue) {\n            stylePropertyValue = styleObject[property];\n          } else if (styleObject[property] !== stylePropertyValue) {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (styleObject[property] === this[property as keyof this]) {\n            delete styleObject[property];\n          }\n        } else {\n          allStyleObjectPropertiesMatch = false;\n        }\n\n        if (Object.keys(styleObject).length !== 0) {\n          letterCount++;\n        } else {\n          delete obj[p1][p2];\n        }\n      }\n\n      if (letterCount === 0) {\n        delete obj[p1];\n      }\n    }\n    // if every grapheme has the same style set then\n    // delete those styles and set it on the parent\n    for (let i = 0; i < this._textLines.length; i++) {\n      graphemeCount += this._textLines[i].length;\n    }\n    if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n      this[property as keyof this] = stylePropertyValue as any;\n      this.removeStyle(property);\n    }\n  }\n\n  /**\n   * Remove a style property or properties from all individual character styles\n   * in a text object.  Deletes the character style object if it contains no other style\n   * props.  Deletes a line style object if it contains no other character styles.\n   *\n   * @param {String} props The property to remove from character styles.\n   */\n  removeStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return;\n    }\n    const obj = this.styles;\n    let line, lineNum, charNum;\n    for (lineNum in obj) {\n      line = obj[lineNum];\n      for (charNum in line) {\n        delete line[charNum][property];\n        if (Object.keys(line[charNum]).length === 0) {\n          delete line[charNum];\n        }\n      }\n      if (Object.keys(line).length === 0) {\n        delete obj[lineNum];\n      }\n    }\n  }\n\n  private _extendStyles(index: number, style: TextStyleDeclaration): void {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(index);\n\n    if (!this._getLineStyle(lineIndex)) {\n      this._setLineStyle(lineIndex);\n    }\n\n    const newStyle = pickBy(\n      {\n        // first create a new object that is a merge of existing and new\n        ...this._getStyleDeclaration(lineIndex, charIndex),\n        ...style,\n        // use the predicate to discard undefined values\n      },\n      (value) => value !== undefined,\n    );\n\n    // finally assign to the old position the new style\n    this._setStyleDeclaration(lineIndex, charIndex, newStyle);\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number,\n    endIndex?: number,\n    complete?: boolean,\n  ): TextStyleDeclaration[] {\n    const styles: TextStyleDeclaration[] = [];\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      styles.push(this.getStyleAtPosition(i, complete));\n    }\n    return styles;\n  }\n\n  /**\n   * Gets style of a current selection/cursor position\n   * @param {Number} position  to get styles at\n   * @param {Boolean} [complete] full style if true\n   * @return {Object} style Style object at a specified index\n   * @private\n   */\n  getStyleAtPosition(position: number, complete?: boolean) {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(position);\n    return complete\n      ? this.getCompleteStyleDeclaration(lineIndex, charIndex)\n      : this._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} styles Styles object\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified startIndex + 1\n   */\n  setSelectionStyles(styles: object, startIndex: number, endIndex?: number) {\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      this._extendStyles(i, styles);\n    }\n    /* not included in _extendStyles to avoid clearing cache more than once */\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Get a reference, not a clone, to the style object for a given character,\n   * if no style is set for a line or char, return a new empty object.\n   * This is tricky and confusing because when you get an empty object you can't\n   * determine if it is a reference or a new one.\n   * @TODO this should always return a reference or always a clone or undefined when necessary.\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    const lineStyle = this.styles && this.styles[lineIndex];\n    return lineStyle ? lineStyle[charIndex] ?? {} : {};\n  }\n\n  /**\n   * return a new object that contains all the style property for a character\n   * the object returned is newly created\n   * @param {Number} lineIndex of the line where the character is\n   * @param {Number} charIndex position of the character on the line\n   * @return {Object} style object\n   */\n  getCompleteStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): CompleteTextStyleDeclaration {\n    return {\n      ...pick(\n        this,\n        (this.constructor as typeof StyledText)\n          ._styleProperties as (keyof this)[],\n      ),\n      ...this._getStyleDeclaration(lineIndex, charIndex),\n    } as CompleteTextStyleDeclaration;\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    this.styles[lineIndex][charIndex] = style;\n  }\n\n  /**\n   *\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    delete this.styles[lineIndex][charIndex];\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @return {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    return !!this.styles[lineIndex];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    this.styles[lineIndex] = {};\n  }\n\n  protected _deleteLineStyle(lineIndex: number) {\n    delete this.styles[lineIndex];\n  }\n}\n","import { config } from '../../config';\nimport type { TSVGReviver } from '../../typedefs';\nimport { escapeXml } from '../../util/lang_string';\nimport { colorPropToSVG, createSVGRect } from '../../util/misc/svgParsing';\nimport { hasStyleChanged } from '../../util/misc/textStyles';\nimport { toFixed } from '../../util/misc/toFixed';\nimport { FabricObjectSVGExportMixin } from '../Object/FabricObjectSVGExportMixin';\nimport { type TextStyleDeclaration } from './StyledText';\nimport { JUSTIFY } from '../Text/constants';\nimport type { FabricText, GraphemeBBox } from './Text';\nimport { STROKE, FILL } from '../../constants';\nimport { createRotateMatrix } from '../../util/misc/matrix';\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\nimport { Point } from '../../Point';\nimport { matrixToSVG } from '../../util/misc/svgExport';\n\nconst multipleSpacesRegex = /  +/g;\nconst dblQuoteRegex = /\"/g;\n\nfunction createSVGInlineRect(\n  color: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n) {\n  return `\\t\\t${createSVGRect(color, { left, top, width, height })}\\n`;\n}\n\nexport class TextSVGExportMixin extends FabricObjectSVGExportMixin {\n  _toSVG(this: TextSVGExportMixin & FabricText): string[] {\n    const offsets = this._getSVGLeftTopOffsets(),\n      textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n    return this._wrapSVGTextAndBg(textAndBg);\n  }\n\n  toSVG(this: TextSVGExportMixin & FabricText, reviver?: TSVGReviver): string {\n    const textSvg = this._createBaseSVGMarkup(this._toSVG(), {\n        reviver,\n        noStyle: true,\n        withShadow: true,\n      }),\n      path = this.path;\n    if (path) {\n      return (\n        textSvg +\n        path._createBaseSVGMarkup(path._toSVG(), {\n          reviver,\n          withShadow: true,\n          additionalTransform: matrixToSVG(this.calcOwnMatrix()),\n        })\n      );\n    }\n    return textSvg;\n  }\n\n  private _getSVGLeftTopOffsets(this: TextSVGExportMixin & FabricText) {\n    return {\n      textLeft: -this.width / 2,\n      textTop: -this.height / 2,\n      lineTop: this.getHeightOfLine(0),\n    };\n  }\n\n  private _wrapSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    {\n      textBgRects,\n      textSpans,\n    }: {\n      textSpans: string[];\n      textBgRects: string[];\n    },\n  ) {\n    const noShadow = true,\n      textDecoration = this.getSvgTextDecoration(this);\n    return [\n      textBgRects.join(''),\n      '\\t\\t<text xml:space=\"preserve\" ',\n      `font-family=\"${this.fontFamily.replace(dblQuoteRegex, \"'\")}\" `,\n      `font-size=\"${this.fontSize}\" `,\n      this.fontStyle ? `font-style=\"${this.fontStyle}\" ` : '',\n      this.fontWeight ? `font-weight=\"${this.fontWeight}\" ` : '',\n      textDecoration ? `text-decoration=\"${textDecoration}\" ` : '',\n      this.direction === 'rtl' ? `direction=\"${this.direction}\" ` : '',\n      'style=\"',\n      this.getSvgStyles(noShadow),\n      '\"',\n      this.addPaintOrder(),\n      ' >',\n      textSpans.join(''),\n      '</text>\\n',\n    ];\n  }\n\n  /**\n   * @private\n   * @param {Number} textTopOffset Text top offset\n   * @param {Number} textLeftOffset Text left offset\n   * @return {Object}\n   */\n  private _getSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    textTopOffset: number,\n    textLeftOffset: number,\n  ) {\n    const textSpans: string[] = [],\n      textBgRects: string[] = [];\n    let height = textTopOffset,\n      lineOffset;\n\n    // bounding-box background\n    this.backgroundColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          this.backgroundColor,\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height,\n        ),\n      );\n\n    // text and text-background\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineOffset = this._getLineLeftOffset(i);\n      if (this.direction === 'rtl') {\n        lineOffset += this.width;\n      }\n      if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n        this._setSVGTextLineBg(\n          textBgRects,\n          i,\n          textLeftOffset + lineOffset,\n          height,\n        );\n      }\n      this._setSVGTextLineText(\n        textSpans,\n        i,\n        textLeftOffset + lineOffset,\n        height,\n      );\n      height += this.getHeightOfLine(i);\n    }\n\n    return {\n      textSpans,\n      textBgRects,\n    };\n  }\n\n  private _createTextCharSpan(\n    this: TextSVGExportMixin & FabricText,\n    char: string,\n    styleDecl: TextStyleDeclaration,\n    left: number,\n    top: number,\n    charBox: GraphemeBBox,\n  ) {\n    const numFractionDigit = config.NUM_FRACTION_DIGITS;\n    const styleProps = this.getSvgSpanStyles(\n        styleDecl,\n        char !== char.trim() || !!char.match(multipleSpacesRegex),\n      ),\n      fillStyles = styleProps ? `style=\"${styleProps}\"` : '',\n      dy = styleDecl.deltaY,\n      dySpan = dy ? ` dy=\"${toFixed(dy, numFractionDigit)}\" ` : '',\n      { angle, renderLeft, renderTop, width } = charBox;\n    let angleAttr = '';\n    if (renderLeft !== undefined) {\n      const wBy2 = width / 2;\n      angle &&\n        (angleAttr = ` rotate=\"${toFixed(radiansToDegrees(angle), numFractionDigit)}\"`);\n      const m = createRotateMatrix({ angle: radiansToDegrees(angle!) });\n      m[4] = renderLeft!;\n      m[5] = renderTop!;\n      const renderPoint = new Point(-wBy2, 0).transform(m);\n      left = renderPoint.x;\n      top = renderPoint.y;\n    }\n\n    return `<tspan x=\"${toFixed(left, numFractionDigit)}\" y=\"${toFixed(\n      top,\n      numFractionDigit,\n    )}\" ${dySpan}${angleAttr}${fillStyles}>${escapeXml(char)}</tspan>`;\n  }\n\n  private _setSVGTextLineText(\n    this: TextSVGExportMixin & FabricText,\n    textSpans: string[],\n    lineIndex: number,\n    textLeftOffset: number,\n    textTopOffset: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      line = this._textLines[lineIndex];\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      style,\n      boxWidth = 0,\n      timeToRender;\n\n    textTopOffset +=\n      (lineHeight * (1 - this._fontSizeFraction)) / this.lineHeight;\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing || this.path;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i];\n      if (boxWidth === 0) {\n        textLeftOffset += charBox.kernedWidth - charBox.width;\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing or a path, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, true);\n      }\n      if (timeToRender) {\n        style = this._getStyleDeclaration(lineIndex, i);\n        textSpans.push(\n          this._createTextCharSpan(\n            charsToRender,\n            style,\n            textLeftOffset,\n            textTopOffset,\n            charBox,\n          ),\n        );\n        charsToRender = '';\n        actualStyle = nextStyle;\n        if (this.direction === 'rtl') {\n          textLeftOffset -= boxWidth;\n        } else {\n          textLeftOffset += boxWidth;\n        }\n        boxWidth = 0;\n      }\n    }\n  }\n\n  private _setSVGTextLineBg(\n    this: TextSVGExportMixin & FabricText,\n    textBgRects: (string | number)[],\n    i: number,\n    leftOffset: number,\n    textTopOffset: number,\n  ) {\n    const line = this._textLines[i],\n      heightOfLine = this.getHeightOfLine(i) / this.lineHeight;\n    let boxWidth = 0,\n      boxStart = 0,\n      currentColor,\n      lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n    for (let j = 0; j < line.length; j++) {\n      const { left, width, kernedWidth } = this.__charBounds[i][j];\n      currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n      if (currentColor !== lastColor) {\n        lastColor &&\n          textBgRects.push(\n            ...createSVGInlineRect(\n              lastColor,\n              leftOffset + boxStart,\n              textTopOffset,\n              boxWidth,\n              heightOfLine,\n            ),\n          );\n        boxStart = left;\n        boxWidth = width;\n        lastColor = currentColor;\n      } else {\n        boxWidth += kernedWidth;\n      }\n    }\n    currentColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          lastColor,\n          leftOffset + boxStart,\n          textTopOffset,\n          boxWidth,\n          heightOfLine,\n        ),\n      );\n  }\n\n  /**\n   * @deprecated unused\n   */\n  _getSVGLineTopOffset(\n    this: TextSVGExportMixin & FabricText,\n    lineIndex: number,\n  ) {\n    let lineTopOffset = 0,\n      j;\n    for (j = 0; j < lineIndex; j++) {\n      lineTopOffset += this.getHeightOfLine(j);\n    }\n    const lastHeight = this.getHeightOfLine(j);\n    return {\n      lineTop: lineTopOffset,\n      offset:\n        ((this._fontSizeMult - this._fontSizeFraction) * lastHeight) /\n        (this.lineHeight * this._fontSizeMult),\n    };\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(this: TextSVGExportMixin & FabricText, skipShadow?: boolean) {\n    return `${super.getSvgStyles(skipShadow)} text-decoration-thickness: ${toFixed((this.textDecorationThickness * this.getObjectScaling().y) / 10, config.NUM_FRACTION_DIGITS)}%; white-space: pre;`;\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n   * @return {String}\n   */\n  getSvgSpanStyles(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n    useWhiteSpace?: boolean,\n  ) {\n    const {\n      fontFamily,\n      strokeWidth,\n      stroke,\n      fill,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      deltaY,\n      textDecorationThickness,\n      linethrough,\n      overline,\n      underline,\n    } = style;\n\n    const textDecoration = this.getSvgTextDecoration({\n      underline: underline ?? this.underline,\n      overline: overline ?? this.overline,\n      linethrough: linethrough ?? this.linethrough,\n    });\n    const thickness = textDecorationThickness || this.textDecorationThickness;\n    return [\n      stroke ? colorPropToSVG(STROKE, stroke) : '',\n      strokeWidth ? `stroke-width: ${strokeWidth}; ` : '',\n      fontFamily\n        ? `font-family: ${\n            !fontFamily.includes(\"'\") && !fontFamily.includes('\"')\n              ? `'${fontFamily}'`\n              : fontFamily\n          }; `\n        : '',\n      fontSize ? `font-size: ${fontSize}px; ` : '',\n      fontStyle ? `font-style: ${fontStyle}; ` : '',\n      fontWeight ? `font-weight: ${fontWeight}; ` : '',\n      textDecoration\n        ? `text-decoration: ${textDecoration}; text-decoration-thickness: ${toFixed((thickness * this.getObjectScaling().y) / 10, config.NUM_FRACTION_DIGITS)}%; `\n        : '',\n      fill ? colorPropToSVG(FILL, fill) : '',\n      deltaY ? `baseline-shift: ${-deltaY}; ` : '',\n      useWhiteSpace ? 'white-space: pre; ' : '',\n    ].join('');\n  }\n\n  /**\n   * Returns text-decoration property for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @return {String}\n   */\n  getSvgTextDecoration(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n  ) {\n    return (['overline', 'underline', 'line-through'] as const)\n      .filter(\n        (decoration) =>\n          style[\n            decoration.replace('-', '') as\n              | 'overline'\n              | 'underline'\n              | 'linethrough'\n          ],\n      )\n      .join(' ');\n  }\n}\n","import { cache } from '../../cache';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, STROKE } from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type {\n  CompleteTextStyleDeclaration,\n  TextStyle,\n  TextStyleDeclaration,\n} from './StyledText';\nimport { StyledText } from './StyledText';\nimport { SHARED_ATTRIBUTES } from '../../parser/attributes';\nimport { parseAttributes } from '../../parser/parseAttributes';\nimport type {\n  Abortable,\n  TCacheCanvasDimensions,\n  TClassProperties,\n  TFiller,\n  TOptions,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { graphemeSplit } from '../../util/lang_string';\nimport { createCanvasElementFor } from '../../util/misc/dom';\nimport type { TextStyleArray } from '../../util/misc/textStyles';\nimport {\n  hasStyleChanged,\n  stylesFromArray,\n  stylesToArray,\n} from '../../util/misc/textStyles';\nimport { getPathSegmentsInfo, getPointOnPath } from '../../util/path';\nimport { cacheProperties } from '../Object/FabricObject';\nimport type { Path } from '../Path';\nimport { TextSVGExportMixin } from './TextSVGExportMixin';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { StylePropertiesType } from './constants';\nimport {\n  additionalProps,\n  textDefaultValues,\n  textLayoutProperties,\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n  TEXT_DECORATION_THICKNESS,\n} from './constants';\nimport { CENTER, LEFT, RIGHT, TOP, BOTTOM } from '../../constants';\nimport { isFiller } from '../../util/typeAssertions';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { CSSRules } from '../../parser/typedefs';\n\nlet measuringContext: CanvasRenderingContext2D | null;\n\n/**\n * Return a context for measurement of text string.\n * if created it gets stored for reuse\n */\nfunction getMeasuringContext() {\n  if (!measuringContext) {\n    const canvas = createCanvasElementFor({\n      width: 0,\n      height: 0,\n    });\n    measuringContext = canvas.getContext('2d');\n  }\n  return measuringContext;\n}\n\nexport type TPathSide = 'left' | 'right';\n\nexport type TPathAlign = 'baseline' | 'center' | 'ascender' | 'descender';\n\nexport type TextLinesInfo = {\n  lines: string[];\n  graphemeLines: string[][];\n  graphemeText: string[];\n  _unwrappedLines: string[][];\n};\n\n/**\n * Measure and return the info of a single grapheme.\n * needs the the info of previous graphemes already filled\n * Override to customize measuring\n */\nexport type GraphemeBBox = {\n  width: number;\n  height: number;\n  kernedWidth: number;\n  left: number;\n  deltaY: number;\n  renderLeft?: number;\n  renderTop?: number;\n  angle?: number;\n};\n\n// @TODO this is not complete\ninterface UniqueTextProps {\n  charSpacing: number;\n  lineHeight: number;\n  fontSize: number;\n  fontWeight: string | number;\n  fontFamily: string;\n  fontStyle: string;\n  pathSide: TPathSide;\n  pathAlign: TPathAlign;\n  underline: boolean;\n  overline: boolean;\n  linethrough: boolean;\n  textAlign: string;\n  direction: CanvasDirection;\n  path?: Path;\n  textDecorationThickness: number;\n}\n\nexport interface SerializedTextProps\n  extends SerializedObjectProps,\n    UniqueTextProps {\n  styles: TextStyleArray | TextStyle;\n}\n\nexport interface TextProps extends FabricObjectProps, UniqueTextProps {\n  styles: TextStyle;\n}\n\n/**\n * Text class\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n */\nexport class FabricText<\n    Props extends TOptions<TextProps> = Partial<TextProps>,\n    SProps extends SerializedTextProps = SerializedTextProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends StyledText<Props, SProps, EventSpec>\n  implements UniqueTextProps\n{\n  /**\n   * Properties that requires a text layout recalculation when changed\n   * @type string[]\n   * @protected\n   */\n  static textLayoutProperties: string[] = textLayoutProperties;\n\n  /**\n   * @private\n   */\n  declare _reNewline: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespaces that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpacesAndTabs: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespace that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpaceAndTab: RegExp;\n\n  /**\n   * Use this regular expression to filter consecutive groups of non spaces.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reWords: RegExp;\n\n  declare text: string;\n\n  /**\n   * Font size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare fontSize: number;\n\n  /**\n   * Font weight (e.g. bold, normal, 400, 600, 800)\n   * @type {(Number|String)}\n   * @default\n   */\n  declare fontWeight: string | number;\n\n  /**\n   * Font family\n   * @type String\n   * @default\n   */\n  declare fontFamily: string;\n\n  /**\n   * Text decoration underline.\n   * @type Boolean\n   * @default\n   */\n  declare underline: boolean;\n\n  /**\n   * Text decoration overline.\n   * @type Boolean\n   * @default\n   */\n  declare overline: boolean;\n\n  /**\n   * Text decoration linethrough.\n   * @type Boolean\n   * @default\n   */\n  declare linethrough: boolean;\n\n  /**\n   * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n   * \"justify-left\", \"justify-center\" or \"justify-right\".\n   * @type String\n   * @default\n   */\n  declare textAlign: string;\n\n  /**\n   * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n   * @type String\n   * @default\n   */\n  declare fontStyle: string;\n\n  /**\n   * Line height\n   * @type Number\n   * @default\n   */\n  declare lineHeight: number;\n\n  /**\n   * Superscript schema object (minimum overlap)\n   */\n  declare superscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (upwards)\n     * @default -0.35\n     */\n    baseline: number;\n  };\n\n  /**\n   * Subscript schema object (minimum overlap)\n   */\n  declare subscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (downwards)\n     * @default 0.11\n     */\n    baseline: number;\n  };\n\n  /**\n   * Background color of text lines\n   * @type String\n   * @default\n   */\n  declare textBackgroundColor: string;\n\n  declare styles: TextStyle;\n\n  /**\n   * Path that the text should follow.\n   * since 4.6.0 the path will be drawn automatically.\n   * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n   * if you want it to be hidden, assign visible = false to the path.\n   * This feature is in BETA, and SVG import/export is not yet supported.\n   * @type Path\n   * @example\n   * const textPath = new Text('Text on a path', {\n   *     top: 150,\n   *     left: 150,\n   *     textAlign: 'center',\n   *     charSpacing: -50,\n   *     path: new Path('M 0 0 C 50 -100 150 -100 200 0', {\n   *         strokeWidth: 1,\n   *         visible: false\n   *     }),\n   *     pathSide: 'left',\n   *     pathStartOffset: 0\n   * });\n   * @default\n   */\n  declare path?: Path;\n\n  /**\n   * The text decoration tickness for underline, overline and strikethrough\n   * The tickness is expressed in thousandths of fontSize ( em ).\n   * The original value was 1/15 that translates to 66.6667 thousandths.\n   * The choice of unit of measure is to align with charSpacing.\n   * You can slim the tickness without issues, while large underline or overline may end up\n   * outside the bounding box of the text. In order to fix that a bigger refactor of the code\n   * is needed and is out of scope for now. If you need such large overline on the first line\n   * of text or large underline on the last line of text, consider disabling caching as a\n   * workaround\n   * @default 66.667\n   */\n  declare textDecorationThickness: number;\n\n  /**\n   * Offset amount for text path starting position\n   * Only used when text has a path\n   * @default\n   */\n  declare pathStartOffset: number;\n\n  /**\n   * Which side of the path the text should be drawn on.\n   * Only used when text has a path\n   * @type {TPathSide} 'left|right'\n   * @default\n   */\n  declare pathSide: TPathSide;\n\n  /**\n   * How text is aligned to the path. This property determines\n   * the perpendicular position of each character relative to the path.\n   * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n   * This feature is in BETA, and its behavior may change\n   * @type TPathAlign\n   * @default\n   */\n  declare pathAlign: TPathAlign;\n\n  /**\n   * @private\n   */\n  declare _fontSizeFraction: number;\n\n  /**\n   * @private\n   */\n  declare offsets: { underline: number; linethrough: number; overline: number };\n\n  /**\n   * Text Line proportion to font Size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare _fontSizeMult: number;\n\n  /**\n   * additional space between characters\n   * expressed in thousands of em unit\n   * @type Number\n   * @default\n   */\n  declare charSpacing: number;\n\n  /**\n   * Baseline shift, styles only, keep at 0 for the main text object\n   * @type {Number}\n   * @default\n   */\n  declare deltaY: number;\n\n  /**\n   * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n   * determine the direction of the text.\n   * This has to be set manually together with textAlign and originX for proper\n   * experience.\n   * some interesting link for the future\n   * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n   * @since 4.5.0\n   * @type {CanvasDirection} 'ltr|rtl'\n   * @default\n   */\n  declare direction: CanvasDirection;\n\n  /**\n   * contains characters bounding boxes\n   * This variable is considered to be protected.\n   * But for how mixins are implemented right now, we can't leave it private\n   * @protected\n   */\n  __charBounds: GraphemeBBox[][] = [];\n\n  /**\n   * use this size when measuring text. To avoid IE11 rounding errors\n   * @type {Number}\n   * @default\n   * @readonly\n   * @private\n   */\n  declare CACHE_FONT_SIZE: number;\n\n  /**\n   * contains the min text width to avoid getting 0\n   * @type {Number}\n   * @default\n   */\n  declare MIN_TEXT_WIDTH: number;\n\n  /**\n   * contains the the text of the object, divided in lines as they are displayed\n   * on screen. Wrapping will divide the text independently of line breaks\n   * @type {string[]}\n   * @default\n   */\n  declare textLines: string[];\n\n  /**\n   * same as textlines, but each line is an array of graphemes as split by splitByGrapheme\n   * @type {string[]}\n   * @default\n   */\n  declare _textLines: string[][];\n\n  declare _unwrappedTextLines: string[][];\n  declare _text: string[];\n  declare cursorWidth: number;\n  declare __lineHeights: number[];\n  declare __lineWidths: number[];\n  declare initialized?: true;\n\n  static cacheProperties = [...cacheProperties, ...additionalProps];\n\n  static ownDefaults = textDefaultValues;\n\n  static type = 'Text';\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...FabricText.ownDefaults };\n  }\n\n  constructor(text: string, options?: Props) {\n    super();\n    Object.assign(this, FabricText.ownDefaults);\n    this.setOptions(options);\n    if (!this.styles) {\n      this.styles = {};\n    }\n    this.text = text;\n    this.initialized = true;\n    if (this.path) {\n      this.setPathInfo();\n    }\n    this.initDimensions();\n    this.setCoords();\n  }\n\n  /**\n   * If text has a path, it will add the extra information needed\n   * for path and text calculations\n   */\n  setPathInfo() {\n    const path = this.path;\n    if (path) {\n      path.segmentsInfo = getPathSegmentsInfo(path.path);\n    }\n  }\n\n  /**\n   * @private\n   * Divides text into lines of text and lines of graphemes.\n   */\n  _splitText(): TextLinesInfo {\n    const newLines = this._splitTextIntoLines(this.text);\n    this.textLines = newLines.lines;\n    this._textLines = newLines.graphemeLines;\n    this._unwrappedTextLines = newLines._unwrappedLines;\n    this._text = newLines.graphemeText;\n    return newLines;\n  }\n\n  /**\n   * Initialize or update text dimensions.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   */\n  initDimensions() {\n    this._splitText();\n    this._clearCache();\n    this.dirty = true;\n    if (this.path) {\n      this.width = this.path.width;\n      this.height = this.path.height;\n    } else {\n      this.width =\n        this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      this.height = this.calcTextHeight();\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n  }\n\n  /**\n   * Enlarge space boxes and shift the others\n   */\n  enlargeSpaces() {\n    let diffSpace,\n      currentLineWidth,\n      numberOfSpaces,\n      accumulatedSpace,\n      line,\n      charBound,\n      spaces;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      if (\n        this.textAlign !== JUSTIFY &&\n        (i === len - 1 || this.isEndOfWrapping(i))\n      ) {\n        continue;\n      }\n      accumulatedSpace = 0;\n      line = this._textLines[i];\n      currentLineWidth = this.getLineWidth(i);\n      if (\n        currentLineWidth < this.width &&\n        (spaces = this.textLines[i].match(this._reSpacesAndTabs))\n      ) {\n        numberOfSpaces = spaces.length;\n        diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n        for (let j = 0; j <= line.length; j++) {\n          charBound = this.__charBounds[i][j];\n          if (this._reSpaceAndTab.test(line[j])) {\n            charBound.width += diffSpace;\n            charBound.kernedWidth += diffSpace;\n            charBound.left += accumulatedSpace;\n            accumulatedSpace += diffSpace;\n          } else {\n            charBound.left += accumulatedSpace;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    return lineIndex === this._textLines.length - 1;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * It return always 1 for text and Itext. Textbox has its own implementation\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1;\n  missingNewlineOffset(_lineIndex: number): 1 {\n    return 1;\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor\n   * @param {Number} selectionStart\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(selectionStart: number, skipWrapping?: boolean) {\n    const lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n    let i: number;\n    for (i = 0; i < lines.length; i++) {\n      if (selectionStart <= lines[i].length) {\n        return {\n          lineIndex: i,\n          charIndex: selectionStart,\n        };\n      }\n      selectionStart -=\n        lines[i].length + this.missingNewlineOffset(i, skipWrapping);\n    }\n    return {\n      lineIndex: i - 1,\n      charIndex:\n        lines[i - 1].length < selectionStart\n          ? lines[i - 1].length\n          : selectionStart,\n    };\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of text object\n   */\n  toString(): string {\n    return `#<Text (${this.complexity()}): { \"text\": \"${\n      this.text\n    }\", \"fontFamily\": \"${this.fontFamily}\" }>`;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @param {Object} dim.x width of object to be cached\n   * @param {Object} dim.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const dims = super._getCacheCanvasDimensions();\n    const fontSize = this.fontSize;\n    dims.width += fontSize * dims.zoomX;\n    dims.height += fontSize * dims.zoomY;\n    return dims;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const path = this.path;\n    path && !path.isNotVisible() && path._render(ctx);\n    this._setTextStyles(ctx);\n    this._renderTextLinesBackground(ctx);\n    this._renderTextDecoration(ctx, 'underline');\n    this._renderText(ctx);\n    this._renderTextDecoration(ctx, 'overline');\n    this._renderTextDecoration(ctx, 'linethrough');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderText(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderTextStroke(ctx);\n      this._renderTextFill(ctx);\n    } else {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    }\n  }\n\n  /**\n   * Set the font parameter of the context with the object properties or with charStyle\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [charStyle] object with font style properties\n   * @param {String} [charStyle.fontFamily] Font Family\n   * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n   * @param {String} [charStyle.fontWeight] Font weight\n   * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n   */\n  _setTextStyles(\n    ctx: CanvasRenderingContext2D,\n    charStyle?: any,\n    forMeasuring?: boolean,\n  ) {\n    ctx.textBaseline = 'alphabetic';\n    if (this.path) {\n      switch (this.pathAlign) {\n        case CENTER:\n          ctx.textBaseline = 'middle';\n          break;\n        case 'ascender':\n          ctx.textBaseline = TOP;\n          break;\n        case 'descender':\n          ctx.textBaseline = BOTTOM;\n          break;\n      }\n    }\n    ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n  }\n\n  /**\n   * calculate and return the text Width measuring each line.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {Number} Maximum width of Text object\n   */\n  calcTextWidth(): number {\n    let maxWidth = this.getLineWidth(0);\n\n    for (let i = 1, len = this._textLines.length; i < len; i++) {\n      const currentLineWidth = this.getLineWidth(i);\n      if (currentLineWidth > maxWidth) {\n        maxWidth = currentLineWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  /**\n   * @private\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} line Text to render\n   * @param {Number} left Left position of text\n   * @param {Number} top Top position of text\n   * @param {Number} lineIndex Index of a line in a text\n   */\n  _renderTextLine(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: string[],\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    this._renderChars(method, ctx, line, left, top, lineIndex);\n  }\n\n  /**\n   * Renders the text background for lines, taking care of style\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextLinesBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n      return;\n    }\n    const originalFill = ctx.fillStyle,\n      leftOffset = this._getLeftOffset();\n    let lineTopOffset = this._getTopOffset();\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (\n        !this.textBackgroundColor &&\n        !this.styleHas('textBackgroundColor', i)\n      ) {\n        lineTopOffset += heightOfLine;\n        continue;\n      }\n      const jlen = this._textLines[i].length;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxWidth = 0;\n      let boxStart = 0;\n      let drawStart;\n      let currentColor;\n      let lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (let j = 0; j < jlen; j++) {\n        // at this point charbox are either standard or full with pathInfo if there is a path.\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (this.path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillStyle = currentColor;\n          currentColor &&\n            ctx.fillRect(\n              -charBox.width / 2,\n              (-heightOfLine / this.lineHeight) * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight,\n            );\n          ctx.restore();\n        } else if (currentColor !== lastColor) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = lastColor;\n          lastColor &&\n            ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight,\n            );\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      if (currentColor && !this.path) {\n        drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentColor;\n        ctx.fillRect(\n          drawStart,\n          lineTopOffset,\n          boxWidth,\n          heightOfLine / this.lineHeight,\n        );\n      }\n      lineTopOffset += heightOfLine;\n    }\n    ctx.fillStyle = originalFill;\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * measure and return the width of a single character.\n   * possibly overridden to accommodate different measure logic or\n   * to hook some external lib for character measurement\n   * @private\n   * @param {String} _char, char to be measured\n   * @param {Object} charStyle style of char to be measured\n   * @param {String} [previousChar] previous char\n   * @param {Object} [prevCharStyle] style of previous char\n   */\n  _measureChar(\n    _char: string,\n    charStyle: CompleteTextStyleDeclaration,\n    previousChar: string | undefined,\n    prevCharStyle: CompleteTextStyleDeclaration | Record<string, never>,\n  ) {\n    const fontCache = cache.getFontCache(charStyle),\n      fontDeclaration = this._getFontDeclaration(charStyle),\n      couple = previousChar + _char,\n      stylesAreEqual =\n        previousChar &&\n        fontDeclaration === this._getFontDeclaration(prevCharStyle),\n      fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE;\n    let width: number | undefined,\n      coupleWidth: number | undefined,\n      previousWidth: number | undefined,\n      kernedWidth: number | undefined;\n\n    if (previousChar && fontCache[previousChar] !== undefined) {\n      previousWidth = fontCache[previousChar];\n    }\n    if (fontCache[_char] !== undefined) {\n      kernedWidth = width = fontCache[_char];\n    }\n    if (stylesAreEqual && fontCache[couple] !== undefined) {\n      coupleWidth = fontCache[couple];\n      kernedWidth = coupleWidth - previousWidth!;\n    }\n    if (\n      width === undefined ||\n      previousWidth === undefined ||\n      coupleWidth === undefined\n    ) {\n      const ctx = getMeasuringContext()!;\n      // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n      this._setTextStyles(ctx, charStyle, true);\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        // safe to use the non-null since if undefined we defined it before.\n        kernedWidth = coupleWidth - previousWidth!;\n      }\n    }\n    return {\n      width: width * fontMultiplier,\n      kernedWidth: kernedWidth! * fontMultiplier,\n    };\n  }\n\n  /**\n   * Computes height of character at given position\n   * @param {Number} line the line index number\n   * @param {Number} _char the character index number\n   * @return {Number} fontSize of the character\n   */\n  getHeightOfChar(line: number, _char: number): number {\n    return this.getValueOfPropertyAt(line, _char, 'fontSize');\n  }\n\n  /**\n   * measure a text line measuring all characters.\n   * @param {Number} lineIndex line number\n   */\n  measureLine(lineIndex: number) {\n    const lineInfo = this._measureLine(lineIndex);\n    if (this.charSpacing !== 0) {\n      lineInfo.width -= this._getWidthOfCharSpacing();\n    }\n    if (lineInfo.width < 0) {\n      lineInfo.width = 0;\n    }\n    return lineInfo;\n  }\n\n  /**\n   * measure every grapheme of a line, populating __charBounds\n   * @param {Number} lineIndex\n   * @return {Object} object.width total width of characters\n   * @return {Object} object.numOfSpaces length of chars that match this._reSpacesAndTabs\n   */\n  _measureLine(lineIndex: number) {\n    let width = 0,\n      prevGrapheme: string | undefined,\n      graphemeInfo: GraphemeBBox | undefined;\n\n    const reverse = this.pathSide === RIGHT,\n      path = this.path,\n      line = this._textLines[lineIndex],\n      llength = line.length,\n      lineBounds = new Array<GraphemeBBox>(llength);\n\n    this.__charBounds[lineIndex] = lineBounds;\n    for (let i = 0; i < llength; i++) {\n      const grapheme = line[i];\n      graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n      lineBounds[i] = graphemeInfo;\n      width += graphemeInfo.kernedWidth;\n      prevGrapheme = grapheme;\n    }\n    // this latest bound box represent the last character of the line\n    // to simplify cursor handling in interactive mode.\n    lineBounds[llength] = {\n      left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n      width: 0,\n      kernedWidth: 0,\n      height: this.fontSize,\n      deltaY: 0,\n    } as GraphemeBBox;\n    if (path && path.segmentsInfo) {\n      let positionInPath = 0;\n      const totalPathLength =\n        path.segmentsInfo[path.segmentsInfo.length - 1].length;\n      switch (this.textAlign) {\n        case LEFT:\n          positionInPath = reverse ? totalPathLength - width : 0;\n          break;\n        case CENTER:\n          positionInPath = (totalPathLength - width) / 2;\n          break;\n        case RIGHT:\n          positionInPath = reverse ? 0 : totalPathLength - width;\n          break;\n        //todo - add support for justify\n      }\n      positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n      for (\n        let i = reverse ? llength - 1 : 0;\n        reverse ? i >= 0 : i < llength;\n        reverse ? i-- : i++\n      ) {\n        graphemeInfo = lineBounds[i];\n        if (positionInPath > totalPathLength) {\n          positionInPath %= totalPathLength;\n        } else if (positionInPath < 0) {\n          positionInPath += totalPathLength;\n        }\n        // it would probably much faster to send all the grapheme position for a line\n        // and calculate path position/angle at once.\n        this._setGraphemeOnPath(positionInPath, graphemeInfo);\n        positionInPath += graphemeInfo.kernedWidth;\n      }\n    }\n    return { width: width, numOfSpaces: 0 };\n  }\n\n  /**\n   * Calculate the angle  and the left,top position of the char that follow a path.\n   * It appends it to graphemeInfo to be reused later at rendering\n   * @private\n   * @param {Number} positionInPath to be measured\n   * @param {GraphemeBBox} graphemeInfo current grapheme box information\n   * @param {Object} startingPoint position of the point\n   */\n  _setGraphemeOnPath(positionInPath: number, graphemeInfo: GraphemeBBox) {\n    const centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n      path = this.path!;\n\n    // we are at currentPositionOnPath. we want to know what point on the path is.\n    const info = getPointOnPath(path.path, centerPosition, path.segmentsInfo)!;\n    graphemeInfo.renderLeft = info.x - path.pathOffset.x;\n    graphemeInfo.renderTop = info.y - path.pathOffset.y;\n    graphemeInfo.angle = info.angle + (this.pathSide === RIGHT ? Math.PI : 0);\n  }\n\n  /**\n   *\n   * @param {String} grapheme to be measured\n   * @param {Number} lineIndex index of the line where the char is\n   * @param {Number} charIndex position in the line\n   * @param {String} [prevGrapheme] character preceding the one to be measured\n   * @returns {GraphemeBBox} grapheme bbox\n   */\n  _getGraphemeBox(\n    grapheme: string,\n    lineIndex: number,\n    charIndex: number,\n    prevGrapheme?: string,\n    skipLeft?: boolean,\n  ): GraphemeBBox {\n    const style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      prevStyle = prevGrapheme\n        ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1)\n        : {},\n      info = this._measureChar(grapheme, style, prevGrapheme, prevStyle);\n    let kernedWidth = info.kernedWidth,\n      width = info.width,\n      charSpacing;\n\n    if (this.charSpacing !== 0) {\n      charSpacing = this._getWidthOfCharSpacing();\n      width += charSpacing;\n      kernedWidth += charSpacing;\n    }\n\n    const box: GraphemeBBox = {\n      width,\n      left: 0,\n      height: style.fontSize,\n      kernedWidth,\n      deltaY: style.deltaY,\n    };\n    if (charIndex > 0 && !skipLeft) {\n      const previousBox = this.__charBounds[lineIndex][charIndex - 1];\n      box.left =\n        previousBox.left + previousBox.width + info.kernedWidth - info.width;\n    }\n    return box;\n  }\n\n  /**\n   * Calculate height of line at 'lineIndex'\n   * @param {Number} lineIndex index of line to calculate\n   * @return {Number}\n   */\n  getHeightOfLine(lineIndex: number): number {\n    if (this.__lineHeights[lineIndex]) {\n      return this.__lineHeights[lineIndex];\n    }\n\n    // char 0 is measured before the line cycle because it needs to char\n    // emptylines\n    let maxHeight = this.getHeightOfChar(lineIndex, 0);\n    for (let i = 1, len = this._textLines[lineIndex].length; i < len; i++) {\n      maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n    }\n\n    return (this.__lineHeights[lineIndex] =\n      maxHeight * this.lineHeight * this._fontSizeMult);\n  }\n\n  /**\n   * Calculate text box height\n   */\n  calcTextHeight() {\n    let lineHeight,\n      height = 0;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineHeight = this.getHeightOfLine(i);\n      height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n    }\n    return height;\n  }\n\n  /**\n   * @private\n   * @return {Number} Left offset\n   */\n  _getLeftOffset(): number {\n    return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n  }\n\n  /**\n   * @private\n   * @return {Number} Top offset\n   */\n  _getTopOffset(): number {\n    return -this.height / 2;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   */\n  _renderTextCommon(\n    ctx: CanvasRenderingContext2D,\n    method: 'fillText' | 'strokeText',\n  ) {\n    ctx.save();\n    let lineHeights = 0;\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset();\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i),\n        maxHeight = heightOfLine / this.lineHeight,\n        leftOffset = this._getLineLeftOffset(i);\n      this._renderTextLine(\n        method,\n        ctx,\n        this._textLines[i],\n        left + leftOffset,\n        top + lineHeights + maxHeight,\n        i,\n      );\n      lineHeights += heightOfLine;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill && !this.styleHas(FILL)) {\n      return;\n    }\n\n    this._renderTextCommon(ctx, 'fillText');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextStroke(ctx: CanvasRenderingContext2D) {\n    if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    this._setLineDash(ctx, this.strokeDashArray);\n    ctx.beginPath();\n    this._renderTextCommon(ctx, 'strokeText');\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {String} method fillText or strokeText.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} line Content of the line, splitted in an array by grapheme\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} lineIndex\n   */\n  _renderChars(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: Array<any>,\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      path = this.path,\n      shortCut =\n        !isJustify &&\n        this.charSpacing === 0 &&\n        this.isEmptyStyles(lineIndex) &&\n        !path,\n      isLtr = this.direction === 'ltr',\n      sign = this.direction === 'ltr' ? 1 : -1,\n      // this was changed in the PR #7674\n      // currentDirection = ctx.canvas.getAttribute('dir');\n      currentDirection = ctx.direction;\n\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      boxWidth = 0,\n      timeToRender,\n      drawingLeft;\n\n    ctx.save();\n    if (currentDirection !== this.direction) {\n      ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n      ctx.direction = isLtr ? 'ltr' : 'rtl';\n      ctx.textAlign = isLtr ? LEFT : RIGHT;\n    }\n    top -= (lineHeight * this._fontSizeFraction) / this.lineHeight;\n    if (shortCut) {\n      // render all the line in one pass without checking\n      // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n      this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top);\n      ctx.restore();\n      return;\n    }\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing || path;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i] as Required<GraphemeBBox>;\n      if (boxWidth === 0) {\n        left += sign * (charBox.kernedWidth - charBox.width);\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, false);\n      }\n      if (timeToRender) {\n        if (path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            -boxWidth / 2,\n            0,\n          );\n          ctx.restore();\n        } else {\n          drawingLeft = left;\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            drawingLeft,\n            top,\n          );\n        }\n        charsToRender = '';\n        actualStyle = nextStyle;\n        left += sign * boxWidth;\n        boxWidth = 0;\n      }\n    }\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {TFiller} filler a fabric gradient instance\n   * @return {CanvasPattern} a pattern to use as fill/stroke style\n   */\n  _applyPatternGradientTransformText(filler: TFiller) {\n    // TODO: verify compatibility with strokeUniform\n    const width = this.width + this.strokeWidth,\n      height = this.height + this.strokeWidth,\n      pCanvas = createCanvasElementFor({\n        width,\n        height,\n      }),\n      pCtx = pCanvas.getContext('2d')!;\n    pCanvas.width = width;\n    pCanvas.height = height;\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.fillStyle = filler.toLive(pCtx)!;\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fill();\n    return pCtx.createPattern(pCanvas, 'no-repeat')!;\n  }\n\n  handleFiller<T extends 'fill' | 'stroke'>(\n    ctx: CanvasRenderingContext2D,\n    property: `${T}Style`,\n    filler: TFiller | string,\n  ): { offsetX: number; offsetY: number } {\n    let offsetX: number, offsetY: number;\n    if (isFiller(filler)) {\n      if (\n        (filler as Gradient<'linear'>).gradientUnits === 'percentage' ||\n        (filler as Gradient<'linear'>).gradientTransform ||\n        (filler as Pattern).patternTransform\n      ) {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        offsetX = -this.width / 2;\n        offsetY = -this.height / 2;\n        ctx.translate(offsetX, offsetY);\n        ctx[property] = this._applyPatternGradientTransformText(filler);\n        return { offsetX, offsetY };\n      } else {\n        // is a simple gradient or pattern\n        ctx[property] = filler.toLive(ctx)!;\n        return this._applyPatternGradientTransform(ctx, filler);\n      }\n    } else {\n      // is a color\n      ctx[property] = filler;\n    }\n    return { offsetX: 0, offsetY: 0 };\n  }\n\n  /**\n   * This function prepare the canvas for a stroke style, and stroke and strokeWidth\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with stroke and strokeWidth defined\n   * @returns\n   */\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    {\n      stroke,\n      strokeWidth,\n    }: Pick<CompleteTextStyleDeclaration, 'stroke' | 'strokeWidth'>,\n  ) {\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineDashOffset = this.strokeDashOffset;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.miterLimit = this.strokeMiterLimit;\n    return this.handleFiller(ctx, 'strokeStyle', stroke!);\n  }\n\n  /**\n   * This function prepare the canvas for a ill style, and fill\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with ill defined\n   * @returns\n   */\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    return this.handleFiller(ctx, 'fillStyle', fill!);\n  }\n\n  /**\n   * @private\n   * @param {String} method\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {String} _char\n   * @param {Number} left Left coordinate\n   * @param {Number} top Top coordinate\n   * @param {Number} lineHeight Height of the line\n   */\n  _renderChar(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    lineIndex: number,\n    charIndex: number,\n    _char: string,\n    left: number,\n    top: number,\n  ) {\n    const decl = this._getStyleDeclaration(lineIndex, charIndex),\n      fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      shouldFill = method === 'fillText' && fullDecl.fill,\n      shouldStroke =\n        method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n    if (!shouldStroke && !shouldFill) {\n      return;\n    }\n    ctx.save();\n\n    ctx.font = this._getFontDeclaration(fullDecl);\n\n    if (decl.textBackgroundColor) {\n      this._removeShadow(ctx);\n    }\n    if (decl.deltaY) {\n      top += decl.deltaY;\n    }\n\n    if (shouldFill) {\n      const fillOffsets = this._setFillStyles(ctx, fullDecl);\n      ctx.fillText(\n        _char,\n        left - fillOffsets.offsetX,\n        top - fillOffsets.offsetY,\n      );\n    }\n\n    if (shouldStroke) {\n      const strokeOffsets = this._setStrokeStyles(ctx, fullDecl);\n      ctx.strokeText(\n        _char,\n        left - strokeOffsets.offsetX,\n        top - strokeOffsets.offsetY,\n      );\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Turns the character into a 'superior figure' (i.e. 'superscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSuperscript(start: number, end: number) {\n    this._setScript(start, end, this.superscript);\n  }\n\n  /**\n   * Turns the character into an 'inferior figure' (i.e. 'subscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSubscript(start: number, end: number) {\n    this._setScript(start, end, this.subscript);\n  }\n\n  /**\n   * Applies 'schema' at given position\n   * @private\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   * @param {Number} schema\n   */\n  protected _setScript(\n    start: number,\n    end: number,\n    schema: {\n      size: number;\n      baseline: number;\n    },\n  ) {\n    const loc = this.get2DCursorLocation(start, true),\n      fontSize = this.getValueOfPropertyAt(\n        loc.lineIndex,\n        loc.charIndex,\n        'fontSize',\n      ),\n      dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n      style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline,\n      };\n    this.setSelectionStyles(style, start, end);\n  }\n\n  /**\n   * @private\n   * @param {Number} lineIndex index text line\n   * @return {Number} Line left offset\n   */\n  _getLineLeftOffset(lineIndex: number): number {\n    const lineWidth = this.getLineWidth(lineIndex),\n      lineDiff = this.width - lineWidth,\n      textAlign = this.textAlign,\n      direction = this.direction,\n      isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n    let leftOffset = 0;\n    if (\n      textAlign === JUSTIFY ||\n      (textAlign === JUSTIFY_CENTER && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_RIGHT && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_LEFT && !isEndOfWrapping)\n    ) {\n      return 0;\n    }\n    if (textAlign === CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (textAlign === JUSTIFY_CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === JUSTIFY_RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (direction === 'rtl') {\n      if (\n        textAlign === RIGHT ||\n        textAlign === JUSTIFY ||\n        textAlign === JUSTIFY_RIGHT\n      ) {\n        leftOffset = 0;\n      } else if (textAlign === LEFT || textAlign === JUSTIFY_LEFT) {\n        leftOffset = -lineDiff;\n      } else if (textAlign === CENTER || textAlign === JUSTIFY_CENTER) {\n        leftOffset = -lineDiff / 2;\n      }\n    }\n    return leftOffset;\n  }\n\n  /**\n   * @private\n   */\n  _clearCache() {\n    this._forceClearCache = false;\n    this.__lineWidths = [];\n    this.__lineHeights = [];\n    this.__charBounds = [];\n  }\n\n  /**\n   * Measure a single line given its index. Used to calculate the initial\n   * text bounding box. The values are calculated and stored in __lineWidths cache.\n   * @private\n   * @param {Number} lineIndex line number\n   * @return {Number} Line width\n   */\n  getLineWidth(lineIndex: number): number {\n    if (this.__lineWidths[lineIndex] !== undefined) {\n      return this.__lineWidths[lineIndex];\n    }\n\n    const { width } = this.measureLine(lineIndex);\n    this.__lineWidths[lineIndex] = width;\n    return width;\n  }\n\n  _getWidthOfCharSpacing() {\n    if (this.charSpacing !== 0) {\n      return (this.fontSize * this.charSpacing) / 1000;\n    }\n    return 0;\n  }\n\n  /**\n   * Retrieves the value of property at given character position\n   * @param {Number} lineIndex the line number\n   * @param {Number} charIndex the character number\n   * @param {String} property the property name\n   * @returns the value of 'property'\n   */\n  getValueOfPropertyAt<T extends StylePropertiesType>(\n    lineIndex: number,\n    charIndex: number,\n    property: T,\n  ): this[T] {\n    const charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n    return (charStyle[property] ?? this[property]) as this[T];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextDecoration(\n    ctx: CanvasRenderingContext2D,\n    type: 'underline' | 'linethrough' | 'overline',\n  ) {\n    if (!this[type] && !this.styleHas(type)) {\n      return;\n    }\n    let topOffset = this._getTopOffset();\n    const leftOffset = this._getLeftOffset(),\n      path = this.path,\n      charSpacing = this._getWidthOfCharSpacing(),\n      offsetAligner =\n        type === 'linethrough' ? 0.5 : type === 'overline' ? 1 : 0,\n      offsetY = this.offsets[type];\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (!this[type] && !this.styleHas(type, i)) {\n        topOffset += heightOfLine;\n        continue;\n      }\n      const line = this._textLines[i];\n      const maxHeight = heightOfLine / this.lineHeight;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxStart = 0;\n      let boxWidth = 0;\n      let lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n      let lastFill = this.getValueOfPropertyAt(i, 0, FILL);\n      let lastTickness = this.getValueOfPropertyAt(\n        i,\n        0,\n        TEXT_DECORATION_THICKNESS,\n      );\n      let currentDecoration = lastDecoration;\n      let currentFill = lastFill;\n      let currentTickness = lastTickness;\n      const top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n      let size = this.getHeightOfChar(i, 0);\n      let dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n      for (let j = 0, jlen = line.length; j < jlen; j++) {\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentDecoration = this.getValueOfPropertyAt(i, j, type);\n        currentFill = this.getValueOfPropertyAt(i, j, FILL);\n        currentTickness = this.getValueOfPropertyAt(\n          i,\n          j,\n          TEXT_DECORATION_THICKNESS,\n        );\n        const currentSize = this.getHeightOfChar(i, j);\n        const currentDy = this.getValueOfPropertyAt(i, j, 'deltaY');\n        if (path && currentDecoration && currentFill) {\n          const finalTickness = (this.fontSize * currentTickness) / 1000;\n          ctx.save();\n          // bug? verify lastFill is a valid fill here.\n          ctx.fillStyle = lastFill as string;\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillRect(\n            -charBox.kernedWidth / 2,\n            offsetY * currentSize + currentDy - offsetAligner * finalTickness,\n            charBox.kernedWidth,\n            finalTickness,\n          );\n          ctx.restore();\n        } else if (\n          (currentDecoration !== lastDecoration ||\n            currentFill !== lastFill ||\n            currentSize !== size ||\n            currentTickness !== lastTickness ||\n            currentDy !== dy) &&\n          boxWidth > 0\n        ) {\n          const finalTickness = (this.fontSize * lastTickness) / 1000;\n          let drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          if (lastDecoration && lastFill && lastTickness) {\n            // bug? verify lastFill is a valid fill here.\n            ctx.fillStyle = lastFill as string;\n            ctx.fillRect(\n              drawStart,\n              top + offsetY * size + dy - offsetAligner * finalTickness,\n              boxWidth,\n              finalTickness,\n            );\n          }\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastDecoration = currentDecoration;\n          lastTickness = currentTickness;\n          lastFill = currentFill;\n          size = currentSize;\n          dy = currentDy;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      let drawStart = leftOffset + lineLeftOffset + boxStart;\n      if (this.direction === 'rtl') {\n        drawStart = this.width - drawStart - boxWidth;\n      }\n      ctx.fillStyle = currentFill as string;\n      const finalTickness = (this.fontSize * currentTickness) / 1000;\n      currentDecoration &&\n        currentFill &&\n        currentTickness &&\n        ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy - offsetAligner * finalTickness,\n          boxWidth - charSpacing,\n          finalTickness,\n        );\n      topOffset += heightOfLine;\n    }\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * return font declaration string for canvas context\n   * @param {Object} [styleObject] object\n   * @returns {String} font declaration formatted for canvas context.\n   */\n  _getFontDeclaration(\n    {\n      fontFamily = this.fontFamily,\n      fontStyle = this.fontStyle,\n      fontWeight = this.fontWeight,\n      fontSize = this.fontSize,\n    }: Partial<\n      Pick<\n        TextStyleDeclaration,\n        'fontFamily' | 'fontStyle' | 'fontWeight' | 'fontSize'\n      >\n    > = {},\n    forMeasuring?: boolean,\n  ): string {\n    const parsedFontFamily =\n      fontFamily.includes(\"'\") ||\n      fontFamily.includes('\"') ||\n      fontFamily.includes(',') ||\n      FabricText.genericFonts.includes(fontFamily.toLowerCase())\n        ? fontFamily\n        : `\"${fontFamily}\"`;\n    return [\n      fontStyle,\n      fontWeight,\n      `${forMeasuring ? this.CACHE_FONT_SIZE : fontSize}px`,\n      parsedFontFamily,\n    ].join(' ');\n  }\n\n  /**\n   * Renders text instance on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    if (!this.visible) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    if (this._forceClearCache) {\n      this.initDimensions();\n    }\n    super.render(ctx);\n  }\n\n  /**\n   * Override this method to customize grapheme splitting\n   * @todo the util `graphemeSplit` needs to be injectable in some way.\n   * is more comfortable to inject the correct util rather than having to override text\n   * in the middle of the prototype chain\n   * @param {string} value\n   * @returns {string[]} array of graphemes\n   */\n  graphemeSplit(value: string): string[] {\n    return graphemeSplit(value);\n  }\n\n  /**\n   * Returns the text as an array of lines.\n   * @param {String} text text to split\n   * @returns  Lines in the text\n   */\n  _splitTextIntoLines(text: string): TextLinesInfo {\n    const lines = text.split(this._reNewline),\n      newLines = new Array<string[]>(lines.length),\n      newLine = ['\\n'];\n    let newText: string[] = [];\n    for (let i = 0; i < lines.length; i++) {\n      newLines[i] = this.graphemeSplit(lines[i]);\n      newText = newText.concat(newLines[i], newLine);\n    }\n    newText.pop();\n    return {\n      _unwrappedLines: newLines,\n      lines: lines,\n      graphemeText: newText,\n      graphemeLines: newLines,\n    };\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject([...additionalProps, ...propertiesToInclude] as K[]),\n      styles: stylesToArray(this.styles, this.text),\n      ...(this.path ? { path: this.path.toObject() } : {}),\n    };\n  }\n\n  set(key: string | any, value?: any) {\n    const { textLayoutProperties } = this.constructor as typeof FabricText;\n    super.set(key, value);\n    let needsDims = false;\n    let isAddingPath = false;\n    if (typeof key === 'object') {\n      for (const _key in key) {\n        if (_key === 'path') {\n          this.setPathInfo();\n        }\n        needsDims = needsDims || textLayoutProperties.includes(_key);\n        isAddingPath = isAddingPath || _key === 'path';\n      }\n    } else {\n      needsDims = textLayoutProperties.includes(key);\n      isAddingPath = key === 'path';\n    }\n    if (isAddingPath) {\n      this.setPathInfo();\n    }\n    if (needsDims && this.initialized) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    return this;\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity\n   */\n  complexity(): number {\n    return 1;\n  }\n\n  /**\n   * List of generic font families\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#generic-name\n   */\n  static genericFonts = [\n    'serif',\n    'sans-serif',\n    'monospace',\n    'cursive',\n    'fantasy',\n    'system-ui',\n    'ui-serif',\n    'ui-sans-serif',\n    'ui-monospace',\n    'ui-rounded',\n    'math',\n    'emoji',\n    'fangsong',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricText.fromElement})\n   * @static\n   * @memberOf Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(\n    'x',\n    'y',\n    'dx',\n    'dy',\n    'font-family',\n    'font-style',\n    'font-weight',\n    'font-size',\n    'letter-spacing',\n    'text-decoration',\n    'text-anchor',\n  );\n\n  /**\n   * Returns FabricText instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf Text\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      FabricText.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    const {\n      textAnchor = LEFT as typeof LEFT | typeof CENTER | typeof RIGHT,\n      textDecoration = '',\n      dx = 0,\n      dy = 0,\n      top = 0,\n      left = 0,\n      fontSize = DEFAULT_SVG_FONT_SIZE,\n      strokeWidth = 1,\n      ...restOfOptions\n    } = { ...options, ...parsedAttributes };\n\n    const textContent = (element.textContent || '')\n      .replace(/^\\s+|\\s+$|\\n+/g, '')\n      .replace(/\\s+/g, ' ');\n\n    // this code here is probably the usual issue for SVG center find\n    // this can later looked at again and probably removed.\n\n    const text = new this(textContent, {\n        left: left + dx,\n        top: top + dy,\n        underline: textDecoration.includes('underline'),\n        overline: textDecoration.includes('overline'),\n        linethrough: textDecoration.includes('line-through'),\n        // we initialize this as 0\n        strokeWidth: 0,\n        fontSize,\n        ...restOfOptions,\n      }),\n      textHeightScaleFactor = text.getScaledHeight() / text.height,\n      lineHeightDiff =\n        (text.height + text.strokeWidth) * text.lineHeight - text.height,\n      scaledDiff = lineHeightDiff * textHeightScaleFactor,\n      textHeight = text.getScaledHeight() + scaledDiff;\n\n    let offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (textAnchor === CENTER) {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (textAnchor === RIGHT) {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top:\n        text.top -\n        (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) /\n          text.lineHeight,\n      strokeWidth,\n    });\n    return text;\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns FabricText instance from an object representation\n   * @param {Object} object plain js Object to create an instance from\n   * @returns {Promise<FabricText>}\n   */\n  static fromObject<\n    T extends TOptions<SerializedTextProps>,\n    S extends FabricText,\n  >(object: T) {\n    return this._fromObject<S>(\n      {\n        ...object,\n        styles: stylesFromArray(object.styles || {}, object.text),\n      },\n      {\n        extraParam: 'text',\n      },\n    );\n  }\n}\n\napplyMixins(FabricText, [TextSVGExportMixin]);\nclassRegistry.setClass(FabricText);\nclassRegistry.setSVGClass(FabricText);\n","import type {\n  DragEventData,\n  DropEventData,\n  TPointerEvent,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { IText } from './IText';\nimport { setStyle } from '../../util/dom_style';\nimport { cloneStyles } from '../../util/internals/cloneStyles';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, NONE } from '../../constants';\n\n/**\n * #### Dragging IText/Textbox Lifecycle\n * - {@link start} is called from `mousedown` {@link IText#_mouseDownHandler} and determines if dragging should start by testing {@link isPointerOverSelection}\n * - if true `mousedown` {@link IText#_mouseDownHandler} is blocked to keep selection\n * - if the pointer moves, canvas fires numerous mousemove {@link Canvas#_onMouseMove} that we make sure **aren't** prevented ({@link IText#shouldStartDragging}) in order for the window to start a drag session\n * - once/if the session starts canvas calls {@link onDragStart} on the active object to determine if dragging should occur\n * - canvas fires relevant drag events that are handled by the handlers defined in this scope\n * - {@link end} is called from `mouseup` {@link IText#mouseUpHandler}, blocking IText default click behavior\n * - in case the drag session didn't occur, {@link end} handles a click, since logic to do so was blocked during `mousedown`\n */\nexport class DraggableTextDelegate {\n  readonly target: IText;\n  private __mouseDownInPlace = false;\n  private __dragStartFired = false;\n  private __isDraggingOver = false;\n  private __dragStartSelection?: {\n    selectionStart: number;\n    selectionEnd: number;\n  };\n  private __dragImageDisposer?: VoidFunction;\n  private _dispose?: () => void;\n\n  constructor(target: IText) {\n    this.target = target;\n    const disposers = [\n      this.target.on('dragenter', this.dragEnterHandler.bind(this)),\n      this.target.on('dragover', this.dragOverHandler.bind(this)),\n      this.target.on('dragleave', this.dragLeaveHandler.bind(this)),\n      this.target.on('dragend', this.dragEndHandler.bind(this)),\n      this.target.on('drop', this.dropHandler.bind(this)),\n    ];\n    this._dispose = () => {\n      disposers.forEach((d) => d());\n      this._dispose = undefined;\n    };\n  }\n\n  isPointerOverSelection(e: TPointerEvent) {\n    const target = this.target;\n    const newSelection = target.getSelectionStartFromPointer(e);\n    return (\n      target.isEditing &&\n      newSelection >= target.selectionStart &&\n      newSelection <= target.selectionEnd &&\n      target.selectionStart < target.selectionEnd\n    );\n  }\n\n  /**\n   * @public override this method to disable dragging and default to mousedown logic\n   */\n  start(e: TPointerEvent) {\n    return (this.__mouseDownInPlace = this.isPointerOverSelection(e));\n  }\n\n  /**\n   * @public override this method to disable dragging without discarding selection\n   */\n  isActive() {\n    return this.__mouseDownInPlace;\n  }\n\n  /**\n   * Ends interaction and sets cursor in case of a click\n   * @returns true if was active\n   */\n  end(e: TPointerEvent) {\n    const active = this.isActive();\n    if (active && !this.__dragStartFired) {\n      // mousedown has been blocked since `active` is true => cursor has not been set.\n      // `__dragStartFired` is false => dragging didn't occur, pointer didn't move and is over selection.\n      // meaning this is actually a click, `active` is a false positive.\n      this.target.setCursorByClick(e);\n      this.target.initDelayedCursor(true);\n    }\n    this.__mouseDownInPlace = false;\n    this.__dragStartFired = false;\n    this.__isDraggingOver = false;\n    return active;\n  }\n\n  getDragStartSelection() {\n    return this.__dragStartSelection;\n  }\n\n  /**\n   * Override to customize the drag image\n   * https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\n   */\n  setDragImage(\n    e: DragEvent,\n    {\n      selectionStart,\n      selectionEnd,\n    }: {\n      selectionStart: number;\n      selectionEnd: number;\n    },\n  ) {\n    const target = this.target;\n    const canvas = target.canvas!;\n    const flipFactor = new Point(target.flipX ? -1 : 1, target.flipY ? -1 : 1);\n    const boundaries = target._getCursorBoundaries(selectionStart);\n    const selectionPosition = new Point(\n      boundaries.left + boundaries.leftOffset,\n      boundaries.top + boundaries.topOffset,\n    ).multiply(flipFactor);\n    const pos = selectionPosition.transform(target.calcTransformMatrix());\n    const pointer = canvas.getScenePoint(e);\n    const diff = pointer.subtract(pos);\n    const retinaScaling = target.getCanvasRetinaScaling();\n    const bbox = target.getBoundingRect();\n    const correction = pos.subtract(new Point(bbox.left, bbox.top));\n    const vpt = canvas.viewportTransform;\n    const offset = correction.add(diff).transform(vpt, true);\n    //  prepare instance for drag image snapshot by making all non selected text invisible\n    const bgc = target.backgroundColor;\n    const styles = cloneStyles(target.styles);\n    target.backgroundColor = '';\n    const styleOverride = {\n      stroke: 'transparent',\n      fill: 'transparent',\n      textBackgroundColor: 'transparent',\n    };\n    target.setSelectionStyles(styleOverride, 0, selectionStart);\n    target.setSelectionStyles(styleOverride, selectionEnd, target.text.length);\n    target.dirty = true;\n    const dragImage = target.toCanvasElement({\n      enableRetinaScaling: canvas.enableRetinaScaling,\n      viewportTransform: true,\n    });\n    // restore values\n    target.backgroundColor = bgc;\n    target.styles = styles;\n    target.dirty = true;\n    //  position drag image offscreen\n    setStyle(dragImage, {\n      position: 'fixed',\n      left: `${-dragImage.width}px`,\n      border: NONE,\n      width: `${dragImage.width / retinaScaling}px`,\n      height: `${dragImage.height / retinaScaling}px`,\n    });\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    this.__dragImageDisposer = () => {\n      dragImage.remove();\n    };\n    getDocumentFromElement(\n      (e.target || this.target.hiddenTextarea)! as HTMLElement,\n    ).body.appendChild(dragImage);\n    e.dataTransfer?.setDragImage(dragImage, offset.x, offset.y);\n  }\n\n  /**\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drag source\n   */\n  onDragStart(e: DragEvent): boolean {\n    this.__dragStartFired = true;\n    const target = this.target;\n    const active = this.isActive();\n    if (active && e.dataTransfer) {\n      const selection = (this.__dragStartSelection = {\n        selectionStart: target.selectionStart,\n        selectionEnd: target.selectionEnd,\n      });\n      const value = target._text\n        .slice(selection.selectionStart, selection.selectionEnd)\n        .join('');\n      const data = { text: target.text, value, ...selection };\n      e.dataTransfer.setData('text/plain', value);\n      e.dataTransfer.setData(\n        'application/fabric',\n        JSON.stringify({\n          value: value,\n          styles: target.getSelectionStyles(\n            selection.selectionStart,\n            selection.selectionEnd,\n            true,\n          ),\n        }),\n      );\n      e.dataTransfer.effectAllowed = 'copyMove';\n      this.setDragImage(e, data);\n    }\n    target.abortCursorAnimation();\n    return active;\n  }\n\n  /**\n   * use {@link targetCanDrop} to respect overriding\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent): boolean {\n    if (\n      this.target.editable &&\n      !this.target.getActiveControl() &&\n      !e.defaultPrevented\n    ) {\n      if (this.isActive() && this.__dragStartSelection) {\n        //  drag source trying to drop over itself\n        //  allow dropping only outside of drag start selection\n        const index = this.target.getSelectionStartFromPointer(e);\n        const dragStartSelection = this.__dragStartSelection;\n        return (\n          index < dragStartSelection.selectionStart ||\n          index > dragStartSelection.selectionEnd\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * in order to respect overriding {@link IText#canDrop} we call that instead of calling {@link canDrop} directly\n   */\n  protected targetCanDrop(e: DragEvent) {\n    return this.target.canDrop(e);\n  }\n\n  dragEnterHandler({ e }: DragEventData) {\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    }\n  }\n\n  dragOverHandler(ev: DragEventData) {\n    const { e } = ev;\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    } else if (this.__isDraggingOver && !canDrop) {\n      //  drop state has changed\n      this.__isDraggingOver = false;\n    }\n    if (this.__isDraggingOver) {\n      //  can be dropped, inform browser\n      e.preventDefault();\n      //  inform event subscribers\n      ev.canDrop = true;\n      ev.dropTarget = this.target;\n    }\n  }\n\n  dragLeaveHandler() {\n    if (this.__isDraggingOver || this.isActive()) {\n      this.__isDraggingOver = false;\n    }\n  }\n\n  /**\n   * Override the `text/plain | application/fabric` types of {@link DragEvent#dataTransfer}\n   * in order to change the drop value or to customize styling respectively, by listening to the `drop:before` event\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\n   */\n  dropHandler(ev: DropEventData) {\n    const { e } = ev;\n    const didDrop = e.defaultPrevented;\n    this.__isDraggingOver = false;\n    // inform browser that the drop has been accepted\n    e.preventDefault();\n    let insert = e.dataTransfer?.getData('text/plain');\n    if (insert && !didDrop) {\n      const target = this.target;\n      const canvas = target.canvas!;\n      let insertAt = target.getSelectionStartFromPointer(e);\n      const { styles } = (\n        e.dataTransfer!.types.includes('application/fabric')\n          ? JSON.parse(e.dataTransfer!.getData('application/fabric'))\n          : {}\n      ) as { styles: TextStyleDeclaration[] };\n      const trailing = insert[Math.max(0, insert.length - 1)];\n      const selectionStartOffset = 0;\n      //  drag and drop in same instance\n      if (this.__dragStartSelection) {\n        const selectionStart = this.__dragStartSelection.selectionStart;\n        const selectionEnd = this.__dragStartSelection.selectionEnd;\n        if (insertAt > selectionStart && insertAt <= selectionEnd) {\n          insertAt = selectionStart;\n        } else if (insertAt > selectionEnd) {\n          insertAt -= selectionEnd - selectionStart;\n        }\n        target.removeChars(selectionStart, selectionEnd);\n        // prevent `dragend` from handling event\n        delete this.__dragStartSelection;\n      }\n      //  remove redundant line break\n      if (\n        target._reNewline.test(trailing) &&\n        (target._reNewline.test(target._text[insertAt]) ||\n          insertAt === target._text.length)\n      ) {\n        insert = insert.trimEnd();\n      }\n      //  inform subscribers\n      ev.didDrop = true;\n      ev.dropTarget = target;\n      //  finalize\n      target.insertChars(insert, styles, insertAt);\n      // can this part be moved in an outside event? andrea to check.\n      canvas.setActiveObject(target);\n      target.enterEditing(e);\n      target.selectionStart = Math.min(\n        insertAt + selectionStartOffset,\n        target._text.length,\n      );\n      target.selectionEnd = Math.min(\n        target.selectionStart + insert.length,\n        target._text.length,\n      );\n      target.hiddenTextarea!.value = target.text;\n      target._updateTextarea();\n      target.hiddenTextarea!.focus();\n      target.fire(CHANGED, {\n        index: insertAt + selectionStartOffset,\n        action: 'drop',\n      });\n      canvas.fire('text:changed', { target });\n      canvas.contextTopDirty = true;\n      canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * fired only on the drag source after drop (if occurred)\n   * handle changes to the drag source in case of a drop on another object or a cancellation\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   */\n  dragEndHandler({ e }: DragEventData) {\n    if (this.isActive() && this.__dragStartFired) {\n      //  once the drop event finishes we check if we need to change the drag source\n      //  if the drag source received the drop we bail out since the drop handler has already handled logic\n      if (this.__dragStartSelection) {\n        const target = this.target;\n        const canvas = this.target.canvas!;\n        const { selectionStart, selectionEnd } = this.__dragStartSelection;\n        const dropEffect = e.dataTransfer?.dropEffect || NONE;\n        if (dropEffect === NONE) {\n          // pointer is back over selection\n          target.selectionStart = selectionStart;\n          target.selectionEnd = selectionEnd;\n          target._updateTextarea();\n          target.hiddenTextarea!.focus();\n        } else {\n          target.clearContextTop();\n          if (dropEffect === 'move') {\n            target.removeChars(selectionStart, selectionEnd);\n            target.selectionStart = target.selectionEnd = selectionStart;\n            target.hiddenTextarea &&\n              (target.hiddenTextarea.value = target.text);\n            target._updateTextarea();\n            target.fire(CHANGED, {\n              index: selectionStart,\n              action: 'dragend',\n            });\n            canvas.fire('text:changed', { target });\n            canvas.requestRenderAll();\n          }\n          target.exitEditing();\n        }\n      }\n    }\n\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    delete this.__dragImageDisposer;\n    delete this.__dragStartSelection;\n    this.__isDraggingOver = false;\n  }\n\n  dispose() {\n    this._dispose && this._dispose();\n  }\n}\n","import type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { FabricObject } from '../Object/FabricObject';\nimport { FabricText } from '../Text/Text';\nimport { animate } from '../../util/animation/animate';\nimport type { TOnAnimationChangeCallback } from '../../util/animation/types';\nimport type { ValueAnimation } from '../../util/animation/ValueAnimation';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport type { TOptions } from '../../typedefs';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { LEFT, MODIFIED, RIGHT, reNewline } from '../../constants';\nimport type { IText } from './IText';\n\n/**\n *  extend this regex to support non english languages\n *\n *  - ` `      Matches a SPACE character (char code 32).\n *  - `\\n`     Matches a LINE FEED character (char code 10).\n *  - `\\.`     Matches a \".\" character (char code 46).\n *  - `,`      Matches a \",\" character (char code 44).\n *  - `;`      Matches a \";\" character (char code 59).\n *  - `!`      Matches a \"!\" character (char code 33).\n *  - `\\?`     Matches a \"?\" character (char code 63).\n *  - `\\-`     Matches a \"-\" character (char code 45).\n */\n// eslint-disable-next-line no-useless-escape\nconst reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\nexport type ITextEvents = ObjectEvents & {\n  'selection:changed': never;\n  changed: never | { index: number; action: string };\n  'editing:entered': never | { e: TPointerEvent };\n  'editing:exited': never;\n};\n\nexport abstract class ITextBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends FabricText<Props, SProps, EventSpec> {\n  declare abstract isEditing: boolean;\n  declare abstract cursorDelay: number;\n  declare abstract selectionStart: number;\n  declare abstract selectionEnd: number;\n  declare abstract cursorDuration: number;\n  declare abstract editable: boolean;\n  declare abstract editingBorderColor: string;\n\n  declare abstract compositionStart: number;\n  declare abstract compositionEnd: number;\n\n  declare abstract hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * Helps determining when the text is in composition, so that the cursor\n   * rendering is altered.\n   */\n  protected declare inCompositionMode: boolean;\n\n  protected declare _reSpace: RegExp;\n  private declare _currentTickState?: ValueAnimation;\n  private declare _currentTickCompleteState?: ValueAnimation;\n  protected _currentCursorOpacity = 1;\n  private declare _textBeforeEdit: string;\n  protected declare __selectionStartOnMouseDown: number;\n\n  /**\n   * Keeps track if the IText object was selected before the actual click.\n   * This because we want to delay enter editing by a click.\n   */\n  protected declare selected: boolean;\n  protected declare cursorOffsetCache: { left?: number; top?: number };\n  protected declare _savedProps?: {\n    hasControls: boolean;\n    borderColor: string;\n    lockMovementX: boolean;\n    lockMovementY: boolean;\n    selectable: boolean;\n    hoverCursor: CSSStyleDeclaration['cursor'] | null;\n    defaultCursor?: CSSStyleDeclaration['cursor'];\n    moveCursor?: CSSStyleDeclaration['cursor'];\n  };\n  protected declare _selectionDirection: 'left' | 'right' | null;\n\n  abstract initHiddenTextarea(): void;\n  abstract _fireSelectionChanged(): void;\n  abstract renderCursorOrSelection(): void;\n  abstract getSelectionStartFromPointer(e: TPointerEvent): number;\n  abstract _getCursorBoundaries(\n    index: number,\n    skipCaching?: boolean,\n  ): {\n    left: number;\n    top: number;\n    leftOffset: number;\n    topOffset: number;\n  };\n\n  /**\n   * Initializes all the interactive behavior of IText\n   */\n  initBehavior() {\n    this._tick = this._tick.bind(this);\n    this._onTickComplete = this._onTickComplete.bind(this);\n    this.updateSelectionOnMouseMove =\n      this.updateSelectionOnMouseMove.bind(this);\n  }\n\n  onDeselect(options?: { e?: TPointerEvent; object?: FabricObject }) {\n    this.isEditing && this.exitEditing();\n    this.selected = false;\n    return super.onDeselect(options);\n  }\n\n  /**\n   * @private\n   */\n  _animateCursor({\n    toValue,\n    duration,\n    delay,\n    onComplete,\n  }: {\n    toValue: number;\n    duration: number;\n    delay?: number;\n    onComplete?: TOnAnimationChangeCallback<number, void>;\n  }) {\n    return animate({\n      startValue: this._currentCursorOpacity,\n      endValue: toValue,\n      duration,\n      delay,\n      onComplete,\n      abort: () =>\n        !this.canvas ||\n        // we do not want to animate a selection, only cursor\n        this.selectionStart !== this.selectionEnd,\n      onChange: (value) => {\n        this._currentCursorOpacity = value;\n        this.renderCursorOrSelection();\n      },\n    });\n  }\n\n  /**\n   * changes the cursor from visible to invisible\n   */\n  private _tick(delay?: number) {\n    this._currentTickState = this._animateCursor({\n      toValue: 0,\n      duration: this.cursorDuration / 2,\n      delay: Math.max(delay || 0, 100),\n      onComplete: this._onTickComplete,\n    });\n  }\n\n  /**\n   * Changes the cursor from invisible to visible\n   */\n  private _onTickComplete() {\n    this._currentTickCompleteState?.abort();\n    this._currentTickCompleteState = this._animateCursor({\n      toValue: 1,\n      duration: this.cursorDuration,\n      onComplete: this._tick,\n    });\n  }\n\n  /**\n   * Initializes delayed cursor\n   */\n  initDelayedCursor(restart?: boolean) {\n    this.abortCursorAnimation();\n    this._tick(restart ? 0 : this.cursorDelay);\n  }\n\n  /**\n   * Aborts cursor animation, clears all timeouts and clear textarea context if necessary\n   */\n  abortCursorAnimation() {\n    let shouldClear = false;\n    [this._currentTickState, this._currentTickCompleteState].forEach(\n      (cursorAnimation) => {\n        if (cursorAnimation && !cursorAnimation.isDone()) {\n          shouldClear = true;\n          cursorAnimation.abort();\n        }\n      },\n    );\n\n    this._currentCursorOpacity = 1;\n\n    //  make sure we clear context even if instance is not editing\n    if (shouldClear) {\n      this.clearContextTop();\n    }\n  }\n\n  /**\n   * Restart tue cursor animation if either is in complete state ( between animations )\n   * or if it never started before\n   */\n  restartCursorIfNeeded() {\n    if (\n      [this._currentTickState, this._currentTickCompleteState].some(\n        (cursorAnimation) => !cursorAnimation || cursorAnimation.isDone(),\n      )\n    ) {\n      this.initDelayedCursor();\n    }\n  }\n\n  /**\n   * Selects entire text\n   */\n  selectAll() {\n    this.selectionStart = 0;\n    this.selectionEnd = this._text.length;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Selects entire text and updates the visual state\n   */\n  cmdAll() {\n    this.selectAll();\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * Returns selected text\n   * @return {String}\n   */\n  getSelectedText(): string {\n    return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n  }\n\n  /**\n   * Find new selection index representing start of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    // remove space before cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index--;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    // remove space after cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index++;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Find new selection index representing start of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    while (!/\\n/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Finds index corresponding to beginning or end of a word\n   * @param {Number} selectionStart Index of a character\n   * @param {Number} direction 1 or -1\n   * @return {Number} Index of the beginning or end of a word\n   */\n  searchWordBoundary(selectionStart: number, direction: 1 | -1): number {\n    const text = this._text;\n    // if we land on a space we move the cursor backwards\n    // if we are searching boundary end we move the cursor backwards ONLY if we don't land on a line break\n    let index =\n        selectionStart > 0 &&\n        this._reSpace.test(text[selectionStart]) &&\n        (direction === -1 || !reNewline.test(text[selectionStart - 1]))\n          ? selectionStart - 1\n          : selectionStart,\n      _char = text[index];\n    while (index > 0 && index < text.length && !reNonWord.test(_char)) {\n      index += direction;\n      _char = text[index];\n    }\n    if (direction === -1 && reNonWord.test(_char)) {\n      index++;\n    }\n    return index;\n  }\n\n  /**\n   * Selects the word that contains the char at index selectionStart\n   * @param {Number} selectionStart Index of a character\n   */\n  selectWord(selectionStart?: number) {\n    selectionStart = selectionStart ?? this.selectionStart;\n    // search backwards\n    const newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n      // search forward\n      newSelectionEnd = Math.max(\n        newSelectionStart,\n        this.searchWordBoundary(selectionStart, 1),\n      );\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    // remove next major, for now it renders twice :(\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * Selects the line that contains selectionStart\n   * @param {Number} selectionStart Index of a character\n   */\n  selectLine(selectionStart?: number) {\n    selectionStart = selectionStart ?? this.selectionStart;\n    const newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n      newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n  }\n\n  /**\n   * Enters editing state\n   */\n  enterEditing(e?: TPointerEvent) {\n    if (this.isEditing || !this.editable) {\n      return;\n    }\n    this.enterEditingImpl();\n    this.fire('editing:entered', e ? { e } : undefined);\n    this._fireSelectionChanged();\n    if (this.canvas) {\n      this.canvas.fire('text:editing:entered', {\n        target: this as unknown as IText,\n        e,\n      });\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * runs the actual logic that enter from editing state, see {@link enterEditing}\n   */\n  enterEditingImpl() {\n    if (this.canvas) {\n      this.canvas.calcOffset();\n      this.canvas.textEditingManager.exitTextEditing();\n    }\n\n    this.isEditing = true;\n\n    this.initHiddenTextarea();\n    this.hiddenTextarea!.focus();\n    this.hiddenTextarea!.value = this.text;\n    this._updateTextarea();\n    this._saveEditingProps();\n    this._setEditingProps();\n    this._textBeforeEdit = this.text;\n\n    this._tick();\n  }\n\n  /**\n   * called by {@link Canvas#textEditingManager}\n   */\n  updateSelectionOnMouseMove(e: TPointerEvent) {\n    if (this.getActiveControl()) {\n      return;\n    }\n\n    const el = this.hiddenTextarea!;\n    // regain focus\n    getDocumentFromElement(el).activeElement !== el && el.focus();\n\n    const newSelectionStart = this.getSelectionStartFromPointer(e),\n      currentStart = this.selectionStart,\n      currentEnd = this.selectionEnd;\n    if (\n      (newSelectionStart !== this.__selectionStartOnMouseDown ||\n        currentStart === currentEnd) &&\n      (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n    ) {\n      return;\n    }\n    if (newSelectionStart > this.__selectionStartOnMouseDown) {\n      this.selectionStart = this.__selectionStartOnMouseDown;\n      this.selectionEnd = newSelectionStart;\n    } else {\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = this.__selectionStartOnMouseDown;\n    }\n    if (\n      this.selectionStart !== currentStart ||\n      this.selectionEnd !== currentEnd\n    ) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setEditingProps() {\n    this.hoverCursor = 'text';\n\n    if (this.canvas) {\n      this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n    }\n\n    this.borderColor = this.editingBorderColor;\n    this.hasControls = this.selectable = false;\n    this.lockMovementX = this.lockMovementY = true;\n  }\n\n  /**\n   * convert from textarea to grapheme indexes\n   */\n  fromStringToGraphemeSelection(start: number, end: number, text: string) {\n    const smallerTextStart = text.slice(0, start),\n      graphemeStart = this.graphemeSplit(smallerTextStart).length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = text.slice(start, end),\n      graphemeEnd = this.graphemeSplit(smallerTextEnd).length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * convert from fabric to textarea values\n   */\n  fromGraphemeToStringSelection(\n    start: number,\n    end: number,\n    graphemes: string[],\n  ) {\n    const smallerTextStart = graphemes.slice(0, start),\n      graphemeStart = smallerTextStart.join('').length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = graphemes.slice(start, end),\n      graphemeEnd = smallerTextEnd.join('').length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _updateTextarea() {\n    this.cursorOffsetCache = {};\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    if (!this.inCompositionMode) {\n      const newSelection = this.fromGraphemeToStringSelection(\n        this.selectionStart,\n        this.selectionEnd,\n        this._text,\n      );\n      this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n      this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateFromTextArea() {\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    this.cursorOffsetCache = {};\n    const textarea = this.hiddenTextarea;\n    this.text = textarea.value;\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    const newSelection = this.fromStringToGraphemeSelection(\n      textarea.selectionStart,\n      textarea.selectionEnd,\n      textarea.value,\n    );\n    this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n    if (!this.inCompositionMode) {\n      this.selectionStart = newSelection.selectionStart;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateTextareaPosition() {\n    if (this.selectionStart === this.selectionEnd) {\n      const style = this._calcTextareaPosition();\n      this.hiddenTextarea!.style.left = style.left;\n      this.hiddenTextarea!.style.top = style.top;\n    }\n  }\n\n  /**\n   * @private\n   * @return {Object} style contains style for hiddenTextarea\n   */\n  _calcTextareaPosition() {\n    if (!this.canvas) {\n      return { left: '1px', top: '1px' };\n    }\n    const desiredPosition = this.inCompositionMode\n        ? this.compositionStart\n        : this.selectionStart,\n      boundaries = this._getCursorBoundaries(desiredPosition),\n      cursorLocation = this.get2DCursorLocation(desiredPosition),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex = cursorLocation.charIndex,\n      charHeight =\n        this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') *\n        this.lineHeight,\n      leftOffset = boundaries.leftOffset,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      upperCanvas = this.canvas.upperCanvasEl,\n      upperCanvasWidth = upperCanvas.width / retinaScaling,\n      upperCanvasHeight = upperCanvas.height / retinaScaling,\n      maxWidth = upperCanvasWidth - charHeight,\n      maxHeight = upperCanvasHeight - charHeight;\n\n    const p = new Point(\n      boundaries.left + leftOffset,\n      boundaries.top + boundaries.topOffset + charHeight,\n    )\n      .transform(this.calcTransformMatrix())\n      .transform(this.canvas.viewportTransform)\n      .multiply(\n        new Point(\n          upperCanvas.clientWidth / upperCanvasWidth,\n          upperCanvas.clientHeight / upperCanvasHeight,\n        ),\n      );\n\n    if (p.x < 0) {\n      p.x = 0;\n    }\n    if (p.x > maxWidth) {\n      p.x = maxWidth;\n    }\n    if (p.y < 0) {\n      p.y = 0;\n    }\n    if (p.y > maxHeight) {\n      p.y = maxHeight;\n    }\n\n    // add canvas offset on document\n    p.x += this.canvas._offset.left;\n    p.y += this.canvas._offset.top;\n\n    return {\n      left: `${p.x}px`,\n      top: `${p.y}px`,\n      fontSize: `${charHeight}px`,\n      charHeight: charHeight,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _saveEditingProps() {\n    this._savedProps = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      lockMovementX: this.lockMovementX,\n      lockMovementY: this.lockMovementY,\n      hoverCursor: this.hoverCursor,\n      selectable: this.selectable,\n      defaultCursor: this.canvas && this.canvas.defaultCursor,\n      moveCursor: this.canvas && this.canvas.moveCursor,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _restoreEditingProps() {\n    if (!this._savedProps) {\n      return;\n    }\n\n    this.hoverCursor = this._savedProps.hoverCursor;\n    this.hasControls = this._savedProps.hasControls;\n    this.borderColor = this._savedProps.borderColor;\n    this.selectable = this._savedProps.selectable;\n    this.lockMovementX = this._savedProps.lockMovementX;\n    this.lockMovementY = this._savedProps.lockMovementY;\n\n    if (this.canvas) {\n      this.canvas.defaultCursor =\n        this._savedProps.defaultCursor || this.canvas.defaultCursor;\n      this.canvas.moveCursor =\n        this._savedProps.moveCursor || this.canvas.moveCursor;\n    }\n\n    delete this._savedProps;\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * Please use exitEditingImpl, this function was kept to avoid breaking changes.\n   * Will be removed in fabric 7.0\n   * @deprecated use \"exitEditingImpl\"\n   */\n  protected _exitEditing() {\n    const hiddenTextarea = this.hiddenTextarea;\n    this.selected = false;\n    this.isEditing = false;\n\n    if (hiddenTextarea) {\n      hiddenTextarea.blur && hiddenTextarea.blur();\n      hiddenTextarea.parentNode &&\n        hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n    }\n    this.hiddenTextarea = null;\n    this.abortCursorAnimation();\n    this.selectionStart !== this.selectionEnd && this.clearContextTop();\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * But it does not fire events\n   */\n  exitEditingImpl() {\n    this._exitEditing();\n    this.selectionEnd = this.selectionStart;\n    this._restoreEditingProps();\n    if (this._forceClearCache) {\n      this.initDimensions();\n      this.setCoords();\n    }\n  }\n\n  /**\n   * Exits from editing state and fires relevant events\n   */\n  exitEditing() {\n    const isTextChanged = this._textBeforeEdit !== this.text;\n    this.exitEditingImpl();\n\n    this.fire('editing:exited');\n    isTextChanged && this.fire(MODIFIED);\n    if (this.canvas) {\n      this.canvas.fire('text:editing:exited', {\n        target: this as unknown as IText,\n      });\n      // todo: evaluate add an action to this event\n      isTextChanged && this.canvas.fire('object:modified', { target: this });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _removeExtraneousStyles() {\n    for (const prop in this.styles) {\n      if (!this._textLines[prop as unknown as number]) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * remove and reflow a style block from start to end.\n   * @param {Number} start linear start position for removal (included in removal)\n   * @param {Number} end linear end position for removal ( excluded from removal )\n   */\n  removeStyleFromTo(start: number, end: number) {\n    const { lineIndex: lineStart, charIndex: charStart } =\n        this.get2DCursorLocation(start, true),\n      { lineIndex: lineEnd, charIndex: charEnd } = this.get2DCursorLocation(\n        end,\n        true,\n      );\n    if (lineStart !== lineEnd) {\n      // step1 remove the trailing of lineStart\n      if (this.styles[lineStart]) {\n        for (\n          let i = charStart;\n          i < this._unwrappedTextLines[lineStart].length;\n          i++\n        ) {\n          delete this.styles[lineStart][i];\n        }\n      }\n      // step2 move the trailing of lineEnd to lineStart if needed\n      if (this.styles[lineEnd]) {\n        for (\n          let i = charEnd;\n          i < this._unwrappedTextLines[lineEnd].length;\n          i++\n        ) {\n          const styleObj = this.styles[lineEnd][i];\n          if (styleObj) {\n            this.styles[lineStart] || (this.styles[lineStart] = {});\n            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n          }\n        }\n      }\n      // step3 detects lines will be completely removed.\n      for (let i = lineStart + 1; i <= lineEnd; i++) {\n        delete this.styles[i];\n      }\n      // step4 shift remaining lines.\n      this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n    } else {\n      // remove and shift left on the same line\n      if (this.styles[lineStart]) {\n        const styleObj = this.styles[lineStart];\n        const diff = charEnd - charStart;\n        for (let i = charStart; i < charEnd; i++) {\n          delete styleObj[i];\n        }\n        for (const char in this.styles[lineStart]) {\n          const numericChar = parseInt(char, 10);\n          if (numericChar >= charEnd) {\n            styleObj[numericChar - diff] = styleObj[char];\n            delete styleObj[char];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Shifts line styles up or down\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} offset Can any number?\n   */\n  shiftLineStyles(lineIndex: number, offset: number) {\n    const clonedStyles = Object.assign({}, this.styles);\n    for (const line in this.styles) {\n      const numericLine = parseInt(line, 10);\n      if (numericLine > lineIndex) {\n        this.styles[numericLine + offset] = clonedStyles[numericLine];\n        if (!clonedStyles[numericLine - offset]) {\n          delete this.styles[numericLine];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle insertion of more consecutive style lines for when one or more\n   * newlines gets added to the text. Since current style needs to be shifted\n   * first we shift the current style of the number lines needed, then we add\n   * new lines from the last to the first.\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} qty number of lines to add\n   * @param {Array} copiedStyle Array of objects styles\n   */\n  insertNewlineStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    qty: number,\n    copiedStyle?: { [index: number]: TextStyleDeclaration },\n  ) {\n    const newLineStyles: { [index: number]: TextStyleDeclaration } = {};\n    const originalLineLength = this._unwrappedTextLines[lineIndex].length;\n    const isEndOfLine = originalLineLength === charIndex;\n\n    let someStyleIsCarryingOver = false;\n    qty || (qty = 1);\n    this.shiftLineStyles(lineIndex, qty);\n    const currentCharStyle = this.styles[lineIndex]\n      ? this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1]\n      : undefined;\n\n    // we clone styles of all chars\n    // after cursor onto the current line\n    for (const index in this.styles[lineIndex]) {\n      const numIndex = parseInt(index, 10);\n      if (numIndex >= charIndex) {\n        someStyleIsCarryingOver = true;\n        newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n        // remove lines from the previous line since they're on a new line now\n        if (!(isEndOfLine && charIndex === 0)) {\n          delete this.styles[lineIndex][index];\n        }\n      }\n    }\n    let styleCarriedOver = false;\n    if (someStyleIsCarryingOver && !isEndOfLine) {\n      // if is end of line, the extra style we copied\n      // is probably not something we want\n      this.styles[lineIndex + qty] = newLineStyles;\n      styleCarriedOver = true;\n    }\n    if (styleCarriedOver || originalLineLength > charIndex) {\n      // skip the last line of since we already prepared it.\n      // or contains text without style that we don't want to style\n      // just because it changed lines\n      qty--;\n    }\n    // for the all the lines or all the other lines\n    // we clone current char style onto the next (otherwise empty) line\n    while (qty > 0) {\n      if (copiedStyle && copiedStyle[qty - 1]) {\n        this.styles[lineIndex + qty] = {\n          0: { ...copiedStyle[qty - 1] },\n        };\n      } else if (currentCharStyle) {\n        this.styles[lineIndex + qty] = {\n          0: { ...currentCharStyle },\n        };\n      } else {\n        delete this.styles[lineIndex + qty];\n      }\n      qty--;\n    }\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Inserts style object for a given line/char index\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} quantity number Style object to insert, if given\n   * @param {Array} copiedStyle array of style objects\n   */\n  insertCharStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    quantity: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    if (!this.styles) {\n      this.styles = {};\n    }\n    const currentLineStyles = this.styles[lineIndex],\n      currentLineStylesCloned = currentLineStyles\n        ? { ...currentLineStyles }\n        : {};\n\n    quantity || (quantity = 1);\n    // shift all char styles by quantity forward\n    // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n    for (const index in currentLineStylesCloned) {\n      const numericIndex = parseInt(index, 10);\n      if (numericIndex >= charIndex) {\n        currentLineStyles[numericIndex + quantity] =\n          currentLineStylesCloned[numericIndex];\n        // only delete the style if there was nothing moved there\n        if (!currentLineStylesCloned[numericIndex - quantity]) {\n          delete currentLineStyles[numericIndex];\n        }\n      }\n    }\n    this._forceClearCache = true;\n    if (copiedStyle) {\n      while (quantity--) {\n        if (!Object.keys(copiedStyle[quantity]).length) {\n          continue;\n        }\n        if (!this.styles[lineIndex]) {\n          this.styles[lineIndex] = {};\n        }\n        this.styles[lineIndex][charIndex + quantity] = {\n          ...copiedStyle[quantity],\n        };\n      }\n      return;\n    }\n    if (!currentLineStyles) {\n      return;\n    }\n    const newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n    while (newStyle && quantity--) {\n      this.styles[lineIndex][charIndex + quantity] = { ...newStyle };\n    }\n  }\n\n  /**\n   * Inserts style object(s)\n   * @param {Array} insertedText Characters at the location where style is inserted\n   * @param {Number} start cursor index for inserting style\n   * @param {Array} [copiedStyle] array of style objects to insert.\n   */\n  insertNewStyleBlock(\n    insertedText: string[],\n    start: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    const cursorLoc = this.get2DCursorLocation(start, true),\n      addedLines = [0];\n    let linesLength = 0;\n    // get an array of how many char per lines are being added.\n    for (let i = 0; i < insertedText.length; i++) {\n      if (insertedText[i] === '\\n') {\n        linesLength++;\n        addedLines[linesLength] = 0;\n      } else {\n        addedLines[linesLength]++;\n      }\n    }\n    // for the first line copy the style from the current char position.\n    if (addedLines[0] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex,\n        addedLines[0],\n        copiedStyle,\n      );\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n    }\n    linesLength &&\n      this.insertNewlineStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex + addedLines[0],\n        linesLength,\n      );\n    let i;\n    for (i = 1; i < linesLength; i++) {\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(\n          cursorLoc.lineIndex + i,\n          0,\n          addedLines[i],\n          copiedStyle,\n        );\n      } else if (copiedStyle) {\n        // this test is required in order to close #6841\n        // when a pasted buffer begins with a newline then\n        // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n        // may be undefined for some reason\n        if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n      }\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n    }\n    if (addedLines[i] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex + i,\n        0,\n        addedLines[i],\n        copiedStyle,\n      );\n    }\n  }\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars(start: number, end: number = start + 1) {\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars(\n    text: string,\n    style: TextStyleDeclaration[] | undefined,\n    start: number,\n    end: number = start,\n  ) {\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    const graphemes = this.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [\n      ...this._text.slice(0, start),\n      ...graphemes,\n      ...this._text.slice(end),\n    ];\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * Set the selectionStart and selectionEnd according to the new position of cursor\n   * mimic the key - mouse navigation when shift is pressed.\n   */\n  setSelectionStartEndWithShift(\n    start: number,\n    end: number,\n    newSelection: number,\n  ) {\n    if (newSelection <= start) {\n      if (end === start) {\n        this._selectionDirection = LEFT;\n      } else if (this._selectionDirection === RIGHT) {\n        this._selectionDirection = LEFT;\n        this.selectionEnd = start;\n      }\n      this.selectionStart = newSelection;\n    } else if (newSelection > start && newSelection < end) {\n      if (this._selectionDirection === RIGHT) {\n        this.selectionEnd = newSelection;\n      } else {\n        this.selectionStart = newSelection;\n      }\n    } else {\n      // newSelection is > selection start and end\n      if (end === start) {\n        this._selectionDirection = RIGHT;\n      } else if (this._selectionDirection === LEFT) {\n        this._selectionDirection = RIGHT;\n        this.selectionStart = end;\n      }\n      this.selectionEnd = newSelection;\n    }\n  }\n}\n","import { config } from '../../config';\nimport { getFabricDocument, getEnv } from '../../env';\nimport { capValue } from '../../util/misc/capValue';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextBehavior } from './ITextBehavior';\nimport type { TKeyMapIText } from './constants';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, LEFT, RIGHT } from '../../constants';\nimport type { IText } from './IText';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\n\nexport abstract class ITextKeyBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextBehavior<Props, SProps, EventSpec> {\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behavior for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the IText or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = Object.assign({}, this.keysMap);\n   * The function must be in IText.prototype.myFunction And will receive event as args[0]\n   */\n  declare keysMap: TKeyMapIText;\n\n  declare keysMapRtl: TKeyMapIText;\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  declare ctrlKeysMapUp: TKeyMapIText;\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  declare ctrlKeysMapDown: TKeyMapIText;\n\n  declare hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * DOM container to append the hiddenTextarea.\n   * An alternative to attaching to the document.body.\n   * Useful to reduce laggish redraw of the full document.body tree and\n   * also with modals event capturing that won't let the textarea take focus.\n   * @type HTMLElement\n   * @default\n   */\n  declare hiddenTextareaContainer?: HTMLElement | null;\n\n  private declare _clickHandlerInitialized: boolean;\n  private declare _copyDone: boolean;\n  private declare fromPaste: boolean;\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea() {\n    const doc =\n      (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n      getFabricDocument();\n    const textarea = doc.createElement('textarea');\n    Object.entries({\n      autocapitalize: 'off',\n      autocorrect: 'off',\n      autocomplete: 'off',\n      spellcheck: 'false',\n      'data-fabric': 'textarea',\n      wrap: 'off',\n    }).map(([attribute, value]) => textarea.setAttribute(attribute, value));\n    const { top, left, fontSize } = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    textarea.style.cssText = `position: absolute; top: ${top}; left: ${left}; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: ${fontSize};`;\n\n    (this.hiddenTextareaContainer || doc.body).appendChild(textarea);\n\n    Object.entries({\n      blur: 'blur',\n      keydown: 'onKeyDown',\n      keyup: 'onKeyUp',\n      input: 'onInput',\n      copy: 'copy',\n      cut: 'copy',\n      paste: 'paste',\n      compositionstart: 'onCompositionStart',\n      compositionupdate: 'onCompositionUpdate',\n      compositionend: 'onCompositionEnd',\n    } as Record<string, keyof this>).map(([eventName, handler]) =>\n      textarea.addEventListener(\n        eventName,\n        (this[handler] as EventListener).bind(this),\n      ),\n    );\n    this.hiddenTextarea = textarea;\n  }\n\n  /**\n   * Override this method to customize cursor behavior on textbox blur\n   */\n  blur() {\n    this.abortCursorAnimation();\n  }\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isEditing) {\n      return;\n    }\n    const keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      (this[keyMap[e.keyCode] as keyof this] as (arg: KeyboardEvent) => void)(\n        e,\n      );\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      (\n        this[this.ctrlKeysMapDown[e.keyCode] as keyof this] as (\n          arg: KeyboardEvent,\n        ) => void\n      )(e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyUp(e: KeyboardEvent) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      (\n        this[this.ctrlKeysMapUp[e.keyCode] as keyof this] as (\n          arg: KeyboardEvent,\n        ) => void\n      )(e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  }\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput(this: this & { hiddenTextarea: HTMLTextAreaElement }, e: Event) {\n    const fromPaste = this.fromPaste;\n    const { value, selectionStart, selectionEnd } = this.hiddenTextarea;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    const updateAndFire = () => {\n      this.updateFromTextArea();\n      this.fire(CHANGED);\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this as unknown as IText });\n        this.canvas.requestRenderAll();\n      }\n    };\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      updateAndFire();\n      return;\n    }\n    // decisions about style changes.\n    const nextText = this._splitTextIntoLines(value).graphemeText,\n      charCount = this._text.length,\n      nextCharCount = nextText.length,\n      _selectionStart = this.selectionStart,\n      _selectionEnd = this.selectionEnd,\n      selection = _selectionStart !== _selectionEnd;\n    let copiedStyle: TextStyleDeclaration[] | undefined,\n      removedText,\n      charDiff = nextCharCount - charCount,\n      removeFrom,\n      removeTo;\n\n    const textareaSelection = this.fromStringToGraphemeSelection(\n      selectionStart,\n      selectionEnd,\n      value,\n    );\n    const backDelete = _selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(_selectionStart, _selectionEnd);\n      charDiff += _selectionEnd - _selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(_selectionEnd + charDiff, _selectionEnd);\n      } else {\n        removedText = this._text.slice(\n          _selectionStart,\n          _selectionStart - charDiff,\n        );\n      }\n    }\n    const insertedText = nextText.slice(\n      textareaSelection.selectionEnd - charDiff,\n      textareaSelection.selectionEnd,\n    );\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(\n          _selectionStart,\n          _selectionStart + 1,\n          false,\n        );\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(\n          () =>\n            // this return an array of references, but that is fine since we are\n            // copying the style later.\n            copiedStyle![0],\n        );\n      }\n      if (selection) {\n        removeFrom = _selectionStart;\n        removeTo = _selectionEnd;\n      } else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = _selectionEnd - removedText.length;\n        removeTo = _selectionEnd;\n      } else {\n        removeFrom = _selectionEnd;\n        removeTo = _selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      const { copyPasteData } = getEnv();\n      if (\n        fromPaste &&\n        insertedText.join('') === copyPasteData.copiedText &&\n        !config.disableStyleCopyPaste\n      ) {\n        copiedStyle = copyPasteData.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, _selectionStart, copiedStyle);\n    }\n    updateAndFire();\n  }\n\n  /**\n   * Composition start\n   */\n  onCompositionStart() {\n    this.inCompositionMode = true;\n  }\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd() {\n    this.inCompositionMode = false;\n  }\n\n  onCompositionUpdate({ target }: CompositionEvent) {\n    const { selectionStart, selectionEnd } = target as HTMLTextAreaElement;\n    this.compositionStart = selectionStart;\n    this.compositionEnd = selectionEnd;\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * Copies selected text\n   */\n  copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    const { copyPasteData } = getEnv();\n    copyPasteData.copiedText = this.getSelectedText();\n    if (!config.disableStyleCopyPaste) {\n      copyPasteData.copiedTextStyle = this.getSelectionStyles(\n        this.selectionStart,\n        this.selectionEnd,\n        true,\n      );\n    } else {\n      copyPasteData.copiedTextStyle = undefined;\n    }\n    this._copyDone = true;\n  }\n\n  /**\n   * Pastes text\n   */\n  paste() {\n    this.fromPaste = true;\n  }\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor(lineIndex: number, charIndex: number): number {\n    let widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n      bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  }\n\n  /**\n   * Gets start offset of a selection\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (\n      lineIndex === this._textLines.length - 1 ||\n      e.metaKey ||\n      e.keyCode === 34\n    ) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n      textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return (\n      textAfterCursor.length +\n      indexOnOtherLine +\n      1 +\n      this.missingNewlineOffset(lineIndex)\n    );\n  }\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset(e: KeyboardEvent, isRight: boolean): number {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n      textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n      missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return (\n      -this._textLines[lineIndex - 1].length +\n      indexOnOtherLine -\n      textBeforeCursor.length +\n      (1 - missingNewlineOffset)\n    );\n  }\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine(lineIndex: number, width: number) {\n    const line = this._textLines[lineIndex],\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    let widthOfCharsOnLine = lineLeftOffset,\n      indexOnLine = 0,\n      charWidth,\n      foundMatch;\n\n    for (let j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        const leftEdge = widthOfCharsOnLine - charWidth,\n          rightEdge = widthOfCharsOnLine,\n          offsetFromLeftEdge = Math.abs(leftEdge - width),\n          offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  }\n\n  /**\n   * Moves cursor down\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorDown(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  }\n\n  /**\n   * Moves cursor up\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorUp(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  }\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorUpOrDown(direction: 'Up' | 'Down', e: KeyboardEvent) {\n    const offset = this[`get${direction}CursorOffset`](\n      e,\n      this._selectionDirection === RIGHT,\n    );\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      const max = this.text.length;\n      this.selectionStart = capValue(0, this.selectionStart, max);\n      this.selectionEnd = capValue(0, this.selectionEnd, max);\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift(offset: number) {\n    const newSelection =\n      this._selectionDirection === LEFT\n        ? this.selectionStart + offset\n        : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(\n      this.selectionStart,\n      this.selectionEnd,\n      newSelection,\n    );\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift(offset: number) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor left\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorLeft(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  }\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   *\n   * @todo refactor not to use method name composition\n   */\n  _move(\n    e: KeyboardEvent,\n    prop: 'selectionStart' | 'selectionEnd',\n    direction: 'Left' | 'Right',\n  ): boolean {\n    let newValue: number | undefined;\n    if (e.altKey) {\n      newValue = this[`findWordBoundary${direction}`](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this[`findLineBoundary${direction}`](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _moveLeft(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Left');\n  }\n\n  /**\n   * @private\n   */\n  _moveRight(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Right');\n  }\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithoutShift(e: KeyboardEvent) {\n    let change = true;\n    this._selectionDirection = LEFT;\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (\n      this.selectionEnd === this.selectionStart &&\n      this.selectionStart !== 0\n    ) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  }\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === RIGHT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = LEFT;\n      return this._moveLeft(e, 'selectionStart');\n    }\n  }\n\n  /**\n   * Moves cursor right\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRight(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  }\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorLeftOrRight(direction: 'Left' | 'Right', e: KeyboardEvent) {\n    const actionName = `moveCursor${direction}${\n      e.shiftKey ? 'WithShift' : 'WithoutShift'\n    }` as const;\n    this._currentCursorOpacity = 1;\n    if (this[actionName](e)) {\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorRightWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === LEFT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = RIGHT;\n      return this._moveRight(e, 'selectionEnd');\n    }\n  }\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRightWithoutShift(e: KeyboardEvent) {\n    let changed = true;\n    this._selectionDirection = RIGHT;\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  }\n}\n","import type {\n  ObjectPointerEvents,\n  TPointerEvent,\n  TPointerEventInfo,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport { invertTransform } from '../../util/misc/matrix';\nimport { DraggableTextDelegate } from './DraggableTextDelegate';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextKeyBehavior } from './ITextKeyBehavior';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport type { IText } from './IText';\n/**\n * `LEFT_CLICK === 0`\n */\nconst notALeftClick = (e: Event) => !!(e as MouseEvent).button;\n\nexport abstract class ITextClickBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextKeyBehavior<Props, SProps, EventSpec> {\n  protected draggableTextDelegate: DraggableTextDelegate;\n\n  initBehavior() {\n    // Initializes event handlers related to cursor or selection\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mouseup', this.mouseUpHandler);\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('mousetripleclick', this.tripleClickHandler);\n\n    this.draggableTextDelegate = new DraggableTextDelegate(\n      this as unknown as IText,\n    );\n\n    super.initBehavior();\n  }\n\n  /**\n   * If this method returns true a mouse move operation over a text selection\n   * will not prevent the native mouse event allowing the browser to start a drag operation.\n   * shouldStartDragging can be read 'do not prevent default for mouse move event'\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns\n   */\n  shouldStartDragging() {\n    return this.draggableTextDelegate.isActive();\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drag source,\n   * @see also {@link DraggableTextDelegate#isActive}\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns {boolean} should handle event\n   */\n  onDragStart(e: DragEvent) {\n    return this.draggableTextDelegate.onDragStart(e);\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent) {\n    return this.draggableTextDelegate.canDrop(e);\n  }\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler({ e, alreadySelected }: ObjectPointerEvents['mousedown']) {\n    if (\n      !this.canvas ||\n      !this.editable ||\n      notALeftClick(e) ||\n      this.getActiveControl()\n    ) {\n      return;\n    }\n\n    if (this.draggableTextDelegate.start(e)) {\n      return;\n    }\n\n    this.canvas.textEditingManager.register(this);\n\n    if (alreadySelected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n    this.selected ||= alreadySelected || this.isEditing;\n  }\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler({ e, transform }: ObjectPointerEvents['mouseup']) {\n    const didDrag = this.draggableTextDelegate.end(e);\n\n    if (this.canvas) {\n      this.canvas.textEditingManager.unregister(this);\n\n      const activeObject = this.canvas._activeObject;\n      if (activeObject && activeObject !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (\n      !this.editable ||\n      (this.group && !this.group.interactive) ||\n      (transform && transform.actionPerformed) ||\n      notALeftClick(e) ||\n      didDrag\n    ) {\n      return;\n    }\n\n    if (this.selected && !this.getActiveControl()) {\n      this.enterEditing(e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    }\n  }\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {TPointerEvent} e Event object\n   */\n  setCursorByClick(e: TPointerEvent) {\n    const newSelection = this.getSelectionStartFromPointer(e),\n      start = this.selectionStart,\n      end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {TPointerEvent} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer(e: TPointerEvent): number {\n    const mouseOffset = this.canvas!.getScenePoint(e)\n      .transform(invertTransform(this.calcTransformMatrix()))\n      .add(new Point(-this._getLeftOffset(), -this._getTopOffset()));\n    let height = 0,\n      charIndex = 0,\n      lineIndex = 0;\n\n    for (let i = 0; i < this._textLines.length; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i);\n        lineIndex = i;\n        if (i > 0) {\n          charIndex +=\n            this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n    const lineLeftOffset = Math.abs(this._getLineLeftOffset(lineIndex));\n    let width = lineLeftOffset;\n    const charLength = this._textLines[lineIndex].length;\n    const chars = this.__charBounds[lineIndex];\n    for (let j = 0; j < charLength; j++) {\n      // i removed something about flipX here, check.\n      const charWidth = chars[j].kernedWidth;\n      const widthAfter = width + charWidth;\n      if (mouseOffset.x <= widthAfter) {\n        // if the pointer is closer to the end of the char we increment charIndex\n        // in order to position the cursor after the char\n        if (\n          Math.abs(mouseOffset.x - widthAfter) <=\n          Math.abs(mouseOffset.x - width)\n        ) {\n          charIndex++;\n        }\n        break;\n      }\n      width = widthAfter;\n      charIndex++;\n    }\n\n    return Math.min(\n      // if object is horizontally flipped, mirror cursor location from the end\n      this.flipX ? charLength - charIndex : charIndex,\n      this._text.length,\n    );\n  }\n}\n","export type TKeyMapIText = Record<\n  KeyboardEvent['keyCode'],\n  CursorHandlingMethods\n>;\n\nexport type CursorHandlingMethods =\n  | 'moveCursorUp'\n  | 'moveCursorDown'\n  | 'moveCursorLeft'\n  | 'moveCursorRight'\n  | 'exitEditing'\n  | 'copy'\n  | 'cut'\n  | 'cmdAll';\n\nconst MOVE_CURSOR_UP: CursorHandlingMethods = 'moveCursorUp';\nconst MOVE_CURSOR_DOWN: CursorHandlingMethods = 'moveCursorDown';\nconst MOVE_CURSOR_LEFT: CursorHandlingMethods = 'moveCursorLeft';\nconst MOVE_CURSOR_RIGHT: CursorHandlingMethods = 'moveCursorRight';\nconst EXIT_EDITING: CursorHandlingMethods = 'exitEditing';\n\n// @TODO look into import { Key } from 'ts-key-enum';\n// and transition from keyCode to Key\n// also reduce string duplication\nexport const keysMap: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_RIGHT,\n  36: MOVE_CURSOR_LEFT,\n  37: MOVE_CURSOR_LEFT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_RIGHT,\n  40: MOVE_CURSOR_DOWN,\n};\n\nexport const keysMapRtl: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_LEFT,\n  36: MOVE_CURSOR_RIGHT,\n  37: MOVE_CURSOR_RIGHT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_LEFT,\n  40: MOVE_CURSOR_DOWN,\n};\n\n/**\n * For functionalities on keyUp + ctrl || cmd\n */\nexport const ctrlKeysMapUp: TKeyMapIText = {\n  67: 'copy',\n  // there was a reason this wasn't deleted. for now leave it here\n  88: 'cut',\n};\n\n/**\n * For functionalities on keyDown + ctrl || cmd\n */\nexport const ctrlKeysMapDown: TKeyMapIText = {\n  65: 'cmdAll',\n};\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\n\n/**\n * Set the transform of the passed context to the same of a specific Canvas or StaticCanvas.\n * setTransform is used since this utility will RESET the ctx transform to the basic value\n * of retina scaling and viewport transform\n * It is not meant to be added to other transforms, it is used internally to preapre canvases to draw\n * @param ctx\n * @param canvas\n */\nexport const applyCanvasTransform = (\n  ctx: CanvasRenderingContext2D,\n  canvas: StaticCanvas,\n) => {\n  const scale = canvas.getRetinaScaling();\n  ctx.setTransform(scale, 0, 0, scale, 0, 0);\n  const v = canvas.viewportTransform;\n  ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n};\n","import { Canvas } from '../../canvas/Canvas';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextClickBehavior } from './ITextClickBehavior';\nimport {\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  keysMap,\n  keysMapRtl,\n} from './constants';\nimport type { TClassProperties, TFiller, TOptions } from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport {\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from '../Text/constants';\nimport { CENTER, FILL, LEFT, RIGHT } from '../../constants';\nimport type { ObjectToCanvasElementOptions } from '../Object/Object';\nimport type { FabricObject } from '../Object/FabricObject';\nimport { createCanvasElementFor } from '../../util/misc/dom';\nimport { applyCanvasTransform } from '../../util/internals/applyCanvasTransform';\n\nexport type CursorBoundaries = {\n  left: number;\n  top: number;\n  leftOffset: number;\n  topOffset: number;\n};\n\nexport type CursorRenderingData = {\n  color: string;\n  opacity: number;\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\n// Declare IText protected properties to workaround TS\nconst protectedDefaultValues = {\n  _selectionDirection: null,\n  _reSpace: /\\s|\\r?\\n/,\n  inCompositionMode: false,\n};\n\nexport const iTextDefaultValues: Partial<TClassProperties<IText>> = {\n  selectionStart: 0,\n  selectionEnd: 0,\n  selectionColor: 'rgba(17,119,255,0.3)',\n  isEditing: false,\n  editable: true,\n  editingBorderColor: 'rgba(102,153,255,0.25)',\n  cursorWidth: 2,\n  cursorColor: '',\n  cursorDelay: 1000,\n  cursorDuration: 600,\n  caching: true,\n  hiddenTextareaContainer: null,\n  keysMap,\n  keysMapRtl,\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  ...protectedDefaultValues,\n};\n\n// @TODO this is not complete\ninterface UniqueITextProps {\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface SerializedITextProps\n  extends SerializedTextProps,\n    UniqueITextProps {}\n\nexport interface ITextProps extends TextProps, UniqueITextProps {}\n\n/**\n * @fires changed\n * @fires selection:changed\n * @fires editing:entered\n * @fires editing:exited\n * @fires dragstart\n * @fires drag drag event firing on the drag source\n * @fires dragend\n * @fires copy\n * @fires cut\n * @fires paste\n *\n * #### Supported key combinations\n * ```\n *   Move cursor:                    left, right, up, down\n *   Select character:               shift + left, shift + right\n *   Select text vertically:         shift + up, shift + down\n *   Move cursor by word:            alt + left, alt + right\n *   Select words:                   shift + alt + left, shift + alt + right\n *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n *   Jump to start/end of text:      cmd + up, cmd + down\n *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n *   Delete character:               backspace\n *   Delete word:                    alt + backspace\n *   Delete line:                    cmd + backspace\n *   Forward delete:                 delete\n *   Copy text:                      ctrl/cmd + c\n *   Paste text:                     ctrl/cmd + v\n *   Cut text:                       ctrl/cmd + x\n *   Select entire text:             ctrl/cmd + a\n *   Quit editing                    tab or esc\n * ```\n *\n * #### Supported mouse/touch combination\n * ```\n *   Position cursor:                click/touch\n *   Create selection:               click/touch & drag\n *   Create selection:               click & shift + click\n *   Select word:                    double click\n *   Select line:                    triple click\n * ```\n */\nexport class IText<\n    Props extends TOptions<ITextProps> = Partial<ITextProps>,\n    SProps extends SerializedITextProps = SerializedITextProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends ITextClickBehavior<Props, SProps, EventSpec>\n  implements UniqueITextProps\n{\n  /**\n   * Index where text selection starts (or where cursor is when there is no selection)\n   * @type Number\n   * @default\n   */\n  declare selectionStart: number;\n\n  /**\n   * Index where text selection ends\n   * @type Number\n   * @default\n   */\n  declare selectionEnd: number;\n\n  declare compositionStart: number;\n\n  declare compositionEnd: number;\n\n  /**\n   * Color of text selection\n   * @type String\n   * @default\n   */\n  declare selectionColor: string;\n\n  /**\n   * Indicates whether text is in editing mode\n   * @type Boolean\n   * @default\n   */\n  declare isEditing: boolean;\n\n  /**\n   * Indicates whether a text can be edited\n   * @type Boolean\n   * @default\n   */\n  declare editable: boolean;\n\n  /**\n   * Border color of text object while it's in editing mode\n   * @type String\n   * @default\n   */\n  declare editingBorderColor: string;\n\n  /**\n   * Width of cursor (in px)\n   * @type Number\n   * @default\n   */\n  declare cursorWidth: number;\n\n  /**\n   * Color of text cursor color in editing mode.\n   * if not set (default) will take color from the text.\n   * if set to a color value that fabric can understand, it will\n   * be used instead of the color of the text at the current position.\n   * @type String\n   * @default\n   */\n  declare cursorColor: string;\n\n  /**\n   * Delay between cursor blink (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDelay: number;\n\n  /**\n   * Duration of cursor fade in (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDuration: number;\n\n  declare compositionColor: string;\n\n  /**\n   * Indicates whether internal text char widths can be cached\n   * @type Boolean\n   * @default\n   */\n  declare caching: boolean;\n\n  static ownDefaults = iTextDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...IText.ownDefaults };\n  }\n\n  static type = 'IText';\n\n  get type() {\n    const type = super.type;\n    // backward compatibility\n    return type === 'itext' ? 'i-text' : type;\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...IText.ownDefaults, ...options } as Props);\n    this.initBehavior();\n  }\n\n  /**\n   * While editing handle differently\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (this.isEditing && this._savedProps && key in this._savedProps) {\n      // @ts-expect-error irritating TS\n      this._savedProps[key] = value;\n      return this;\n    }\n    if (key === 'canvas') {\n      this.canvas instanceof Canvas &&\n        this.canvas.textEditingManager.remove(this);\n      value instanceof Canvas && value.textEditingManager.add(this);\n    }\n    return super._set(key, value);\n  }\n\n  /**\n   * Sets selection start (left boundary of a selection)\n   * @param {Number} index Index to set selection start to\n   */\n  setSelectionStart(index: number) {\n    index = Math.max(index, 0);\n    this._updateAndFire('selectionStart', index);\n  }\n\n  /**\n   * Sets selection end (right boundary of a selection)\n   * @param {Number} index Index to set selection end to\n   */\n  setSelectionEnd(index: number) {\n    index = Math.min(index, this.text.length);\n    this._updateAndFire('selectionEnd', index);\n  }\n\n  /**\n   * @private\n   * @param {String} property 'selectionStart' or 'selectionEnd'\n   * @param {Number} index new position of property\n   */\n  protected _updateAndFire(\n    property: 'selectionStart' | 'selectionEnd',\n    index: number,\n  ) {\n    if (this[property] !== index) {\n      this._fireSelectionChanged();\n      this[property] = index;\n    }\n    this._updateTextarea();\n  }\n\n  /**\n   * Fires the even of selection changed\n   * @private\n   */\n  _fireSelectionChanged() {\n    this.fire('selection:changed');\n    this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n  }\n\n  /**\n   * Initialize text dimensions. Render all text on given context\n   * or on a offscreen canvas to get the text width with measureText.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   * @private\n   */\n  initDimensions() {\n    this.isEditing && this.initDelayedCursor();\n    super.initDimensions();\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified selectionEnd or startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n    complete?: boolean,\n  ) {\n    return super.getSelectionStyles(startIndex, endIndex, complete);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} [styles] Styles object\n   * @param {Number} [startIndex] Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n   */\n  setSelectionStyles(\n    styles: object,\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n  ) {\n    return super.setSelectionStyles(styles, startIndex, endIndex);\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n   * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(\n    selectionStart = this.selectionStart,\n    skipWrapping?: boolean,\n  ) {\n    return super.get2DCursorLocation(selectionStart, skipWrapping);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    super.render(ctx);\n    // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n    // the correct position but not at every cursor animation.\n    this.cursorOffsetCache = {};\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * @override block cursor/selection logic while rendering the exported canvas\n   * @todo this workaround should be replaced with a more robust solution\n   */\n  toCanvasElement(options?: ObjectToCanvasElementOptions): HTMLCanvasElement {\n    const isEditing = this.isEditing;\n    this.isEditing = false;\n    const canvas = super.toCanvasElement(options);\n    this.isEditing = isEditing;\n    return canvas;\n  }\n\n  /**\n   * Renders cursor or selection (depending on what exists)\n   * it does on the contextTop. If contextTop is not available, do nothing.\n   */\n  renderCursorOrSelection() {\n    if (!this.isEditing || !this.canvas) {\n      return;\n    }\n    const ctx = this.clearContextTop(true);\n    if (!ctx) {\n      return;\n    }\n    const boundaries = this._getCursorBoundaries();\n\n    const ancestors = this.findAncestorsWithClipPath();\n    const hasAncestorsWithClipping = ancestors.length > 0;\n    let drawingCtx: CanvasRenderingContext2D = ctx;\n    let drawingCanvas: HTMLCanvasElement | undefined = undefined;\n    if (hasAncestorsWithClipping) {\n      // we have some clipPath, we need to draw the selection on an intermediate layer.\n      drawingCanvas = createCanvasElementFor(ctx.canvas);\n      drawingCtx = drawingCanvas.getContext('2d')!;\n      applyCanvasTransform(drawingCtx, this.canvas);\n      const m = this.calcTransformMatrix();\n      drawingCtx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n\n    if (this.selectionStart === this.selectionEnd && !this.inCompositionMode) {\n      this.renderCursor(drawingCtx, boundaries);\n    } else {\n      this.renderSelection(drawingCtx, boundaries);\n    }\n\n    if (hasAncestorsWithClipping) {\n      // we need a neutral context.\n      // this won't work for nested clippaths in which a clippath\n      // has its own clippath\n      for (const ancestor of ancestors) {\n        const clipPath = ancestor.clipPath!;\n        const clippingCanvas = createCanvasElementFor(ctx.canvas);\n        const clippingCtx = clippingCanvas.getContext('2d')!;\n        applyCanvasTransform(clippingCtx, this.canvas);\n        // position the ctx in the center of the outer ancestor\n        if (!clipPath.absolutePositioned) {\n          const m = ancestor.calcTransformMatrix();\n          clippingCtx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        clipPath.transform(clippingCtx);\n        // we assign an empty drawing context, we don't plan to have this working for nested clippaths for now\n        clipPath.drawObject(clippingCtx, true, {});\n        this.drawClipPathOnCache(drawingCtx, clipPath, clippingCanvas);\n      }\n    }\n\n    if (hasAncestorsWithClipping) {\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(drawingCanvas!, 0, 0);\n    }\n\n    this.canvas.contextTopDirty = true;\n    ctx.restore();\n  }\n\n  /**\n   * Finds and returns an array of clip paths that are applied to the parent\n   * group(s) of the current FabricObject instance. The object's hierarchy is\n   * traversed upwards (from the current object towards the root of the canvas),\n   * checking each parent object for the presence of a `clipPath` that is not\n   * absolutely positioned.\n   */\n  findAncestorsWithClipPath(): FabricObject[] {\n    const clipPathAncestors: FabricObject[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let obj: FabricObject | undefined = this;\n    while (obj) {\n      if (obj.clipPath) {\n        clipPathAncestors.push(obj);\n      }\n      obj = obj.parent;\n    }\n\n    return clipPathAncestors;\n  }\n\n  /**\n   * Returns cursor boundaries (left, top, leftOffset, topOffset)\n   * left/top are left/top of entire text box\n   * leftOffset/topOffset are offset from that left/top point of a text box\n   * @private\n   * @param {number} [index] index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundaries(\n    index: number = this.selectionStart,\n    skipCaching?: boolean,\n  ): CursorBoundaries {\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset(),\n      offsets = this._getCursorBoundariesOffsets(index, skipCaching);\n    return {\n      left: left,\n      top: top,\n      leftOffset: offsets.left,\n      topOffset: offsets.top,\n    };\n  }\n\n  /**\n   * Caches and returns cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundariesOffsets(\n    index: number,\n    skipCaching?: boolean,\n  ): { left: number; top: number } {\n    if (skipCaching) {\n      return this.__getCursorBoundariesOffsets(index);\n    }\n    if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n      return this.cursorOffsetCache as { left: number; top: number };\n    }\n    return (this.cursorOffsetCache = this.__getCursorBoundariesOffsets(index));\n  }\n\n  /**\n   * Calculates cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   */\n  __getCursorBoundariesOffsets(index: number) {\n    let topOffset = 0,\n      leftOffset = 0;\n    const { charIndex, lineIndex } = this.get2DCursorLocation(index);\n\n    for (let i = 0; i < lineIndex; i++) {\n      topOffset += this.getHeightOfLine(i);\n    }\n    const lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    const bound = this.__charBounds[lineIndex][charIndex];\n    bound && (leftOffset = bound.left);\n    if (\n      this.charSpacing !== 0 &&\n      charIndex === this._textLines[lineIndex].length\n    ) {\n      leftOffset -= this._getWidthOfCharSpacing();\n    }\n    const boundaries = {\n      top: topOffset,\n      left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n    };\n    if (this.direction === 'rtl') {\n      if (\n        this.textAlign === RIGHT ||\n        this.textAlign === JUSTIFY ||\n        this.textAlign === JUSTIFY_RIGHT\n      ) {\n        boundaries.left *= -1;\n      } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      } else if (\n        this.textAlign === CENTER ||\n        this.textAlign === JUSTIFY_CENTER\n      ) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      }\n    }\n    return boundaries;\n  }\n\n  /**\n   * Renders cursor on context Top, outside the animation cycle, on request\n   * Used for the drag/drop effect.\n   * If contextTop is not available, do nothing.\n   */\n  renderCursorAt(selectionStart: number) {\n    this._renderCursor(\n      this.canvas!.contextTop,\n      this._getCursorBoundaries(selectionStart, true),\n      selectionStart,\n    );\n  }\n\n  /**\n   * Renders cursor\n   * @param {Object} boundaries\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderCursor(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    this._renderCursor(ctx, boundaries, this.selectionStart);\n  }\n\n  /**\n   * Return the data needed to render the cursor for given selection start\n   * The left,top are relative to the object, while width and height are prescaled\n   * to look think with canvas zoom and object scaling,\n   * so they depend on canvas and object scaling\n   */\n  getCursorRenderingData(\n    selectionStart: number = this.selectionStart,\n    boundaries: CursorBoundaries = this._getCursorBoundaries(selectionStart),\n  ): CursorRenderingData {\n    const cursorLocation = this.get2DCursorLocation(selectionStart),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex =\n        cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n      charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n      multiplier = this.getObjectScaling().x * this.canvas!.getZoom(),\n      cursorWidth = this.cursorWidth / multiplier,\n      dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY'),\n      topOffset =\n        boundaries.topOffset +\n        ((1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex)) /\n          this.lineHeight -\n        charHeight * (1 - this._fontSizeFraction);\n\n    return {\n      color:\n        this.cursorColor ||\n        (this.getValueOfPropertyAt(lineIndex, charIndex, 'fill') as string),\n      opacity: this._currentCursorOpacity,\n      left: boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n      top: topOffset + boundaries.top + dy,\n      width: cursorWidth,\n      height: charHeight,\n    };\n  }\n\n  /**\n   * Render the cursor at the given selectionStart.\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  _renderCursor(\n    ctx: CanvasRenderingContext2D,\n    boundaries: CursorBoundaries,\n    selectionStart: number,\n  ) {\n    const { color, opacity, left, top, width, height } =\n      this.getCursorRenderingData(selectionStart, boundaries);\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity;\n    ctx.fillRect(left, top, width, height);\n  }\n\n  /**\n   * Renders text selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderSelection(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    const selection = {\n      selectionStart: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionStart\n        : this.selectionStart,\n      selectionEnd: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionEnd\n        : this.selectionEnd,\n    };\n    this._renderSelection(ctx, selection, boundaries);\n  }\n\n  /**\n   * Renders drag start text selection\n   */\n  renderDragSourceEffect() {\n    const dragStartSelection =\n      this.draggableTextDelegate.getDragStartSelection()!;\n    this._renderSelection(\n      this.canvas!.contextTop,\n      dragStartSelection,\n      this._getCursorBoundaries(dragStartSelection.selectionStart, true),\n    );\n  }\n\n  renderDropTargetEffect(e: DragEvent) {\n    const dragSelection = this.getSelectionStartFromPointer(e);\n    this.renderCursorAt(dragSelection);\n  }\n\n  /**\n   * Renders text selection\n   * @private\n   * @param {{ selectionStart: number, selectionEnd: number }} selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  _renderSelection(\n    ctx: CanvasRenderingContext2D,\n    selection: { selectionStart: number; selectionEnd: number },\n    boundaries: CursorBoundaries,\n  ) {\n    const selectionStart = selection.selectionStart,\n      selectionEnd = selection.selectionEnd,\n      isJustify = this.textAlign.includes(JUSTIFY),\n      start = this.get2DCursorLocation(selectionStart),\n      end = this.get2DCursorLocation(selectionEnd),\n      startLine = start.lineIndex,\n      endLine = end.lineIndex,\n      startChar = start.charIndex < 0 ? 0 : start.charIndex,\n      endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n    for (let i = startLine; i <= endLine; i++) {\n      const lineOffset = this._getLineLeftOffset(i) || 0;\n      let lineHeight = this.getHeightOfLine(i),\n        realLineHeight = 0,\n        boxStart = 0,\n        boxEnd = 0;\n\n      if (i === startLine) {\n        boxStart = this.__charBounds[startLine][startChar].left;\n      }\n      if (i >= startLine && i < endLine) {\n        boxEnd =\n          isJustify && !this.isEndOfWrapping(i)\n            ? this.width\n            : this.getLineWidth(i) || 5; // WTF is this 5?\n      } else if (i === endLine) {\n        if (endChar === 0) {\n          boxEnd = this.__charBounds[endLine][endChar].left;\n        } else {\n          const charSpacing = this._getWidthOfCharSpacing();\n          boxEnd =\n            this.__charBounds[endLine][endChar - 1].left +\n            this.__charBounds[endLine][endChar - 1].width -\n            charSpacing;\n        }\n      }\n      realLineHeight = lineHeight;\n      if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n        lineHeight /= this.lineHeight;\n      }\n      let drawStart = boundaries.left + lineOffset + boxStart,\n        drawHeight = lineHeight,\n        extraTop = 0;\n      const drawWidth = boxEnd - boxStart;\n      if (this.inCompositionMode) {\n        ctx.fillStyle = this.compositionColor || 'black';\n        drawHeight = 1;\n        extraTop = lineHeight;\n      } else {\n        ctx.fillStyle = this.selectionColor;\n      }\n      if (this.direction === 'rtl') {\n        if (\n          this.textAlign === RIGHT ||\n          this.textAlign === JUSTIFY ||\n          this.textAlign === JUSTIFY_RIGHT\n        ) {\n          drawStart = this.width - drawStart - drawWidth;\n        } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        } else if (\n          this.textAlign === CENTER ||\n          this.textAlign === JUSTIFY_CENTER\n        ) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        }\n      }\n      ctx.fillRect(\n        drawStart,\n        boundaries.top + boundaries.topOffset + extraTop,\n        drawWidth,\n        drawHeight,\n      );\n      boundaries.topOffset += realLineHeight;\n    }\n  }\n\n  /**\n   * High level function to know the height of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns fontSize of char at the current cursor\n   * Unused from the library, is for the end user\n   * @return {Number} Character font size\n   */\n  getCurrentCharFontSize(): number {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n  }\n\n  /**\n   * High level function to know the color of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns color (fill) of char at the current cursor\n   * if the text object has a pattern or gradient for filler, it will return that.\n   * Unused by the library, is for the end user\n   * @return {String | TFiller} Character color (fill)\n   */\n  getCurrentCharColor(): string | TFiller | null {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, FILL);\n  }\n\n  /**\n   * Returns the cursor position for the getCurrent.. functions\n   * @private\n   */\n  _getCurrentCharIndex() {\n    const cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n      charIndex =\n        cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n    return { l: cursorPosition.lineIndex, c: charIndex };\n  }\n\n  dispose() {\n    this.exitEditingImpl();\n    this.draggableTextDelegate.dispose();\n    super.dispose();\n  }\n}\n\nclassRegistry.setClass(IText);\n// legacy\nclassRegistry.setClass(IText, 'i-text');\n","import type { TClassProperties, TOptions } from '../typedefs';\nimport { IText } from './IText/IText';\nimport { classRegistry } from '../ClassRegistry';\nimport { createTextboxDefaultControls } from '../controls/commonControls';\nimport { JUSTIFY } from './Text/constants';\nimport type { TextStyleDeclaration } from './Text/StyledText';\nimport type { SerializedITextProps, ITextProps } from './IText/IText';\nimport type { ITextEvents } from './IText/ITextBehavior';\nimport type { TextLinesInfo } from './Text/Text';\nimport type { Control } from '../controls/Control';\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textboxDefaultValues: Partial<TClassProperties<Textbox>> = {\n  minWidth: 20,\n  dynamicMinWidth: 2,\n  lockScalingFlip: true,\n  noScaleCache: false,\n  _wordJoiners: /[ \\t\\r]/,\n  splitByGrapheme: false,\n};\n\nexport type GraphemeData = {\n  wordsData: {\n    word: string[];\n    width: number;\n  }[][];\n  largestWordWidth: number;\n};\n\nexport type StyleMap = Record<string, { line: number; offset: number }>;\n\n// @TODO this is not complete\ninterface UniqueTextboxProps {\n  minWidth: number;\n  splitByGrapheme: boolean;\n  dynamicMinWidth: number;\n  _wordJoiners: RegExp;\n}\n\nexport interface SerializedTextboxProps\n  extends SerializedITextProps,\n    Pick<UniqueTextboxProps, 'minWidth' | 'splitByGrapheme'> {}\n\nexport interface TextboxProps extends ITextProps, UniqueTextboxProps {}\n\n/**\n * Textbox class, based on IText, allows the user to resize the text rectangle\n * and wraps lines automatically. Textboxes have their Y scaling locked, the\n * user can only change width. Height is adjusted automatically based on the\n * wrapping of lines.\n */\nexport class Textbox<\n    Props extends TOptions<TextboxProps> = Partial<TextboxProps>,\n    SProps extends SerializedTextboxProps = SerializedTextboxProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends IText<Props, SProps, EventSpec>\n  implements UniqueTextboxProps\n{\n  /**\n   * Minimum width of textbox, in pixels.\n   * @type Number\n   * @default\n   */\n  declare minWidth: number;\n\n  /**\n   * Minimum calculated width of a textbox, in pixels.\n   * fixed to 2 so that an empty textbox cannot go to 0\n   * and is still selectable without text.\n   * @type Number\n   * @default\n   */\n  declare dynamicMinWidth: number;\n\n  /**\n   * Use this boolean property in order to split strings that have no white space concept.\n   * this is a cheap way to help with chinese/japanese\n   * @type Boolean\n   * @since 2.6.0\n   */\n  declare splitByGrapheme: boolean;\n\n  declare _wordJoiners: RegExp;\n\n  declare _styleMap: StyleMap;\n\n  declare isWrapping: boolean;\n\n  static type = 'Textbox';\n\n  static textLayoutProperties = [...IText.textLayoutProperties, 'width'];\n\n  static ownDefaults = textboxDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Textbox.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...Textbox.ownDefaults, ...options } as Props);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createTextboxDefaultControls() };\n  }\n\n  /**\n   * Unlike superclass's version of this function, Textbox does not update\n   * its width.\n   * @private\n   * @override\n   */\n  initDimensions() {\n    if (!this.initialized) {\n      return;\n    }\n    this.isEditing && this.initDelayedCursor();\n    this._clearCache();\n    // clear dynamicMinWidth as it will be different after we re-wrap line\n    this.dynamicMinWidth = 0;\n    // wrap lines\n    this._styleMap = this._generateStyleMap(this._splitText());\n    // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n    if (this.dynamicMinWidth > this.width) {\n      this._set('width', this.dynamicMinWidth);\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n    // clear cache and re-calculate height\n    this.height = this.calcTextHeight();\n  }\n\n  /**\n   * Generate an object that translates the style object so that it is\n   * broken up by visual lines (new lines and automatic wrapping).\n   * The original text styles object is broken up by actual lines (new lines only),\n   * which is only sufficient for Text / IText\n   * @private\n   */\n  _generateStyleMap(textInfo: TextLinesInfo): StyleMap {\n    let realLineCount = 0,\n      realLineCharCount = 0,\n      charCount = 0;\n    const map: StyleMap = {};\n\n    for (let i = 0; i < textInfo.graphemeLines.length; i++) {\n      if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n        realLineCharCount = 0;\n        charCount++;\n        realLineCount++;\n      } else if (\n        !this.splitByGrapheme &&\n        this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) &&\n        i > 0\n      ) {\n        // this case deals with space's that are removed from end of lines when wrapping\n        realLineCharCount++;\n        charCount++;\n      }\n\n      map[i] = { line: realLineCount, offset: realLineCharCount };\n\n      charCount += textInfo.graphemeLines[i].length;\n      realLineCharCount += textInfo.graphemeLines[i].length;\n    }\n\n    return map;\n  }\n\n  /**\n   * Returns true if object has a style property or has it on a specified line\n   * @param {Number} lineIndex\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex: number): boolean {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (map) {\n        lineIndex = map.line;\n      }\n    }\n    return super.styleHas(property, lineIndex);\n  }\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    let offset = 0,\n      nextLineIndex = lineIndex + 1,\n      nextOffset: number,\n      shouldLimit = false;\n    const map = this._styleMap[lineIndex],\n      mapNextLine = this._styleMap[lineIndex + 1];\n    if (map) {\n      lineIndex = map.line;\n      offset = map.offset;\n    }\n    if (mapNextLine) {\n      nextLineIndex = mapNextLine.line;\n      shouldLimit = nextLineIndex === lineIndex;\n      nextOffset = mapNextLine.offset;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        const p2Number = parseInt(p2, 10);\n        if (p2Number >= offset && (!shouldLimit || p2Number < nextOffset!)) {\n          // eslint-disable-next-line no-unused-vars\n          for (const p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (!map) {\n        return {};\n      }\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n    }\n    return super._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    const map = this._styleMap[lineIndex];\n    super._setStyleDeclaration(map.line, map.offset + charIndex, style);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._deleteStyleDeclaration(map.line, map.offset + charIndex);\n  }\n\n  /**\n   * probably broken need a fix\n   * Returns the real style line that correspond to the wrapped lineIndex line\n   * Used just to verify if the line does exist or not.\n   * @param {Number} lineIndex\n   * @returns {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    const map = this._styleMap[lineIndex];\n    return !!this.styles[map.line];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._setLineStyle(map.line);\n  }\n\n  /**\n   * Wraps text using the 'width' property of Textbox. First this function\n   * splits text on newlines, so we preserve newlines entered by the user.\n   * Then it wraps each line using the width of the Textbox by calling\n   * _wrapLine().\n   * @param {Array} lines The string array of text that is split into lines\n   * @param {Number} desiredWidth width you want to wrap to\n   * @returns {Array} Array of lines\n   */\n  _wrapText(lines: string[], desiredWidth: number): string[][] {\n    this.isWrapping = true;\n    // extract all thewords and the widths to optimally wrap lines.\n    const data = this.getGraphemeDataForRender(lines);\n    const wrapped: string[][] = [];\n    for (let i = 0; i < data.wordsData.length; i++) {\n      wrapped.push(...this._wrapLine(i, desiredWidth, data));\n    }\n    this.isWrapping = false;\n    return wrapped;\n  }\n\n  /**\n   * For each line of text terminated by an hard line stop,\n   * measure each word width and extract the largest word from all.\n   * The returned words here are the one that at the end will be rendered.\n   * @param {string[]} lines the lines we need to measure\n   *\n   */\n  getGraphemeDataForRender(lines: string[]): GraphemeData {\n    const splitByGrapheme = this.splitByGrapheme,\n      infix = splitByGrapheme ? '' : ' ';\n\n    let largestWordWidth = 0;\n\n    const data = lines.map((line, lineIndex) => {\n      let offset = 0;\n      const wordsOrGraphemes = splitByGrapheme\n        ? this.graphemeSplit(line)\n        : this.wordSplit(line);\n\n      if (wordsOrGraphemes.length === 0) {\n        return [{ word: [], width: 0 }];\n      }\n\n      return wordsOrGraphemes.map((word: string) => {\n        // if using splitByGrapheme words are already in graphemes.\n        const graphemeArray = splitByGrapheme\n          ? [word]\n          : this.graphemeSplit(word);\n        const width = this._measureWord(graphemeArray, lineIndex, offset);\n        largestWordWidth = Math.max(width, largestWordWidth);\n        offset += graphemeArray.length + infix.length;\n        return { word: graphemeArray, width };\n      });\n    });\n\n    return {\n      wordsData: data,\n      largestWordWidth,\n    };\n  }\n\n  /**\n   * Helper function to measure a string of text, given its lineIndex and charIndex offset\n   * It gets called when charBounds are not available yet.\n   * Override if necessary\n   * Use with {@link Textbox#wordSplit}\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {number} lineIndex\n   * @param {number} charOffset\n   * @returns {number}\n   */\n  _measureWord(word: string[], lineIndex: number, charOffset = 0): number {\n    let width = 0,\n      prevGrapheme;\n    const skipLeft = true;\n    for (let i = 0, len = word.length; i < len; i++) {\n      const box = this._getGraphemeBox(\n        word[i],\n        lineIndex,\n        i + charOffset,\n        prevGrapheme,\n        skipLeft,\n      );\n      width += box.kernedWidth;\n      prevGrapheme = word[i];\n    }\n    return width;\n  }\n\n  /**\n   * Override this method to customize word splitting\n   * Use with {@link Textbox#_measureWord}\n   * @param {string} value\n   * @returns {string[]} array of words\n   */\n  wordSplit(value: string): string[] {\n    return value.split(this._wordJoiners);\n  }\n\n  /**\n   * Wraps a line of text using the width of the Textbox as desiredWidth\n   * and leveraging the known width o words from GraphemeData\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} desiredWidth width you want to wrap the line to\n   * @param {GraphemeData} graphemeData an object containing all the lines' words width.\n   * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n   * @returns {Array} Array of line(s) into which the given text is wrapped\n   * to.\n   */\n  _wrapLine(\n    lineIndex: number,\n    desiredWidth: number,\n    { largestWordWidth, wordsData }: GraphemeData,\n    reservedSpace = 0,\n  ): string[][] {\n    const additionalSpace = this._getWidthOfCharSpacing(),\n      splitByGrapheme = this.splitByGrapheme,\n      graphemeLines = [],\n      infix = splitByGrapheme ? '' : ' ';\n\n    let lineWidth = 0,\n      line: string[] = [],\n      // spaces in different languages?\n      offset = 0,\n      infixWidth = 0,\n      lineJustStarted = true;\n\n    desiredWidth -= reservedSpace;\n\n    const maxWidth = Math.max(\n      desiredWidth,\n      largestWordWidth,\n      this.dynamicMinWidth,\n    );\n    // layout words\n    const data = wordsData[lineIndex];\n    offset = 0;\n    let i;\n    for (i = 0; i < data.length; i++) {\n      const { word, width: wordWidth } = data[i];\n      offset += word.length;\n\n      lineWidth += infixWidth + wordWidth - additionalSpace;\n      if (lineWidth > maxWidth && !lineJustStarted) {\n        graphemeLines.push(line);\n        line = [];\n        lineWidth = wordWidth;\n        lineJustStarted = true;\n      } else {\n        lineWidth += additionalSpace;\n      }\n\n      if (!lineJustStarted && !splitByGrapheme) {\n        line.push(infix);\n      }\n      line = line.concat(word);\n\n      infixWidth = splitByGrapheme\n        ? 0\n        : this._measureWord([infix], lineIndex, offset);\n      offset++;\n      lineJustStarted = false;\n    }\n\n    i && graphemeLines.push(line);\n\n    // TODO: this code is probably not necessary anymore.\n    // it can be moved out of this function since largestWordWidth is now\n    // known in advance\n    if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n      this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n    }\n    return graphemeLines;\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @param {Number} lineIndex text to split\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    if (!this._styleMap[lineIndex + 1]) {\n      // is last line, return true;\n      return true;\n    }\n    if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n      // this is last line before a line break, return true;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * This is important only for splitByGrapheme at the end of wrapping.\n   * If we are not wrapping the offset is always 1\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1 {\n    if (this.splitByGrapheme && !skipWrapping) {\n      return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n    }\n    return 1;\n  }\n\n  /**\n   * Gets lines of text to render in the Textbox. This function calculates\n   * text wrapping on the fly every time it is called.\n   * @param {String} text text to split\n   * @returns {Array} Array of lines in the Textbox.\n   * @override\n   */\n  _splitTextIntoLines(text: string) {\n    const newText = super._splitTextIntoLines(text),\n      graphemeLines = this._wrapText(newText.lines, this.width),\n      lines = new Array(graphemeLines.length);\n    for (let i = 0; i < graphemeLines.length; i++) {\n      lines[i] = graphemeLines[i].join('');\n    }\n    newText.lines = lines;\n    newText.graphemeLines = graphemeLines;\n    return newText;\n  }\n\n  getMinWidth() {\n    return Math.max(this.minWidth, this.dynamicMinWidth);\n  }\n\n  _removeExtraneousStyles() {\n    const linesToKeep = new Map();\n    for (const prop in this._styleMap) {\n      const propNumber = parseInt(prop, 10);\n      if (this._textLines[propNumber]) {\n        const lineIndex = this._styleMap[prop].line;\n        linesToKeep.set(`${lineIndex}`, true);\n      }\n    }\n    for (const prop in this.styles) {\n      if (!linesToKeep.has(prop)) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject<T, K>([\n      'minWidth',\n      'splitByGrapheme',\n      ...propertiesToInclude,\n    ] as K[]) as Pick<T, K> & SProps;\n  }\n}\n\nclassRegistry.setClass(Textbox);\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport { sendPointToPlane } from '../../util/misc/planeChange';\nimport type { LayoutStrategyResult, StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { getObjectBounds } from './utils';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to match the clip path bounding box.\n */\nexport class ClipPathLayout extends LayoutStrategy {\n  static readonly type = 'clip-path';\n\n  shouldPerformLayout(context: StrictLayoutContext): boolean {\n    return !!context.target.clipPath && super.shouldPerformLayout(context);\n  }\n\n  shouldLayoutClipPath() {\n    return false;\n  }\n\n  calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    const { target } = context;\n    const { clipPath, group } = target;\n    if (!clipPath || !this.shouldPerformLayout(context)) {\n      return;\n    }\n    // TODO: remove stroke calculation from this case\n    const { width, height } = makeBoundingBoxFromPoints(\n      getObjectBounds(target, clipPath as FabricObject),\n    );\n    const size = new Point(width, height);\n    if (clipPath.absolutePositioned) {\n      //  we want the center point to exist in group's containing plane\n      const clipPathCenter = sendPointToPlane(\n        clipPath.getRelativeCenterPoint(),\n        undefined,\n        group ? group.calcTransformMatrix() : undefined,\n      );\n      return {\n        center: clipPathCenter,\n        size,\n      };\n    } else {\n      //  we want the center point to exist in group's containing plane, so we send it upwards\n      const clipPathCenter = clipPath\n        .getRelativeCenterPoint()\n        .transform(target.calcOwnMatrix(), true);\n      if (this.shouldPerformLayout(context)) {\n        // the clip path is positioned relative to the group's center which is affected by the bbox\n        // so we first calculate the bbox\n        const { center = new Point(), correction = new Point() } =\n          this.calcBoundingBox(objects, context) || {};\n        return {\n          center: center.add(clipPathCenter),\n          correction: correction.subtract(clipPathCenter),\n          size,\n        };\n      } else {\n        return {\n          center: target.getRelativeCenterPoint().add(clipPathCenter),\n          size,\n        };\n      }\n    }\n  }\n}\n\nclassRegistry.setClass(ClipPathLayout);\n","import { Point } from '../../Point';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will keep target's initial size.\n */\nexport class FixedLayout extends LayoutStrategy {\n  static readonly type = 'fixed';\n\n  /**\n   * @override respect target's initial size\n   */\n  getInitialSize(\n    { target }: StrictLayoutContext & InitializationLayoutContext,\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ): Point {\n    return new Point(target.width || size.x, target.height || size.y);\n  }\n}\n\nclassRegistry.setClass(FixedLayout);\n","import { LayoutManager } from './LayoutManager';\nimport type { RegistrationContext, StrictLayoutContext } from './types';\nimport type { Group } from '../shapes/Group';\n\n/**\n * Today the LayoutManager class also takes care of subscribing event handlers\n * to update the group layout when the group is interactive and a transform is applied\n * to a child object.\n * The ActiveSelection is never interactive, but it could contain objects from\n * groups that are.\n * The standard LayoutManager would subscribe the children of the activeSelection to\n * perform layout changes to the active selection itself, what we need instead is that\n * the transformation applied to the active selection will trigger changes to the\n * original group of the children ( the one referenced under the parent property )\n * This subclass of the LayoutManager has a single duty to fill the gap of this difference.`\n */\nexport class ActiveSelectionLayoutManager extends LayoutManager {\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      parent.layoutManager.subscribeTargets({\n        target: parent,\n        targets: [activeSelection],\n      });\n    });\n  }\n\n  /**\n   * unsubscribe from parent only if all its children were deselected\n   */\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const selectedObjects = activeSelection.getObjects();\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      !selectedObjects.some((object) => object.parent === parent) &&\n        parent.layoutManager.unsubscribeTargets({\n          target: parent,\n          targets: [activeSelection],\n        });\n    });\n  }\n}\n","import type { ControlRenderingStyleOverride } from '../controls/controlRendering';\nimport { classRegistry } from '../ClassRegistry';\nimport type { GroupProps } from './Group';\nimport { Group } from './Group';\nimport type { FabricObject } from './Object/FabricObject';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { TClassProperties } from '../typedefs';\nimport { log } from '../util/internals/console';\nimport { ActiveSelectionLayoutManager } from '../LayoutManager/ActiveSelectionLayoutManager';\n\nexport type MultiSelectionStacking = 'canvas-stacking' | 'selection-order';\n\nexport interface ActiveSelectionOptions extends GroupProps {\n  multiSelectionStacking: MultiSelectionStacking;\n}\n\nconst activeSelectionDefaultValues: Partial<TClassProperties<ActiveSelection>> =\n  {\n    multiSelectionStacking: 'canvas-stacking',\n  };\n\n/**\n * Used by Canvas to manage selection.\n *\n * @example\n * class MyActiveSelection extends ActiveSelection {\n *   ...\n * }\n *\n * // override the default `ActiveSelection` class\n * classRegistry.setClass(MyActiveSelection)\n */\nexport class ActiveSelection extends Group {\n  static type = 'ActiveSelection';\n\n  static ownDefaults: Record<string, any> = activeSelectionDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...ActiveSelection.ownDefaults };\n  }\n\n  /**\n   * The ActiveSelection needs to use the ActiveSelectionLayoutManager\n   * or selections on interactive groups may be broken\n   */\n  declare layoutManager: ActiveSelectionLayoutManager;\n\n  /**\n   * controls how selected objects are added during a multiselection event\n   * - `canvas-stacking` adds the selected object to the active selection while respecting canvas object stacking order\n   * - `selection-order` adds the selected object to the top of the stack,\n   * meaning that the stack is ordered by the order in which objects were selected\n   * @default `canvas-stacking`\n   */\n  declare multiSelectionStacking: MultiSelectionStacking;\n\n  constructor(\n    objects: FabricObject[] = [],\n    options: Partial<ActiveSelectionOptions> = {},\n  ) {\n    super();\n    Object.assign(this, ActiveSelection.ownDefaults);\n    this.setOptions(options);\n    const { left, top, layoutManager } = options;\n    this.groupInit(objects, {\n      left,\n      top,\n      layoutManager: layoutManager ?? new ActiveSelectionLayoutManager(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return true;\n  }\n\n  /**\n   * @private\n   * @override we don't want the selection monitor to be active\n   */\n  __objectSelectionMonitor() {\n    //  noop\n  }\n\n  /**\n   * Adds objects with respect to {@link multiSelectionStacking}\n   * @param targets object to add to selection\n   */\n  multiSelectAdd(...targets: FabricObject[]) {\n    if (this.multiSelectionStacking === 'selection-order') {\n      this.add(...targets);\n    } else {\n      //  respect object stacking as it is on canvas\n      //  perf enhancement for large ActiveSelection: consider a binary search of `isInFrontOf`\n      targets.forEach((target) => {\n        const index = this._objects.findIndex((obj) => obj.isInFrontOf(target));\n        const insertAt =\n          index === -1\n            ? //  `target` is in front of all other objects\n              this.size()\n            : index;\n        this.insertAt(insertAt, target);\n      });\n    }\n  }\n\n  /**\n   * @override block ancestors/descendants of selected objects from being selected to prevent a circular object tree\n   */\n  canEnterGroup(object: FabricObject) {\n    if (\n      this.getObjects().some(\n        (o) => o.isDescendantOf(object) || object.isDescendantOf(o),\n      )\n    ) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'ActiveSelection: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    }\n\n    return super.canEnterGroup(object);\n  }\n\n  /**\n   * Change an object so that it can be part of an active selection.\n   * this method is called by multiselectAdd from canvas code.\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    // This condition check that the object has currently a group, and the group\n    // is also its parent, meaning that is not in an active selection, but is\n    // in a normal group.\n    if (object.parent && object.parent === object.group) {\n      // Disconnect the object from the group functionalities, but keep the ref parent intact\n      // for later re-enter\n      object.parent._exitGroup(object);\n      // in this case the object is probably inside an active selection.\n    } else if (object.group && object.parent !== object.group) {\n      // in this case group.remove will also clear the old parent reference.\n      object.group.remove(object);\n    }\n    // enter the active selection from a render perspective\n    // the object will be in the objects array of both the ActiveSelection and the Group\n    // but referenced in the group's _activeObjects so that it won't be rendered twice.\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * we want objects to retain their canvas ref when exiting instance\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    // return to parent\n    object.parent && object.parent._enterGroup(object, true);\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    super._onAfterObjectsChange(type, targets);\n    const groups = new Set<Group>();\n    targets.forEach((object) => {\n      const { parent } = object;\n      parent && groups.add(parent);\n    });\n    if (type === LAYOUT_TYPE_REMOVED) {\n      //  invalidate groups' layout and mark as dirty\n      groups.forEach((group) => {\n        group._onAfterObjectsChange(LAYOUT_TYPE_ADDED, targets);\n      });\n    } else {\n      //  mark groups as dirty\n      groups.forEach((group) => {\n        group._set('dirty', true);\n      });\n    }\n  }\n\n  /**\n   * @override remove all objects\n   */\n  onDeselect() {\n    this.removeAll();\n    return false;\n  }\n\n  /**\n   * Returns string representation of a group\n   * @return {String}\n   */\n  toString() {\n    return `#<ActiveSelection: (${this.complexity()})>`;\n  }\n\n  /**\n   * Decide if the object should cache or not. The Active selection never caches\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return false;\n  }\n\n  /**\n   * Check if this group or its parent group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache() {\n    return false;\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [styleOverride] properties to override the object style\n   * @param {Object} [childrenOverride] properties to override the children overrides\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride?: ControlRenderingStyleOverride,\n    childrenOverride?: ControlRenderingStyleOverride,\n  ) {\n    ctx.save();\n    ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    const options = {\n      hasControls: false,\n      ...childrenOverride,\n      forActiveSelection: true,\n    };\n    for (let i = 0; i < this._objects.length; i++) {\n      this._objects[i]._renderControls(ctx, options);\n    }\n    super._renderControls(ctx, styleOverride);\n    ctx.restore();\n  }\n}\n\nclassRegistry.setClass(ActiveSelection);\nclassRegistry.setClass(ActiveSelection, 'activeSelection');\n","/**\n * Canvas 2D filter backend.\n */\nimport type { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TPipelineResources } from './typedefs';\n\nexport class Canvas2dFilterBackend {\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  /**\n   * Apply a set of filters against a source image and draw the filtered output\n   * to the provided destination canvas.\n   *\n   * @param {EnhancedFilter} filters The filter to apply.\n   * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n   * @param {Number} sourceWidth The width of the source input.\n   * @param {Number} sourceHeight The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    sourceElement: CanvasImageSource,\n    sourceWidth: number,\n    sourceHeight: number,\n    targetCanvas: HTMLCanvasElement,\n  ): T2DPipelineState | void {\n    const ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n    const imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const pipelineState: T2DPipelineState = {\n      sourceWidth,\n      sourceHeight,\n      imageData,\n      originalEl: sourceElement,\n      originalImageData,\n      canvasEl: targetCanvas,\n      ctx,\n      filterBackend: this,\n    };\n    filters.forEach((filter) => {\n      filter.applyTo(pipelineState);\n    });\n    const { imageData: imageDataPostFilter } = pipelineState;\n    if (\n      imageDataPostFilter.width !== sourceWidth ||\n      imageDataPostFilter.height !== sourceHeight\n    ) {\n      targetCanvas.width = imageDataPostFilter.width;\n      targetCanvas.height = imageDataPostFilter.height;\n    }\n    ctx.putImageData(imageDataPostFilter, 0, 0);\n    return pipelineState;\n  }\n}\n","import { config } from '../config';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport type {\n  TWebGLPipelineState,\n  TProgramCache,\n  TTextureCache,\n  TPipelineResources,\n} from './typedefs';\nimport type { BaseFilter } from './BaseFilter';\n\nexport class WebGLFilterBackend {\n  declare tileSize: number;\n\n  /**\n   * Define ...\n   **/\n  aPosition: Float32Array = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n\n  /**\n   * If GLPut data is the fastest operation, or if forced, this buffer will be used\n   * to transfer the data back in the 2d logic\n   **/\n  declare imageBuffer?: ArrayBuffer;\n\n  declare canvas: HTMLCanvasElement;\n\n  /**\n   * The Webgl context that will execute the operations for filtering\n   **/\n  declare gl: WebGLRenderingContext;\n\n  /**\n   * Keyed map for shader cache\n   **/\n  declare programCache: TProgramCache;\n\n  /**\n   * Keyed map for texture cache\n   **/\n  declare textureCache: TTextureCache;\n\n  /**\n   * Contains GPU info for debug\n   **/\n  declare gpuInfo: any;\n\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  constructor({ tileSize = config.textureSize } = {}) {\n    this.tileSize = tileSize;\n    this.setupGLContext(tileSize, tileSize);\n    this.captureGPUInfo();\n  }\n\n  /**\n   * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n   */\n  setupGLContext(width: number, height: number): void {\n    this.dispose();\n    this.createWebGLCanvas(width, height);\n  }\n\n  /**\n   * Create a canvas element and associated WebGL context and attaches them as\n   * class properties to the GLFilterBackend class.\n   */\n  createWebGLCanvas(width: number, height: number): void {\n    const canvas = createCanvasElementFor({ width, height });\n    const glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false,\n      },\n      gl = canvas.getContext('webgl', glOptions) as WebGLRenderingContext;\n\n    if (!gl) {\n      return;\n    }\n    gl.clearColor(0, 0, 0, 0);\n    // this canvas can fire webglcontextlost and webglcontextrestored\n    this.canvas = canvas;\n    this.gl = gl;\n  }\n\n  /**\n   * Attempts to apply the requested filters to the source provided, drawing the filtered output\n   * to the provided target canvas.\n   *\n   * @param {Array} filters The filters to apply.\n   * @param {TexImageSource} source The source to be filtered.\n   * @param {Number} width The width of the source input.\n   * @param {Number} height The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n   * omitted, caching will be skipped.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    source: TexImageSource,\n    width: number,\n    height: number,\n    targetCanvas: HTMLCanvasElement,\n    cacheKey?: string,\n  ): TWebGLPipelineState | undefined {\n    const gl = this.gl;\n    const ctx = targetCanvas.getContext('2d');\n    if (!gl || !ctx) {\n      return;\n    }\n    let cachedTexture;\n    if (cacheKey) {\n      cachedTexture = this.getCachedTexture(cacheKey, source);\n    }\n    const pipelineState: TWebGLPipelineState = {\n      originalWidth:\n        (source as HTMLImageElement).width ||\n        (source as HTMLImageElement).naturalWidth ||\n        0,\n      originalHeight:\n        (source as HTMLImageElement).height ||\n        (source as HTMLImageElement).naturalHeight ||\n        0,\n      sourceWidth: width,\n      sourceHeight: height,\n      destinationWidth: width,\n      destinationHeight: height,\n      context: gl,\n      sourceTexture: this.createTexture(\n        gl,\n        width,\n        height,\n        !cachedTexture ? source : undefined,\n      ),\n      targetTexture: this.createTexture(gl, width, height),\n      originalTexture:\n        cachedTexture ||\n        this.createTexture(\n          gl,\n          width,\n          height,\n          !cachedTexture ? source : undefined,\n        )!,\n      passes: filters.length,\n      webgl: true,\n      aPosition: this.aPosition,\n      programCache: this.programCache,\n      pass: 0,\n      filterBackend: this,\n      targetCanvas: targetCanvas,\n    };\n    const tempFbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n    filters.forEach((filter: any) => {\n      filter && filter.applyTo(pipelineState);\n    });\n    resizeCanvasIfNeeded(pipelineState);\n    this.copyGLTo2D(gl, pipelineState);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.deleteTexture(pipelineState.sourceTexture);\n    gl.deleteTexture(pipelineState.targetTexture);\n    gl.deleteFramebuffer(tempFbo);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    return pipelineState;\n  }\n\n  /**\n   * Detach event listeners, remove references, and clean up caches.\n   */\n  dispose() {\n    if (this.canvas) {\n      // we are disposing, we don't care about the fact\n      // that the canvas shouldn't be null.\n      // @ts-expect-error disposing\n      this.canvas = null;\n      // @ts-expect-error disposing\n      this.gl = null;\n    }\n    this.clearWebGLCaches();\n  }\n\n  /**\n   * Wipe out WebGL-related caches.\n   */\n  clearWebGLCaches() {\n    this.programCache = {};\n    this.textureCache = {};\n  }\n\n  /**\n   * Create a WebGL texture object.\n   *\n   * Accepts specific dimensions to initialize the texture to or a source image.\n   *\n   * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n   * @param {number} width The width to initialize the texture at.\n   * @param {number} height The height to initialize the texture.\n   * @param {TexImageSource} textureImageSource A source for the texture data.\n   * @param {number} filter gl.NEAREST default or gl.LINEAR filters for the texture.\n   * This filter is very useful for LUTs filters. If you need interpolation use gl.LINEAR\n   * @returns {WebGLTexture}\n   */\n  createTexture(\n    gl: WebGLRenderingContext,\n    width: number,\n    height: number,\n    textureImageSource?: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ) {\n    const {\n      NEAREST,\n      TEXTURE_2D,\n      RGBA,\n      UNSIGNED_BYTE,\n      CLAMP_TO_EDGE,\n      TEXTURE_MAG_FILTER,\n      TEXTURE_MIN_FILTER,\n      TEXTURE_WRAP_S,\n      TEXTURE_WRAP_T,\n    } = gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MAG_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n    if (textureImageSource) {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        RGBA,\n        UNSIGNED_BYTE,\n        textureImageSource,\n      );\n    } else {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        width,\n        height,\n        0,\n        RGBA,\n        UNSIGNED_BYTE,\n        null,\n      );\n    }\n    return texture;\n  }\n\n  /**\n   * Can be optionally used to get a texture from the cache array\n   *\n   * If an existing texture is not found, a new texture is created and cached.\n   *\n   * @param {String} uniqueId A cache key to use to find an existing texture.\n   * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n   * texture cache entry if one does not already exist.\n   */\n  getCachedTexture(\n    uniqueId: string,\n    textureImageSource: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ): WebGLTexture | null {\n    const { textureCache } = this;\n    if (textureCache[uniqueId]) {\n      return textureCache[uniqueId];\n    } else {\n      const texture = this.createTexture(\n        this.gl,\n        (textureImageSource as HTMLImageElement).width,\n        (textureImageSource as HTMLImageElement).height,\n        textureImageSource,\n        filter,\n      );\n      if (texture) {\n        textureCache[uniqueId] = texture;\n      }\n      return texture;\n    }\n  }\n\n  /**\n   * Clear out cached resources related to a source image that has been\n   * filtered previously.\n   *\n   * @param {String} cacheKey The cache key provided when the source image was filtered.\n   */\n  evictCachesForKey(cacheKey: string) {\n    if (this.textureCache[cacheKey]) {\n      this.gl.deleteTexture(this.textureCache[cacheKey]);\n      delete this.textureCache[cacheKey];\n    }\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas.\n   *\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2D(gl: WebGLRenderingContext, pipelineState: TWebGLPipelineState) {\n    const glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.translate(0, targetCanvas.height); // move it down again\n    ctx.scale(1, -1); // vertical flip\n    // where is my image on the big glcanvas?\n    const sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(\n      glCanvas,\n      0,\n      sourceY,\n      targetCanvas.width,\n      targetCanvas.height,\n      0,\n      0,\n      targetCanvas.width,\n      targetCanvas.height,\n    );\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2DPutImageData(\n    this: Required<WebGLFilterBackend>,\n    gl: WebGLRenderingContext,\n    pipelineState: TWebGLPipelineState,\n  ) {\n    const targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n    if (!ctx) {\n      return;\n    }\n    const u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    const u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    const imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Attempt to extract GPU information strings from a WebGL context.\n   *\n   * Useful information when debugging or blacklisting specific GPUs.\n   *\n   * @returns {Object} A GPU info object with renderer and vendor strings.\n   */\n  captureGPUInfo() {\n    if (this.gpuInfo) {\n      return this.gpuInfo;\n    }\n    const gl = this.gl,\n      gpuInfo = { renderer: '', vendor: '' };\n    if (!gl) {\n      return gpuInfo;\n    }\n    const ext = gl.getExtension('WEBGL_debug_renderer_info');\n    if (ext) {\n      const renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n      const vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n      if (renderer) {\n        gpuInfo.renderer = renderer.toLowerCase();\n      }\n      if (vendor) {\n        gpuInfo.vendor = vendor.toLowerCase();\n      }\n    }\n    this.gpuInfo = gpuInfo;\n    return gpuInfo;\n  }\n}\n\nfunction resizeCanvasIfNeeded(pipelineState: TWebGLPipelineState): void {\n  const targetCanvas = pipelineState.targetCanvas,\n    width = targetCanvas.width,\n    height = targetCanvas.height,\n    dWidth = pipelineState.destinationWidth,\n    dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n","import { config } from '../config';\nimport { getEnv } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { Canvas2dFilterBackend } from './Canvas2dFilterBackend';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\n\nexport type FilterBackend = WebGLFilterBackend | Canvas2dFilterBackend;\n\nlet filterBackend: FilterBackend;\n\n/**\n * Verifies if it is possible to initialize webgl or fallback on a canvas2d filtering backend\n */\nexport function initFilterBackend(): FilterBackend {\n  const { WebGLProbe } = getEnv();\n  WebGLProbe.queryWebGL(createCanvasElement());\n  if (config.enableGLFiltering && WebGLProbe.isSupported(config.textureSize)) {\n    return new WebGLFilterBackend({ tileSize: config.textureSize });\n  } else {\n    return new Canvas2dFilterBackend();\n  }\n}\n\n/**\n * Get the current fabricJS filter backend  or initialize one if not available yet\n * @param [strict] pass `true` to create the backend if it wasn't created yet (default behavior),\n * pass `false` to get the backend ref without mutating it\n */\nexport function getFilterBackend(strict = true): FilterBackend {\n  if (!filterBackend && strict) {\n    filterBackend = initFilterBackend();\n  }\n  return filterBackend;\n}\n\nexport function setFilterBackend(backend: FilterBackend) {\n  filterBackend = backend;\n}\n","import { getFabricDocument, getEnv } from '../env';\nimport type { BaseFilter } from '../filters/BaseFilter';\nimport { getFilterBackend } from '../filters/FilterBackend';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type {\n  TClassProperties,\n  TCrossOrigin,\n  TSize,\n  Abortable,\n  TOptions,\n} from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n  loadImage,\n} from '../util/misc/objectEnlive';\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\nimport { FILL, NONE } from '../constants';\nimport { getDocumentFromElement } from '../util/dom_misc';\nimport type { CSSRules } from '../parser/typedefs';\nimport type { Resize } from '../filters/Resize';\nimport type { TCachedFabricObject } from './Object/Object';\nimport { log } from '../util/internals/console';\n\n// @todo Would be nice to have filtering code not imported directly.\n\nexport type ImageSource =\n  | HTMLImageElement\n  | HTMLVideoElement\n  | HTMLCanvasElement;\n\ninterface UniqueImageProps {\n  srcFromAttribute: boolean;\n  minimumScaleTrigger: number;\n  cropX: number;\n  cropY: number;\n  imageSmoothing: boolean;\n  filters: BaseFilter<string, Record<string, any>>[];\n  resizeFilter?: Resize;\n}\n\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\n  strokeWidth: 0,\n  srcFromAttribute: false,\n  minimumScaleTrigger: 0.5,\n  cropX: 0,\n  cropY: 0,\n  imageSmoothing: true,\n};\n\nexport interface SerializedImageProps extends SerializedObjectProps {\n  src: string;\n  crossOrigin: TCrossOrigin;\n  filters: any[];\n  resizeFilter?: any;\n  cropX: number;\n  cropY: number;\n}\n\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\n\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n */\nexport class FabricImage<\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\n    SProps extends SerializedImageProps = SerializedImageProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements ImageProps\n{\n  /**\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\n   * This allows for relative urls as image src.\n   * @since 2.7.0\n   * @type Boolean\n   * @default false\n   */\n  declare srcFromAttribute: boolean;\n\n  /**\n   * private\n   * contains last value of scaleX to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleX = 1;\n\n  /**\n   * private\n   * contains last value of scaleY to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleY = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingX = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingY = 1;\n\n  /**\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\n   * number bigger than 1 are not implemented yet.\n   * @type Number\n   */\n  declare minimumScaleTrigger: number;\n\n  /**\n   * key used to retrieve the texture representing this image\n   * @since 2.0.0\n   * @type String\n   * @default\n   */\n  declare cacheKey: string;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropX: number;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropY: number;\n\n  /**\n   * Indicates whether this canvas will use image smoothing when painting this image.\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\n   * @since 4.0.0-beta.11\n   * @type Boolean\n   * @default\n   */\n  declare imageSmoothing: boolean;\n\n  declare preserveAspectRatio: string;\n\n  protected declare src: string;\n\n  declare filters: BaseFilter<string, Record<string, any>>[];\n  declare resizeFilter: Resize;\n\n  declare _element: ImageSource;\n  declare _filteredEl?: HTMLCanvasElement;\n  declare _originalElement: ImageSource;\n\n  static type = 'Image';\n\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\n\n  static ownDefaults = imageDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...FabricImage.ownDefaults,\n    };\n  }\n  /**\n   * Constructor\n   * Image can be initialized with any canvas drawable or a string.\n   * The string should be a url and will be loaded as an image.\n   * Canvas and Image element work out of the box, while videos require extra code to work.\n   * Please check video element events for seeking.\n   * @param {ImageSource | string} element Image element\n   * @param {Object} [options] Options object\n   */\n  constructor(elementId: string, options?: Props);\n  constructor(element: ImageSource, options?: Props);\n  constructor(arg0: ImageSource | string, options?: Props) {\n    super();\n    this.filters = [];\n    Object.assign(this, FabricImage.ownDefaults);\n    this.setOptions(options);\n    this.cacheKey = `texture${uid()}`;\n    this.setElement(\n      typeof arg0 === 'string'\n        ? ((\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n            getFabricDocument()\n          ).getElementById(arg0) as ImageSource)\n        : arg0,\n      options,\n    );\n  }\n\n  /**\n   * Returns image element which this instance if based on\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets image element for this instance to a specified one.\n   * If filters defined they are applied to new image.\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n   * @param {HTMLImageElement} element\n   * @param {Partial<TSize>} [size] Options object\n   */\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._element = element;\n    this._originalElement = element;\n    this._setWidthHeight(size);\n    element.classList?.add(FabricImage.CSS_CANVAS);\n    if (this.filters.length !== 0) {\n      this.applyFilters();\n    }\n    // resizeFilters work on the already filtered copy.\n    // we need to apply resizeFilters AFTER normal filters.\n    // applyResizeFilters is run more often than normal filters\n    // and is triggered by user interactions rather than dev code\n    if (this.resizeFilter) {\n      this.applyResizeFilters();\n    }\n  }\n\n  /**\n   * Delete a single texture if in webgl mode\n   */\n  removeTexture(key: string) {\n    const backend = getFilterBackend(false);\n    if (backend instanceof WebGLFilterBackend) {\n      backend.evictCachesForKey(key);\n    }\n  }\n\n  /**\n   * Delete textures, reference to elements and eventually JSDOM cleanup\n   */\n  dispose() {\n    super.dispose();\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._cacheContext = null;\n    (\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\n    ).forEach((elementKey) => {\n      const el = this[elementKey];\n      el && getEnv().dispose(el);\n      // @ts-expect-error disposing\n      this[elementKey] = undefined;\n    });\n  }\n\n  /**\n   * Get the crossOrigin value (of the corresponding image element)\n   */\n  getCrossOrigin(): string | null {\n    return (\n      this._originalElement &&\n      ((this._originalElement as any).crossOrigin || null)\n    );\n  }\n\n  /**\n   * Returns original size of an image\n   */\n  getOriginalSize() {\n    const element = this.getElement() as any;\n    if (!element) {\n      return {\n        width: 0,\n        height: 0,\n      };\n    }\n    return {\n      width: element.naturalWidth || element.width,\n      height: element.naturalHeight || element.height,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _stroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    const w = this.width / 2,\n      h = this.height / 2;\n    ctx.beginPath();\n    ctx.moveTo(-w, -h);\n    ctx.lineTo(w, -h);\n    ctx.lineTo(w, h);\n    ctx.lineTo(-w, h);\n    ctx.lineTo(-w, -h);\n    ctx.closePath();\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const filters: Record<string, any>[] = [];\n    this.filters.forEach((filterObj) => {\n      filterObj && filters.push(filterObj.toObject());\n    });\n    return {\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\n      src: this.getSrc(),\n      crossOrigin: this.getCrossOrigin(),\n      filters,\n      ...(this.resizeFilter\n        ? { resizeFilter: this.resizeFilter.toObject() }\n        : {}),\n    };\n  }\n\n  /**\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n   * @return {Boolean}\n   */\n  hasCrop() {\n    return (\n      !!this.cropX ||\n      !!this.cropY ||\n      this.width < this._element.width ||\n      this.height < this._element.height\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {string[]} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const imageMarkup: string[] = [],\n      element = this._element,\n      x = -this.width / 2,\n      y = -this.height / 2;\n    let svgString: string[] = [],\n      strokeSvg: string[] = [],\n      clipPath = '',\n      imageRendering = '';\n    if (!element) {\n      return [];\n    }\n    if (this.hasCrop()) {\n      const clipPathId = uid();\n      svgString.push(\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n        '\\t<rect x=\"' +\n          x +\n          '\" y=\"' +\n          y +\n          '\" width=\"' +\n          this.width +\n          '\" height=\"' +\n          this.height +\n          '\" />\\n',\n        '</clipPath>\\n',\n      );\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n    }\n    if (!this.imageSmoothing) {\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\n    }\n    imageMarkup.push(\n      '\\t<image ',\n      'COMMON_PARTS',\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\n        y - this.cropY\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n      }\" width=\"${\n        element.width || (element as HTMLImageElement).naturalWidth\n      }\" height=\"${\n        element.height || (element as HTMLImageElement).naturalHeight\n      }\"${imageRendering}${clipPath}></image>\\n`,\n    );\n\n    if (this.stroke || this.strokeDashArray) {\n      const origFill = this.fill;\n      this.fill = null;\n      strokeSvg = [\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\n          this.height\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\n      ];\n      this.fill = origFill;\n    }\n    if (this.paintFirst !== FILL) {\n      svgString = svgString.concat(strokeSvg, imageMarkup);\n    } else {\n      svgString = svgString.concat(imageMarkup, strokeSvg);\n    }\n    return svgString;\n  }\n\n  /**\n   * Returns source of an image\n   * @param {Boolean} filtered indicates if the src is needed for svg\n   * @return {String} Source of an image\n   */\n  getSrc(filtered?: boolean): string {\n    const element = filtered ? this._element : this._originalElement;\n    if (element) {\n      if ((element as HTMLCanvasElement).toDataURL) {\n        return (element as HTMLCanvasElement).toDataURL();\n      }\n\n      if (this.srcFromAttribute) {\n        return element.getAttribute('src') || '';\n      } else {\n        return (element as HTMLImageElement).src;\n      }\n    } else {\n      return this.src || '';\n    }\n  }\n\n  /**\n   * Alias for getSrc\n   * @param filtered\n   * @deprecated\n   */\n  getSvgSrc(filtered?: boolean) {\n    return this.getSrc(filtered);\n  }\n\n  /**\n   * Loads and sets source of an image\\\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   * @param {String} src Source string (URL)\n   * @param {LoadImageOptions} [options] Options object\n   */\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\n      this.setElement(img);\n    });\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of an instance\n   */\n  toString() {\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\n  }\n\n  applyResizeFilters() {\n    const filter = this.resizeFilter,\n      minimumScale = this.minimumScaleTrigger,\n      objectScale = this.getTotalObjectScaling(),\n      scaleX = objectScale.x,\n      scaleY = objectScale.y,\n      elementToFilter = this._filteredEl || this._originalElement;\n    if (this.group) {\n      this.set('dirty', true);\n    }\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n      this._element = elementToFilter;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      this._lastScaleX = scaleX;\n      this._lastScaleY = scaleY;\n      return;\n    }\n    const canvasEl = createCanvasElementFor(elementToFilter),\n      { width, height } = elementToFilter;\n    this._element = canvasEl;\n    this._lastScaleX = filter.scaleX = scaleX;\n    this._lastScaleY = filter.scaleY = scaleY;\n    getFilterBackend().applyFilters(\n      [filter],\n      elementToFilter,\n      width,\n      height,\n      this._element,\n    );\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\n  }\n\n  /**\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\n   * @method applyFilters\n   * @param {Array} filters to be applied\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[] = this.filters || [],\n  ) {\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\n    this.set('dirty', true);\n\n    // needs to clear out or WEBGL will not resize correctly\n    this.removeTexture(`${this.cacheKey}_filtered`);\n\n    if (filters.length === 0) {\n      this._element = this._originalElement;\n      // this is unsafe and needs to be rethinkend\n      this._filteredEl = undefined;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      return;\n    }\n\n    const imgElement = this._originalElement,\n      sourceWidth =\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\n      sourceHeight =\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\n\n    if (this._element === this._originalElement) {\n      // if the _element a reference to _originalElement\n      // we need to create a new element to host the filtered pixels\n      const canvasEl = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      this._element = canvasEl;\n      this._filteredEl = canvasEl;\n    } else if (this._filteredEl) {\n      // if the _element is it own element,\n      // and we also have a _filteredEl, then we clean up _filteredEl\n      // and we assign it to _element.\n      // in this way we invalidate the eventual old resize filtered element\n      this._element = this._filteredEl;\n      this._filteredEl\n        .getContext('2d')!\n        .clearRect(0, 0, sourceWidth, sourceHeight);\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n      this._lastScaleX = 1;\n      this._lastScaleY = 1;\n    }\n    getFilterBackend().applyFilters(\n      filters,\n      this._originalElement,\n      sourceWidth,\n      sourceHeight,\n      this._element as HTMLCanvasElement,\n      this.cacheKey,\n    );\n    if (\n      this._originalElement.width !== this._element.width ||\n      this._originalElement.height !== this._element.height\n    ) {\n      this._filterScalingX = this._element.width / this._originalElement.width;\n      this._filterScalingY =\n        this._element.height / this._originalElement.height;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n      this.applyResizeFilters();\n    }\n    this._stroke(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * it will set the imageSmoothing for the draw operation\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(\n    this: TCachedFabricObject<FabricImage>,\n    ctx: CanvasRenderingContext2D,\n  ) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    super.drawCacheOnCanvas(ctx);\n  }\n\n  /**\n   * Decide if the FabricImage should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * This is the special Image version where we would like to avoid caching where possible.\n   * Essentially images do not benefit from caching. They may require caching, and in that\n   * case we do it. Also caching an image usually ends in a loss of details.\n   * A full performance audit should be done.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return this.needsItsOwnCache();\n  }\n\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    const elementToDraw = this._element;\n    if (!elementToDraw) {\n      return;\n    }\n    const scaleX = this._filterScalingX,\n      scaleY = this._filterScalingY,\n      w = this.width,\n      h = this.height,\n      // crop values cannot be lesser than 0.\n      cropX = Math.max(this.cropX, 0),\n      cropY = Math.max(this.cropY, 0),\n      elWidth =\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\n      elHeight =\n        (elementToDraw as HTMLImageElement).naturalHeight ||\n        elementToDraw.height,\n      sX = cropX * scaleX,\n      sY = cropY * scaleY,\n      // the width height cannot exceed element width/height, starting from the crop offset.\n      sW = Math.min(w * scaleX, elWidth - sX),\n      sH = Math.min(h * scaleY, elHeight - sY),\n      x = -w / 2,\n      y = -h / 2,\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\n\n    elementToDraw &&\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n  }\n\n  /**\n   * needed to check if image needs resize\n   * @private\n   */\n  _needsResize() {\n    const scale = this.getTotalObjectScaling();\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\n  }\n\n  /**\n   * @private\n   * @deprecated unused\n   */\n  _resetWidthHeight() {\n    this.set(this.getOriginalSize());\n  }\n\n  /**\n   * @private\n   * Set the width and the height of the image object, using the element or the\n   * options.\n   */\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\n    const size = this.getOriginalSize();\n    this.width = width || size.width;\n    this.height = height || size.height;\n  }\n\n  /**\n   * Calculate offset for center and scale factor for the image in order to respect\n   * the preserveAspectRatio attribute\n   * @private\n   */\n  parsePreserveAspectRatioAttribute() {\n    const pAR = parsePreserveAspectRatioAttribute(\n        this.preserveAspectRatio || '',\n      ),\n      pWidth = this.width,\n      pHeight = this.height,\n      parsedAttributes = { width: pWidth, height: pHeight };\n    let rWidth = this._element.width,\n      rHeight = this._element.height,\n      scaleX = 1,\n      scaleY = 1,\n      offsetLeft = 0,\n      offsetTop = 0,\n      cropX = 0,\n      cropY = 0,\n      offset;\n\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\n      if (pAR.meetOrSlice === 'meet') {\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\n        offset = (pWidth - rWidth * scaleX) / 2;\n        if (pAR.alignX === 'Min') {\n          offsetLeft = -offset;\n        }\n        if (pAR.alignX === 'Max') {\n          offsetLeft = offset;\n        }\n        offset = (pHeight - rHeight * scaleY) / 2;\n        if (pAR.alignY === 'Min') {\n          offsetTop = -offset;\n        }\n        if (pAR.alignY === 'Max') {\n          offsetTop = offset;\n        }\n      }\n      if (pAR.meetOrSlice === 'slice') {\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\n        offset = rWidth - pWidth / scaleX;\n        if (pAR.alignX === 'Mid') {\n          cropX = offset / 2;\n        }\n        if (pAR.alignX === 'Max') {\n          cropX = offset;\n        }\n        offset = rHeight - pHeight / scaleY;\n        if (pAR.alignY === 'Mid') {\n          cropY = offset / 2;\n        }\n        if (pAR.alignY === 'Max') {\n          cropY = offset;\n        }\n        rWidth = pWidth / scaleX;\n        rHeight = pHeight / scaleY;\n      }\n    } else {\n      scaleX = pWidth / rWidth;\n      scaleY = pHeight / rHeight;\n    }\n    return {\n      width: rWidth,\n      height: rHeight,\n      scaleX,\n      scaleY,\n      offsetLeft,\n      offsetTop,\n      cropX,\n      cropY,\n    };\n  }\n\n  /**\n   * Default CSS class name for canvas\n   * Will be removed from fabric 7\n   * @static\n   * @deprecated\n   * @type String\n   * @default\n   */\n  static CSS_CANVAS = 'canvas-img';\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'width',\n    'height',\n    'preserveAspectRatio',\n    'xlink:href',\n    'href',\n    'crossOrigin',\n    'image-rendering',\n  ];\n\n  /**\n   * Creates an instance of FabricImage from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricImage>}\n   */\n  static fromObject<T extends TOptions<SerializedImageProps>>(\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\n    options?: Abortable,\n  ) {\n    return Promise.all([\n      loadImage(src!, { ...options, crossOrigin }),\n      f && enlivenObjects<BaseFilter<string>>(f, options),\n      // TODO: redundant - handled by enlivenObjectEnlivables\n      rf && enlivenObjects<BaseFilter<'Resize'>>([rf], options),\n      enlivenObjectEnlivables(object, options),\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\n      return new this(el, {\n        ...object,\n        // TODO: this creates a difference between image creation and restoring from JSON\n        src,\n        filters,\n        resizeFilter,\n        ...hydratedProps,\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {LoadImageOptions} [options] Options object\n   * @returns {Promise<FabricImage>}\n   */\n  static fromURL<T extends TOptions<ImageProps>>(\n    url: string,\n    { crossOrigin = null, signal }: LoadImageOptions = {},\n    imageOptions?: T,\n  ): Promise<FabricImage> {\n    return loadImage(url, { crossOrigin, signal }).then(\n      (img) => new this(img, imageOptions),\n    );\n  }\n\n  /**\n   * Returns {@link FabricImage} instance from an SVG element\n   * @static\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @param {Function} callback Callback to execute when Image object is created\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable = {},\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return this.fromURL(\n      parsedAttributes['xlink:href'] || parsedAttributes['href'],\n      options,\n      parsedAttributes,\n    ).catch((err) => {\n      log('log', 'Unable to parse Image', err);\n      return null;\n    });\n  }\n}\n\nclassRegistry.setClass(FabricImage);\nclassRegistry.setSVGClass(FabricImage);\n","import { svgNS } from './constants';\nimport {\n  parsePreserveAspectRatioAttribute,\n  parseUnit,\n} from '../util/misc/svgParsing';\nimport { svgViewBoxElementsRegEx, reViewBoxAttrValue } from './constants';\nimport { NONE } from '../constants';\n\nexport type ParsedViewboxTransform = Partial<{\n  width: number;\n  height: number;\n  minX: number;\n  minY: number;\n  viewBoxWidth: number;\n  viewBoxHeight: number;\n}>;\n\n/**\n * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n */\nexport function applyViewboxTransform(\n  element: Element,\n): ParsedViewboxTransform {\n  if (!svgViewBoxElementsRegEx.test(element.nodeName)) {\n    return {};\n  }\n  const viewBoxAttr: string | null = element.getAttribute('viewBox');\n  let scaleX = 1;\n  let scaleY = 1;\n  let minX = 0;\n  let minY = 0;\n  let matrix;\n  let el;\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const x = element.getAttribute('x') || 0;\n  const y = element.getAttribute('y') || 0;\n  const goodViewbox = viewBoxAttr && reViewBoxAttrValue.test(viewBoxAttr);\n  const missingViewBox = !goodViewbox;\n  const missingDimAttr =\n    !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%';\n\n  let translateMatrix = '';\n  let widthDiff = 0;\n  let heightDiff = 0;\n\n  if (missingViewBox) {\n    if (\n      (x || y) &&\n      element.parentNode &&\n      element.parentNode.nodeName !== '#document'\n    ) {\n      translateMatrix =\n        ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n      matrix = (element.getAttribute('transform') || '') + translateMatrix;\n      element.setAttribute('transform', matrix);\n      element.removeAttribute('x');\n      element.removeAttribute('y');\n    }\n  }\n\n  if (missingViewBox && missingDimAttr) {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const parsedDim: ParsedViewboxTransform = {\n    width: 0,\n    height: 0,\n  };\n\n  if (missingViewBox) {\n    parsedDim.width = parseUnit(widthAttr!);\n    parsedDim.height = parseUnit(heightAttr!);\n    // set a transform for elements that have x y and are inner(only) SVGs\n    return parsedDim;\n  }\n\n  const pasedViewBox = viewBoxAttr.match(reViewBoxAttrValue)!;\n  minX = -parseFloat(pasedViewBox[1]);\n  minY = -parseFloat(pasedViewBox[2]);\n  const viewBoxWidth = parseFloat(pasedViewBox[3]);\n  const viewBoxHeight = parseFloat(pasedViewBox[4]);\n  parsedDim.minX = minX;\n  parsedDim.minY = minY;\n  parsedDim.viewBoxWidth = viewBoxWidth;\n  parsedDim.viewBoxHeight = viewBoxHeight;\n  if (!missingDimAttr) {\n    parsedDim.width = parseUnit(widthAttr);\n    parsedDim.height = parseUnit(heightAttr);\n    scaleX = parsedDim.width / viewBoxWidth;\n    scaleY = parsedDim.height / viewBoxHeight;\n  } else {\n    parsedDim.width = viewBoxWidth;\n    parsedDim.height = viewBoxHeight;\n  }\n\n  // default is to preserve aspect ratio\n  const preserveAspectRatio = parsePreserveAspectRatioAttribute(\n    element.getAttribute('preserveAspectRatio') || '',\n  );\n  if (preserveAspectRatio.alignX !== NONE) {\n    //translate all container for the effect of Mid, Min, Max\n    if (preserveAspectRatio.meetOrSlice === 'meet') {\n      scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n      // calculate additional translation to move the viewbox\n    }\n    if (preserveAspectRatio.meetOrSlice === 'slice') {\n      scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY;\n      // calculate additional translation to move the viewbox\n    }\n    widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n    heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n    if (preserveAspectRatio.alignX === 'Mid') {\n      widthDiff /= 2;\n    }\n    if (preserveAspectRatio.alignY === 'Mid') {\n      heightDiff /= 2;\n    }\n    if (preserveAspectRatio.alignX === 'Min') {\n      widthDiff = 0;\n    }\n    if (preserveAspectRatio.alignY === 'Min') {\n      heightDiff = 0;\n    }\n  }\n\n  if (\n    scaleX === 1 &&\n    scaleY === 1 &&\n    minX === 0 &&\n    minY === 0 &&\n    x === 0 &&\n    y === 0\n  ) {\n    return parsedDim;\n  }\n  if ((x || y) && element.parentNode!.nodeName !== '#document') {\n    translateMatrix =\n      ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n  }\n\n  matrix =\n    translateMatrix +\n    ' matrix(' +\n    scaleX +\n    ' 0' +\n    ' 0 ' +\n    scaleY +\n    ' ' +\n    (minX * scaleX + widthDiff) +\n    ' ' +\n    (minY * scaleY + heightDiff) +\n    ') ';\n  // seems unused.\n  // parsedDim.viewboxTransform = parseTransformAttribute(matrix);\n  if (element.nodeName === 'svg') {\n    el = element.ownerDocument.createElementNS(svgNS, 'g');\n    // element.firstChild != null\n    while (element.firstChild) {\n      el.appendChild(element.firstChild);\n    }\n    element.appendChild(el);\n  } else {\n    el = element;\n    el.removeAttribute('x');\n    el.removeAttribute('y');\n    matrix = el.getAttribute('transform') + matrix;\n  }\n  el.setAttribute('transform', matrix);\n  return parsedDim;\n}\n","export const getTagName = (node: Element) => node.tagName.replace('svg:', '');\n","import { svgInvalidAncestors } from './constants';\nimport { getSvgRegex } from './getSvgRegex';\nimport { getTagName } from './getTagName';\n\nconst svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n\nexport function hasInvalidAncestor(element: Element) {\n  let _element: Element | null = element;\n  while (_element && (_element = _element.parentElement)) {\n    if (\n      _element &&\n      _element.nodeName &&\n      svgInvalidAncestorsRegEx.test(getTagName(_element)) &&\n      !_element.getAttribute('instantiated_by_use')\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n","export function getMultipleNodes(\n  doc: Document,\n  nodeNames: string[],\n): Element[] {\n  let nodeName,\n    nodeArray: Element[] = [],\n    nodeList,\n    i,\n    len;\n  for (i = 0, len = nodeNames.length; i < len; i++) {\n    nodeName = nodeNames[i];\n    nodeList = doc.getElementsByTagNameNS(\n      'http://www.w3.org/2000/svg',\n      nodeName,\n    );\n    nodeArray = nodeArray.concat(Array.from(nodeList));\n  }\n  return nodeArray;\n}\n","const gradientsAttrs = [\n  'gradientTransform',\n  'x1',\n  'x2',\n  'y1',\n  'y2',\n  'gradientUnits',\n  'cx',\n  'cy',\n  'r',\n  'fx',\n  'fy',\n];\nconst xlinkAttr = 'xlink:href';\n\nexport function recursivelyParseGradientsXlink(\n  doc: Document,\n  gradient: Element,\n) {\n  const xLink = gradient.getAttribute(xlinkAttr)?.slice(1) || '',\n    referencedGradient = doc.getElementById(xLink);\n  if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n    recursivelyParseGradientsXlink(doc, referencedGradient as Element);\n  }\n  if (referencedGradient) {\n    gradientsAttrs.forEach((attr) => {\n      const value = referencedGradient.getAttribute(attr);\n      if (!gradient.hasAttribute(attr) && value) {\n        gradient.setAttribute(attr, value);\n      }\n    });\n    if (!gradient.children.length) {\n      const referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n  }\n  gradient.removeAttribute(xlinkAttr);\n}\n","import { getMultipleNodes } from './getMultipleNodes';\nimport { recursivelyParseGradientsXlink } from './recursivelyParseGradientsXlink';\n\nconst tagArray = [\n  'linearGradient',\n  'radialGradient',\n  'svg:linearGradient',\n  'svg:radialGradient',\n];\n\n/**\n * Parses an SVG document, returning all of the gradient declarations found in it\n * @param {SVGDocument} doc SVG document to parse\n * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n */\nexport function getGradientDefs(\n  doc: Document,\n): Record<string, SVGGradientElement> {\n  const elList = getMultipleNodes(doc, tagArray);\n  const gradientDefs: Record<string, SVGGradientElement> = {};\n  let j = elList.length;\n  while (j--) {\n    const el = elList[j];\n    if (el.getAttribute('xlink:href')) {\n      recursivelyParseGradientsXlink(doc, el);\n    }\n    const id = el.getAttribute('id');\n    if (id) {\n      gradientDefs[id] = el as SVGGradientElement;\n    }\n  }\n  return gradientDefs;\n}\n","import type { CSSRules } from './typedefs';\n\n/**\n * Returns CSS rules for a given SVG document\n * @param {HTMLElement} doc SVG document to parse\n * @return {Object} CSS rules of this document\n */\nexport function getCSSRules(doc: Document) {\n  const styles = doc.getElementsByTagName('style');\n  let i;\n  let len;\n  const allRules: CSSRules = {};\n\n  // very crude parsing of style contents\n  for (i = 0, len = styles.length; i < len; i++) {\n    const styleContents = (styles[i].textContent || '').replace(\n      // remove comments\n      /\\/\\*[\\s\\S]*?\\*\\//g,\n      '',\n    );\n\n    if (styleContents.trim() === '') {\n      continue;\n    }\n    // recovers all the rule in this form `body { style code... }`\n    // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n    styleContents\n      .split('}')\n      // remove empty rules and remove everything if we didn't split in at least 2 pieces\n      .filter((rule, index, array) => array.length > 1 && rule.trim())\n      // at this point we have hopefully an array of rules `body { style code... `\n      .forEach((rule) => {\n        // if there is more than one opening bracket and the rule starts with '@', it is likely\n        // a nested at-rule like @media, @supports, @scope, etc. Ignore these as the code below\n        // can not handle it.\n        if (\n          (rule.match(/{/g) || []).length > 1 &&\n          rule.trim().startsWith('@')\n        ) {\n          return;\n        }\n\n        const match = rule.split('{'),\n          ruleObj: Record<string, string> = {},\n          declaration = match[1].trim(),\n          propertyValuePairs = declaration.split(';').filter(function (pair) {\n            return pair.trim();\n          });\n\n        for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n          const pair = propertyValuePairs[i].split(':'),\n            property = pair[0].trim(),\n            value = pair[1].trim();\n          ruleObj[property] = value;\n        }\n        rule = match[0].trim();\n        rule.split(',').forEach((_rule) => {\n          _rule = _rule.replace(/^svg/i, '').trim();\n          if (_rule === '') {\n            return;\n          }\n          allRules[_rule] = {\n            ...(allRules[_rule] || {}),\n            ...ruleObj,\n          };\n        });\n      });\n  }\n  return allRules;\n}\n","import { Gradient } from '../gradient/Gradient';\nimport { Group } from '../shapes/Group';\nimport { FabricImage } from '../shapes/Image';\nimport { classRegistry } from '../ClassRegistry';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../util/misc/matrix';\nimport { removeTransformMatrixForSvgParsing } from '../util/transform_matrix_removal';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { Point } from '../Point';\nimport { CENTER, FILL, STROKE } from '../constants';\nimport { getGradientDefs } from './getGradientDefs';\nimport { getCSSRules } from './getCSSRules';\nimport type { LoadImageOptions } from '../util';\nimport type { CSSRules, TSvgReviverCallback } from './typedefs';\nimport type { ParsedViewboxTransform } from './applyViewboxTransform';\nimport type { SVGOptions } from '../gradient';\nimport { getTagName } from './getTagName';\nimport { parseTransformAttribute } from './parseTransformAttribute';\n\nconst findTag = (el: Element) =>\n  classRegistry.getSVGClass(getTagName(el).toLowerCase());\n\ntype StorageType = {\n  fill: SVGGradientElement;\n  stroke: SVGGradientElement;\n  clipPath: Element[];\n};\n\ntype NotParsedFabricObject = FabricObject & {\n  fill: string;\n  stroke: string;\n  clipPath?: string;\n  clipRule?: CanvasFillRule;\n};\n\nexport class ElementsParser {\n  declare elements: Element[];\n  declare options: LoadImageOptions & ParsedViewboxTransform;\n  declare reviver?: TSvgReviverCallback;\n  declare regexUrl: RegExp;\n  declare doc: Document;\n  declare clipPaths: Record<string, Element[]>;\n  declare gradientDefs: Record<string, SVGGradientElement>;\n  declare cssRules: CSSRules;\n\n  constructor(\n    elements: Element[],\n    options: LoadImageOptions & ParsedViewboxTransform,\n    reviver: TSvgReviverCallback | undefined,\n    doc: Document,\n    clipPaths: Record<string, Element[]>,\n  ) {\n    this.elements = elements;\n    this.options = options;\n    this.reviver = reviver;\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n    this.doc = doc;\n    this.clipPaths = clipPaths;\n    this.gradientDefs = getGradientDefs(doc);\n    this.cssRules = getCSSRules(doc);\n  }\n\n  parse(): Promise<Array<FabricObject | null>> {\n    return Promise.all(\n      this.elements.map((element) => this.createObject(element)),\n    );\n  }\n\n  async createObject(el: Element): Promise<FabricObject | null> {\n    const klass = findTag(el);\n    if (klass) {\n      const obj: NotParsedFabricObject = await klass.fromElement(\n        el,\n        this.options,\n        this.cssRules,\n      );\n      this.resolveGradient(obj, el, FILL);\n      this.resolveGradient(obj, el, STROKE);\n      if (obj instanceof FabricImage && obj._originalElement) {\n        removeTransformMatrixForSvgParsing(\n          obj,\n          obj.parsePreserveAspectRatioAttribute(),\n        );\n      } else {\n        removeTransformMatrixForSvgParsing(obj);\n      }\n      await this.resolveClipPath(obj, el);\n      this.reviver && this.reviver(el, obj);\n      return obj;\n    }\n    return null;\n  }\n\n  extractPropertyDefinition(\n    obj: NotParsedFabricObject,\n    property: 'fill' | 'stroke' | 'clipPath',\n    storage: Record<string, StorageType[typeof property]>,\n  ): StorageType[typeof property] | undefined {\n    const value = obj[property]!,\n      regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return undefined;\n    }\n    // verify: can we remove the 'g' flag? and remove lastIndex changes?\n    regex.lastIndex = 0;\n    // we passed the regex test, so we know is not null;\n    const id = regex.exec(value)![1];\n    regex.lastIndex = 0;\n    // @todo fix this\n    return storage[id];\n  }\n\n  resolveGradient(\n    obj: NotParsedFabricObject,\n    el: Element,\n    property: 'fill' | 'stroke',\n  ) {\n    const gradientDef = this.extractPropertyDefinition(\n      obj,\n      property,\n      this.gradientDefs,\n    ) as SVGGradientElement;\n    if (gradientDef) {\n      const opacityAttr = el.getAttribute(property + '-opacity');\n      const gradient = Gradient.fromElement(gradientDef, obj, {\n        ...this.options,\n        opacity: opacityAttr,\n      } as SVGOptions);\n      obj.set(property, gradient);\n    }\n  }\n\n  // TODO: resolveClipPath could be run once per clippath with minor work per object.\n  // is a refactor that i m not sure is worth on this code\n  async resolveClipPath(\n    obj: NotParsedFabricObject,\n    usingElement: Element,\n    exactOwner?: Element,\n  ) {\n    const clipPathElements = this.extractPropertyDefinition(\n      obj,\n      'clipPath',\n      this.clipPaths,\n    ) as Element[];\n    if (clipPathElements) {\n      const objTransformInv = invertTransform(obj.calcTransformMatrix());\n      const clipPathTag = clipPathElements[0].parentElement!;\n      let clipPathOwner = usingElement;\n      while (\n        !exactOwner &&\n        clipPathOwner.parentElement &&\n        clipPathOwner.getAttribute('clip-path') !== obj.clipPath\n      ) {\n        clipPathOwner = clipPathOwner.parentElement;\n      }\n      // move the clipPath tag as sibling to the real element that is using it\n      clipPathOwner.parentElement!.appendChild(clipPathTag!);\n\n      // this multiplication order could be opposite.\n      // but i don't have an svg to test it\n      // at the first SVG that has a transform on both places and is misplaced\n      // try to invert this multiplication order\n      const finalTransform = parseTransformAttribute(\n        `${clipPathOwner.getAttribute('transform') || ''} ${\n          clipPathTag.getAttribute('originalTransform') || ''\n        }`,\n      );\n\n      clipPathTag.setAttribute(\n        'transform',\n        `matrix(${finalTransform.join(',')})`,\n      );\n\n      const container = await Promise.all(\n        clipPathElements.map((clipPathElement) => {\n          return findTag(clipPathElement)\n            .fromElement(clipPathElement, this.options, this.cssRules)\n            .then((enlivedClippath: NotParsedFabricObject) => {\n              removeTransformMatrixForSvgParsing(enlivedClippath);\n              enlivedClippath.fillRule = enlivedClippath.clipRule!;\n              delete enlivedClippath.clipRule;\n              return enlivedClippath;\n            });\n        }),\n      );\n      const clipPath =\n        container.length === 1 ? container[0] : new Group(container);\n      const gTransform = multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix(),\n      );\n      if (clipPath.clipPath) {\n        await this.resolveClipPath(\n          clipPath,\n          clipPathOwner,\n          // this is tricky.\n          // it tries to differentiate from when clipPaths are inherited by outside groups\n          // or when are really clipPaths referencing other clipPaths\n          clipPathTag.getAttribute('clip-path') ? clipPathOwner : undefined,\n        );\n      }\n      const { scaleX, scaleY, angle, skewX, translateX, translateY } =\n        qrDecompose(gTransform);\n      clipPath.set({\n        flipX: false,\n        flipY: false,\n      });\n      clipPath.set({\n        scaleX,\n        scaleY,\n        angle,\n        skewX,\n        skewY: 0,\n      });\n      clipPath.setPositionByOrigin(\n        new Point(translateX, translateY),\n        CENTER,\n        CENTER,\n      );\n      obj.clipPath = clipPath;\n    } else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n      return;\n    }\n  }\n}\n","import { applyViewboxTransform } from './applyViewboxTransform';\nimport { svgValidTagNamesRegEx } from './constants';\nimport { hasInvalidAncestor } from './hasInvalidAncestor';\nimport { parseUseDirectives } from './parseUseDirectives';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { ElementsParser } from './elements_parser';\nimport { log, SignalAbortedError } from '../util/internals/console';\nimport { getTagName } from './getTagName';\n\nconst isValidSvgTag = (el: Element) =>\n  svgValidTagNamesRegEx.test(getTagName(el));\n\nexport const createEmptyResponse = (): SVGParsingOutput => ({\n  objects: [],\n  elements: [],\n  options: {},\n  allElements: [],\n});\n\n/**\n * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n * @static\n * @function\n * @memberOf fabric\n * @param {HTMLElement} doc SVG document to parse\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @return {SVGParsingOutput}\n * {@link SVGParsingOutput} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n */\nexport async function parseSVGDocument(\n  doc: Document,\n  reviver?: TSvgReviverCallback,\n  { crossOrigin, signal }: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  if (signal && signal.aborted) {\n    log('log', new SignalAbortedError('parseSVGDocument'));\n    // this is an unhappy path, we dont care about speed\n    return createEmptyResponse();\n  }\n  const documentElement = doc.documentElement;\n  parseUseDirectives(doc);\n\n  const descendants = Array.from(documentElement.getElementsByTagName('*')),\n    options = {\n      ...applyViewboxTransform(documentElement),\n      crossOrigin,\n      signal,\n    };\n  const elements = descendants.filter((el) => {\n    applyViewboxTransform(el);\n    return isValidSvgTag(el) && !hasInvalidAncestor(el); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n  });\n  if (!elements || (elements && !elements.length)) {\n    return {\n      ...createEmptyResponse(),\n      options,\n      allElements: descendants,\n    };\n  }\n  const localClipPaths: Record<string, Element[]> = {};\n  descendants\n    .filter((el) => getTagName(el) === 'clipPath')\n    .forEach((el) => {\n      el.setAttribute('originalTransform', el.getAttribute('transform') || '');\n      const id = el.getAttribute('id')!;\n      localClipPaths[id] = Array.from(el.getElementsByTagName('*')).filter(\n        (el) => isValidSvgTag(el),\n      );\n    });\n\n  // Precedence of rules:   style > class > attribute\n  const elementParser = new ElementsParser(\n    elements,\n    options,\n    reviver,\n    doc,\n    localClipPaths,\n  );\n\n  const instances = await elementParser.parse();\n\n  return {\n    objects: instances,\n    elements,\n    options,\n    allElements: descendants,\n  };\n}\n","import { svgNS } from './constants';\nimport { getMultipleNodes } from './getMultipleNodes';\nimport { applyViewboxTransform } from './applyViewboxTransform';\nimport { parseStyleString } from './parseStyleString';\n\nexport function parseUseDirectives(doc: Document) {\n  const nodelist = getMultipleNodes(doc, ['use', 'svg:use']);\n  const skipAttributes = ['x', 'y', 'xlink:href', 'href', 'transform'];\n\n  for (const useElement of nodelist) {\n    const useAttributes: NamedNodeMap = useElement.attributes;\n\n    const useAttrMap: Record<string, string> = {};\n    for (const attr of useAttributes) {\n      attr.value && (useAttrMap[attr.name] = attr.value);\n    }\n\n    const xlink = (useAttrMap['xlink:href'] || useAttrMap.href || '').slice(1);\n\n    if (xlink === '') {\n      return;\n    }\n    const referencedElement = doc.getElementById(xlink);\n    if (referencedElement === null) {\n      // if we can't find the target of the xlink, consider this use tag bad, similar to no xlink\n      return;\n    }\n    let clonedOriginal = referencedElement.cloneNode(true) as Element;\n\n    const originalAttributes: NamedNodeMap = clonedOriginal.attributes;\n\n    const originalAttrMap: Record<string, string> = {};\n    for (const attr of originalAttributes) {\n      attr.value && (originalAttrMap[attr.name] = attr.value);\n    }\n\n    // Transform attribute needs to be merged in a particular way\n    const { x = 0, y = 0, transform = '' } = useAttrMap;\n    const currentTrans = `${transform} ${\n      originalAttrMap.transform || ''\n    } translate(${x}, ${y})`;\n\n    applyViewboxTransform(clonedOriginal);\n\n    if (/^svg$/i.test(clonedOriginal.nodeName)) {\n      // if is an SVG, create a group and apply all the attributes on top of it\n      const el3 = clonedOriginal.ownerDocument.createElementNS(svgNS, 'g');\n      Object.entries(originalAttrMap).forEach(([name, value]) =>\n        el3.setAttributeNS(svgNS, name, value),\n      );\n      el3.append(...clonedOriginal.childNodes);\n      clonedOriginal = el3;\n    }\n\n    for (const attr of useAttributes) {\n      if (!attr) {\n        continue;\n      }\n      const { name, value } = attr;\n      if (skipAttributes.includes(name)) {\n        continue;\n      }\n\n      if (name === 'style') {\n        // when use has a style, merge the two styles, with the ref being priority (not use)\n        // priority is by feature. an attribute for fill on the original element\n        // will overwrite the fill in style or attribute for tha use\n        const styleRecord: Record<string, any> = {};\n        parseStyleString(value!, styleRecord);\n        // cleanup styleRecord from attributes of original\n        Object.entries(originalAttrMap).forEach(([name, value]) => {\n          styleRecord[name] = value;\n        });\n        // now we can put in the style of the original that will overwrite the original attributes\n        parseStyleString(originalAttrMap.style || '', styleRecord);\n        const mergedStyles = Object.entries(styleRecord)\n          .map((entry) => entry.join(':'))\n          .join(';');\n        clonedOriginal.setAttribute(name, mergedStyles);\n      } else {\n        // set the attribute from use element only if the original does not have it already\n        !originalAttrMap[name] && clonedOriginal.setAttribute(name, value!);\n      }\n    }\n\n    clonedOriginal.setAttribute('transform', currentTrans);\n    clonedOriginal.setAttribute('instantiated_by_use', '1');\n    clonedOriginal.removeAttribute('id');\n    useElement.parentNode!.replaceChild(clonedOriginal, useElement);\n  }\n}\n","import { request } from '../util/internals/dom_request';\nimport { parseSVGDocument, createEmptyResponse } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\n\n/**\n * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n * @memberOf fabric\n * @param {string} url where the SVG is\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromURL(\n  url: string,\n  reviver?: TSvgReviverCallback,\n  options: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  // need to handle error properly\n  return new Promise<Document>((resolve, reject) => {\n    const onComplete = (r: XMLHttpRequest) => {\n      const xml = r.responseXML;\n      if (xml) {\n        resolve(xml);\n      }\n      reject();\n    };\n\n    request(url.replace(/^\\n\\s*/, '').trim(), {\n      onComplete,\n      signal: options.signal,\n    });\n  })\n    .then((parsedDoc) => parseSVGDocument(parsedDoc, reviver, options))\n    .catch(() => {\n      // this is an unhappy path, we dont care about speed\n      return createEmptyResponse();\n    });\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Polyline } from '../shapes/Polyline';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { MODIFY_POLY } from '../constants';\n\nconst ACTION_NAME: TModificationEvents = MODIFY_POLY;\n\ntype TTransformAnchor = Transform & { pointIndex: number };\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nexport const createPolyPositionHandler = (pointIndex: number) => {\n  return function (dim: Point, finalMatrix: TMat2D, polyObject: Polyline) {\n    const { points, pathOffset } = polyObject;\n    return new Point(points[pointIndex])\n      .subtract(pathOffset)\n      .transform(\n        multiplyTransformMatrices(\n          polyObject.getViewportTransform(),\n          polyObject.calcTransformMatrix(),\n        ),\n      );\n  };\n};\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nexport const polyActionHandler = (\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) => {\n  const { target, pointIndex } = transform;\n  const poly = target as Polyline;\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    poly.calcOwnMatrix(),\n  );\n\n  poly.points[pointIndex] = mouseLocalPosition.add(poly.pathOffset);\n  poly.setDimensions();\n  poly.set('dirty', true);\n  return true;\n};\n\n/**\n * Keep the polygon in the same position when we change its `width`/`height`/`top`/`left`.\n */\nexport const factoryPolyActionHandler = (\n  pointIndex: number,\n  fn: TransformActionHandler<TTransformAnchor>,\n) => {\n  return function (\n    eventData: TPointerEvent,\n    transform: Transform,\n    x: number,\n    y: number,\n  ) {\n    const poly = transform.target as Polyline,\n      anchorPoint = new Point(\n        poly.points[(pointIndex > 0 ? pointIndex : poly.points.length) - 1],\n      ),\n      anchorPointInParentPlane = anchorPoint\n        .subtract(poly.pathOffset)\n        .transform(poly.calcOwnMatrix()),\n      actionPerformed = fn(eventData, { ...transform, pointIndex }, x, y);\n\n    const newAnchorPointInParentPlane = anchorPoint\n      .subtract(poly.pathOffset)\n      .transform(poly.calcOwnMatrix());\n\n    const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n    poly.left -= diff.x;\n    poly.top -= diff.y;\n\n    return actionPerformed;\n  };\n};\n\nexport const createPolyActionHandler = (pointIndex: number) =>\n  wrapWithFireEvent(\n    ACTION_NAME,\n    factoryPolyActionHandler(pointIndex, polyActionHandler),\n  );\n\nexport function createPolyControls(\n  poly: Polyline,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  numOfControls: number,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  arg0: number | Polyline,\n  options: Partial<Control> = {},\n) {\n  const controls = {} as Record<string, Control>;\n  for (\n    let idx = 0;\n    idx < (typeof arg0 === 'number' ? arg0 : arg0.points.length);\n    idx++\n  ) {\n    controls[`p${idx}`] = new Control({\n      actionName: ACTION_NAME,\n      positionHandler: createPolyPositionHandler(idx),\n      actionHandler: createPolyActionHandler(idx),\n      ...options,\n    });\n  }\n  return controls;\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Path } from '../shapes/Path';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport type { TSimpleParseCommandType } from '../util/path/typedefs';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\nconst ACTION_NAME: TModificationEvents = 'modifyPath' as const;\n\ntype TTransformAnchor = Transform;\n\nexport type PathPointControlStyle = {\n  controlFill?: string;\n  controlStroke?: string;\n  connectionDashArray?: number[];\n};\n\nconst calcPathPointPosition = (\n  pathObject: Path,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n  const command = path[commandIndex];\n  return new Point(\n    (command[pointIndex] as number) - pathOffset.x,\n    (command[pointIndex + 1] as number) - pathOffset.y,\n  ).transform(\n    multiplyTransformMatrices(\n      pathObject.getViewportTransform(),\n      pathObject.calcTransformMatrix(),\n    ),\n  );\n};\n\nconst movePathPoint = (\n  pathObject: Path,\n  x: number,\n  y: number,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n\n  const anchorCommand =\n    path[(commandIndex > 0 ? commandIndex : path.length) - 1];\n  const anchorPoint = new Point(\n    anchorCommand[pointIndex] as number,\n    anchorCommand[pointIndex + 1] as number,\n  );\n\n  const anchorPointInParentPlane = anchorPoint\n    .subtract(pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    pathObject.calcOwnMatrix(),\n  );\n\n  path[commandIndex][pointIndex] = mouseLocalPosition.x + pathOffset.x;\n  path[commandIndex][pointIndex + 1] = mouseLocalPosition.y + pathOffset.y;\n  pathObject.setDimensions();\n\n  const newAnchorPointInParentPlane = anchorPoint\n    .subtract(pathObject.pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n  pathObject.left -= diff.x;\n  pathObject.top -= diff.y;\n  pathObject.set('dirty', true);\n  return true;\n};\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nfunction pathPositionHandler(\n  this: PathPointControl,\n  dim: Point,\n  finalMatrix: TMat2D,\n  pathObject: Path,\n) {\n  const { commandIndex, pointIndex } = this;\n  return calcPathPointPosition(pathObject, commandIndex, pointIndex);\n}\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nfunction pathActionHandler(\n  this: PathPointControl,\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) {\n  const { target } = transform;\n  const { commandIndex, pointIndex } = this;\n  const actionPerformed = movePathPoint(\n    target as Path,\n    x,\n    y,\n    commandIndex,\n    pointIndex,\n  );\n  if (actionPerformed) {\n    fireEvent(this.actionName as TModificationEvents, {\n      ...commonEventInfo(eventData, transform, x, y),\n      commandIndex,\n      pointIndex,\n    });\n  }\n  return actionPerformed;\n}\n\nconst indexFromPrevCommand = (previousCommandType: TSimpleParseCommandType) =>\n  previousCommandType === 'C' ? 5 : previousCommandType === 'Q' ? 3 : 1;\n\nclass PathPointControl extends Control {\n  declare commandIndex: number;\n  declare pointIndex: number;\n  declare controlFill: string;\n  declare controlStroke: string;\n  constructor(options?: Partial<PathPointControl>) {\n    super(options);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const overrides: ControlRenderingStyleOverride = {\n      ...styleOverride,\n      cornerColor: this.controlFill,\n      cornerStrokeColor: this.controlStroke,\n      transparentCorners: !this.controlFill,\n    };\n    super.render(ctx, left, top, overrides, fabricObject);\n  }\n}\n\nclass PathControlPointControl extends PathPointControl {\n  declare connectionDashArray?: number[];\n  declare connectToCommandIndex: number;\n  declare connectToPointIndex: number;\n  constructor(options?: Partial<PathControlPointControl>) {\n    super(options);\n  }\n\n  render(\n    this: PathControlPointControl,\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const { path } = fabricObject;\n    const {\n      commandIndex,\n      pointIndex,\n      connectToCommandIndex,\n      connectToPointIndex,\n    } = this;\n    ctx.save();\n    ctx.strokeStyle = this.controlStroke;\n    if (this.connectionDashArray) {\n      ctx.setLineDash(this.connectionDashArray);\n    }\n    const [commandType] = path[commandIndex];\n    const point = calcPathPointPosition(\n      fabricObject,\n      connectToCommandIndex,\n      connectToPointIndex,\n    );\n\n    if (commandType === 'Q') {\n      // one control point connects to 2 points\n      const point2 = calcPathPointPosition(\n        fabricObject,\n        commandIndex,\n        pointIndex + 2,\n      );\n      ctx.moveTo(point2.x, point2.y);\n      ctx.lineTo(left, top);\n    } else {\n      ctx.moveTo(left, top);\n    }\n    ctx.lineTo(point.x, point.y);\n    ctx.stroke();\n    ctx.restore();\n\n    super.render(ctx, left, top, styleOverride, fabricObject);\n  }\n}\n\nconst createControl = (\n  commandIndexPos: number,\n  pointIndexPos: number,\n  isControlPoint: boolean,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  },\n  connectToCommandIndex?: number,\n  connectToPointIndex?: number,\n) =>\n  new (isControlPoint ? PathControlPointControl : PathPointControl)({\n    commandIndex: commandIndexPos,\n    pointIndex: pointIndexPos,\n    actionName: ACTION_NAME,\n    positionHandler: pathPositionHandler,\n    actionHandler: pathActionHandler,\n    connectToCommandIndex,\n    connectToPointIndex,\n    ...options,\n    ...(isControlPoint ? options.controlPointStyle : options.pointStyle),\n  } as Partial<PathControlPointControl>);\n\nexport function createPathControls(\n  path: Path,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  } = {},\n): Record<string, Control> {\n  const controls = {} as Record<string, Control>;\n  let previousCommandType: TSimpleParseCommandType = 'M';\n  path.path.forEach((command, commandIndex) => {\n    const commandType = command[0];\n\n    if (commandType !== 'Z') {\n      controls[`c_${commandIndex}_${commandType}`] = createControl(\n        commandIndex,\n        command.length - 2,\n        false,\n        options,\n      );\n    }\n    switch (commandType) {\n      case 'C':\n        controls[`c_${commandIndex}_C_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex - 1,\n          indexFromPrevCommand(previousCommandType),\n        );\n        controls[`c_${commandIndex}_C_CP_2`] = createControl(\n          commandIndex,\n          3,\n          true,\n          options,\n          commandIndex,\n          5,\n        );\n        break;\n      case 'Q':\n        controls[`c_${commandIndex}_Q_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex,\n          3,\n        );\n        break;\n    }\n    previousCommandType = commandType;\n  });\n  return controls;\n}\n","import { getFabricWindow } from '../env';\nimport { createCanvasElement, createCanvasElementFor } from '../util/misc/dom';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\n\nexport const isWebGLPipelineState = (\n  options: TWebGLPipelineState | T2DPipelineState,\n): options is TWebGLPipelineState => {\n  return (options as TWebGLPipelineState).webgl !== undefined;\n};\n\n/**\n * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n * drawImage should be faster, but is also bugged for a small combination of old hardware\n * and drivers.\n * putImageData is faster than drawImage for that specific operation.\n */\nexport const isPutImageFaster = (width: number, height: number): boolean => {\n  const targetCanvas = createCanvasElementFor({ width, height });\n  const sourceCanvas = createCanvasElement();\n  const gl = sourceCanvas.getContext('webgl')!;\n  // eslint-disable-next-line no-undef\n  const imageBuffer = new ArrayBuffer(width * height * 4);\n\n  const testContext = {\n    imageBuffer: imageBuffer,\n  } as unknown as Required<WebGLFilterBackend>;\n  const testPipelineState = {\n    destinationWidth: width,\n    destinationHeight: height,\n    targetCanvas: targetCanvas,\n  } as unknown as TWebGLPipelineState;\n  let startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2D.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const drawImageTime = getFabricWindow().performance.now() - startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2DPutImageData.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const putImageDataTime = getFabricWindow().performance.now() - startTime;\n\n  return drawImageTime > putImageDataTime;\n};\n","export const highPsourceCode = `precision highp float`;\n\nexport const identityFragmentShader = `\n    ${highPsourceCode};\n    varying vec2 vTexCoord;\n    uniform sampler2D uTexture;\n    void main() {\n      gl_FragColor = texture2D(uTexture, vTexCoord);\n    }`;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    void main() {\n      vTexCoord = aPosition;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }`;\n","import { getEnv } from '../env';\nimport type {\n  T2DPipelineState,\n  TWebGLAttributeLocationMap,\n  TWebGLPipelineState,\n  TWebGLProgramCacheItem,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport {\n  highPsourceCode,\n  identityFragmentShader,\n  vertexSource,\n} from './shaders/baseFilter';\nimport type { Abortable } from '../typedefs';\nimport { FabricError } from '../util/internals/console';\nimport { createCanvasElementFor } from '../util/misc/dom';\n\nconst regex = new RegExp(highPsourceCode, 'g');\n\nexport class BaseFilter<\n  Name extends string,\n  OwnProps extends Record<string, any> = object,\n  SerializedProps extends Record<string, any> = OwnProps,\n> {\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  get type(): Name {\n    return (this.constructor as typeof BaseFilter).type as Name;\n  }\n\n  /**\n   * The class type. Used to identify which class this is.\n   * This is used for serialization purposes and internally it can be used\n   * to identify classes. As a developer you could use `instance of Class`\n   * but to avoid importing all the code and blocking tree shaking we try\n   * to avoid doing that.\n   */\n  static type = 'BaseFilter';\n\n  /**\n   * Contains the uniform locations for the fragment shader.\n   * uStepW and uStepH are handled by the BaseFilter, each filter class\n   * needs to specify all the one that are needed\n   */\n  static uniformLocations: string[] = [];\n\n  declare static defaults: Record<string, unknown>;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor({\n    type,\n    ...options\n  }: { type?: never } & Partial<OwnProps> & Record<string, any> = {}) {\n    Object.assign(\n      this,\n      (this.constructor as typeof BaseFilter).defaults,\n      options,\n    );\n  }\n\n  protected getFragmentSource(): string {\n    return identityFragmentShader;\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram(\n    gl: WebGLRenderingContext,\n    fragmentSource: string = this.getFragmentSource(),\n    vertexSource: string = this.getVertexSource(),\n  ) {\n    const {\n      WebGLProbe: { GLPrecision = 'highp' },\n    } = getEnv();\n    if (GLPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(\n        regex,\n        highPsourceCode.replace('highp', GLPrecision),\n      );\n    }\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n\n    if (!vertexShader || !fragmentShader || !program) {\n      throw new FabricError(\n        'Vertex, fragment shader or program creation error',\n      );\n    }\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Vertex shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          vertexShader,\n        )}`,\n      );\n    }\n\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Fragment shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          fragmentShader,\n        )}`,\n      );\n    }\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new FabricError(\n        `Shader link error for \"${this.type}\" ${gl.getProgramInfoLog(program)}`,\n      );\n    }\n\n    const uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n\n    return {\n      program,\n      attributeLocations: this.getAttributeLocations(gl, program),\n      uniformLocations,\n    };\n  }\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLAttributeLocationMap {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  }\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLUniformLocationMap {\n    const locations = (this.constructor as unknown as typeof BaseFilter<string>)\n      .uniformLocations;\n\n    const uniformLocations: Record<string, WebGLUniformLocation | null> = {};\n    for (let i = 0; i < locations.length; i++) {\n      uniformLocations[locations[i]] = gl.getUniformLocation(\n        program,\n        locations[i],\n      );\n    }\n    return uniformLocations;\n  }\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData(\n    gl: WebGLRenderingContext,\n    attributeLocations: Record<string, number>,\n    aPositionData: Float32Array,\n  ) {\n    const attributeLocation = attributeLocations.aPosition;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  }\n\n  _setupFrameBuffer(options: TWebGLPipelineState) {\n    const gl = options.context;\n    if (options.passes > 1) {\n      const width = options.destinationWidth;\n      const height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(\n          gl,\n          width,\n          height,\n        );\n      }\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        options.targetTexture,\n        0,\n      );\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  }\n\n  _swapTextures(options: TWebGLPipelineState) {\n    options.passes--;\n    options.pass++;\n    const temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  }\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isNeutralState(options?: any): boolean {\n    return false;\n  }\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(_options: T2DPipelineState): void {\n    // override by subclass\n  }\n\n  /**\n   * Returns a string that represent the current selected shader code for the filter.\n   * Used to force recompilation when parameters change or to retrieve the shader from cache\n   * @type string\n   **/\n  getCacheKey(): string {\n    return this.type;\n  }\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   * @return {WebGLProgram} the compiled program shader\n   */\n  retrieveShader(options: TWebGLPipelineState): TWebGLProgramCacheItem {\n    const key = this.getCacheKey();\n    if (!options.programCache[key]) {\n      options.programCache[key] = this.createProgram(options.context);\n    }\n    return options.programCache[key];\n  }\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context;\n    const shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  bindAdditionalTexture(\n    gl: WebGLRenderingContext,\n    texture: WebGLTexture,\n    textureUnit: number,\n  ) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  unbindAdditionalTexture(gl: WebGLRenderingContext, textureUnit: number) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} _gl The canvas context used to compile the shader program.\n   * @param {Object} _uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData(\n    _gl: WebGLRenderingContext,\n    _uniformLocations: TWebGLUniformLocationMap,\n  ): void {\n    // override by subclass\n  }\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer(options: T2DPipelineState) {\n    if (!options.helpLayer) {\n      const { sourceWidth, sourceHeight } = options;\n      const helpLayer = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      options.helpLayer = helpLayer;\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * It will automatically export the default values of a filter,\n   * stored in the static defaults property.\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): { type: Name } & SerializedProps {\n    const defaultKeys = Object.keys(\n      (this.constructor as typeof BaseFilter).defaults || {},\n    ) as (keyof SerializedProps)[];\n\n    return {\n      type: this.type,\n      ...defaultKeys.reduce<SerializedProps>((acc, key) => {\n        acc[key] = this[\n          key as keyof this\n        ] as unknown as (typeof acc)[typeof key];\n        return acc;\n      }, {} as SerializedProps),\n    };\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  static async fromObject(\n    { type, ...filterOptions }: Record<string, any>,\n    _options: Abortable,\n  ): Promise<BaseFilter<string, object>> {\n    return new this(filterOptions);\n  }\n}\n","export const blendColorFragmentSource = {\n  multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n  screen:\n    'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n  add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n  difference: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n  subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n  lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n  darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n  exclusion:\n    'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n  overlay: `\n    if (uColor.r < 0.5) {\n      gl_FragColor.r *= 2.0 * uColor.r;\n    } else {\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n    }\n    if (uColor.g < 0.5) {\n      gl_FragColor.g *= 2.0 * uColor.g;\n    } else {\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n    }\n    if (uColor.b < 0.5) {\n      gl_FragColor.b *= 2.0 * uColor.b;\n    } else {\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n    }\n    `,\n  tint: `\n    gl_FragColor.rgb *= (1.0 - uColor.a);\n    gl_FragColor.rgb += uColor.rgb;\n    `,\n} as const;\n","import { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { blendColorFragmentSource } from './shaders/blendColor';\n\nexport type TBlendMode =\n  | 'multiply'\n  | 'add'\n  | 'difference'\n  | 'screen'\n  | 'subtract'\n  | 'darken'\n  | 'lighten'\n  | 'overlay'\n  | 'exclusion'\n  | 'tint';\n\ntype BlendColorOwnProps = {\n  color: string;\n  mode: TBlendMode;\n  alpha: number;\n};\n\nexport const blendColorDefaultValues: BlendColorOwnProps = {\n  color: '#F95C63',\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Color Blend filter class\n * @example\n * const filter = new BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendColor extends BaseFilter<'BlendColor', BlendColorOwnProps> {\n  /**\n   * Color to make the blend operation with. default to a reddish color since black or white\n   * gives always strong result.\n   * @type String\n   * @default\n   **/\n  declare color: BlendColorOwnProps['color'];\n\n  /**\n   * Blend mode for the filter: one of multiply, add, difference, screen, subtract,\n   * darken, lighten, overlay, exclusion, tint.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendColorOwnProps['mode'];\n  /**\n   * alpha value. represent the strength of the blend color operation.\n   * @type Number\n   * @default\n   **/\n  declare alpha: BlendColorOwnProps['alpha'];\n\n  static defaults = blendColorDefaultValues;\n\n  static type = 'BlendColor';\n\n  static uniformLocations = ['uColor'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  protected getFragmentSource(): string {\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec4 uColor;\n      varying vec2 vTexCoord;\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        gl_FragColor = color;\n        if (color.a > 0.0) {\n          ${blendColorFragmentSource[this.mode]}\n        }\n      }\n      `;\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const source = new Color(this.color).getSource();\n    const alpha = this.alpha;\n    const tr = source[0] * alpha;\n    const tg = source[1] * alpha;\n    const tb = source[2] * alpha;\n    const alpha1 = 1 - alpha;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      let oR, oG, oB;\n      switch (this.mode) {\n        case 'multiply':\n          oR = (r * tr) / 255;\n          oG = (g * tg) / 255;\n          oB = (b * tb) / 255;\n          break;\n        case 'screen':\n          oR = 255 - ((255 - r) * (255 - tr)) / 255;\n          oG = 255 - ((255 - g) * (255 - tg)) / 255;\n          oB = 255 - ((255 - b) * (255 - tb)) / 255;\n          break;\n        case 'add':\n          oR = r + tr;\n          oG = g + tg;\n          oB = b + tb;\n          break;\n        case 'difference':\n          oR = Math.abs(r - tr);\n          oG = Math.abs(g - tg);\n          oB = Math.abs(b - tb);\n          break;\n        case 'subtract':\n          oR = r - tr;\n          oG = g - tg;\n          oB = b - tb;\n          break;\n        case 'darken':\n          oR = Math.min(r, tr);\n          oG = Math.min(g, tg);\n          oB = Math.min(b, tb);\n          break;\n        case 'lighten':\n          oR = Math.max(r, tr);\n          oG = Math.max(g, tg);\n          oB = Math.max(b, tb);\n          break;\n        case 'overlay':\n          oR =\n            tr < 128\n              ? (2 * r * tr) / 255\n              : 255 - (2 * (255 - r) * (255 - tr)) / 255;\n          oG =\n            tg < 128\n              ? (2 * g * tg) / 255\n              : 255 - (2 * (255 - g) * (255 - tg)) / 255;\n          oB =\n            tb < 128\n              ? (2 * b * tb) / 255\n              : 255 - (2 * (255 - b) * (255 - tb)) / 255;\n          break;\n        case 'exclusion':\n          oR = tr + r - (2 * tr * r) / 255;\n          oG = tg + g - (2 * tg * g) / 255;\n          oB = tb + b - (2 * tb * b) / 255;\n          break;\n        case 'tint':\n          oR = tr + r * alpha1;\n          oG = tg + g * alpha1;\n          oB = tb + b * alpha1;\n      }\n      data[i] = oR;\n      data[i + 1] = oG;\n      data[i + 2] = oB;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource();\n    source[0] = (this.alpha * source[0]) / 255;\n    source[1] = (this.alpha * source[1]) / 255;\n    source[2] = (this.alpha * source[2]) / 255;\n    source[3] = this.alpha;\n    gl.uniform4fv(uniformLocations.uColor, source);\n  }\n}\n\nclassRegistry.setClass(BlendColor);\n","import type { TBlendImageMode } from '../BlendImage';\n\nexport const fragmentSource: Record<TBlendImageMode, string> = {\n  multiply: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.rgba *= color2.rgba;\n      gl_FragColor = color;\n    }\n    `,\n  mask: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.a = color2.a;\n      gl_FragColor = color;\n    }\n    `,\n} as const;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    uniform mat3 uTransformMatrix;\n    void main() {\n      vTexCoord = aPosition;\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ` as const;\n","import { FabricImage } from '../shapes/Image';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport type { WebGLFilterBackend } from './WebGLFilterBackend';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource, vertexSource } from './shaders/blendImage';\n\nexport type TBlendImageMode = 'multiply' | 'mask';\n\ntype BlendImageOwnProps = {\n  mode: TBlendImageMode;\n  alpha: number;\n};\n\nexport const blendImageDefaultValues: BlendImageOwnProps = {\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Image Blend filter class\n * @example\n * const filter = new filters.BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendImage extends BaseFilter<'BlendImage', BlendImageOwnProps> {\n  /**\n   * Image to make the blend operation with.\n   **/\n  declare image: FabricImage;\n\n  /**\n   * Blend mode for the filter: either 'multiply' or 'mask'. 'multiply' will\n   * multiply the values of each channel (R, G, B, and A) of the filter image by\n   * their corresponding values in the base image. 'mask' will only look at the\n   * alpha channel of the filter image, and apply those values to the base\n   * image's alpha channel.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendImageOwnProps['mode'];\n\n  /**\n   * alpha value. represent the strength of the blend image operation.\n   * not implemented.\n   **/\n  declare alpha: BlendImageOwnProps['alpha'];\n\n  static type = 'BlendImage';\n\n  static defaults = blendImageDefaultValues;\n\n  static uniformLocations = ['uTransformMatrix', 'uImage'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource(): string {\n    return fragmentSource[this.mode];\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context,\n      texture = this.createTexture(options.filterBackend, this.image);\n    this.bindAdditionalTexture(gl, texture!, gl.TEXTURE1);\n    super.applyToWebGL(options);\n    this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n  }\n\n  createTexture(backend: WebGLFilterBackend, image: FabricImage) {\n    return backend.getCachedTexture(image.cacheKey, image.getElement());\n  }\n\n  /**\n   * Calculate a transformMatrix to adapt the image to blend over\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  calculateMatrix() {\n    const image = this.image,\n      { width, height } = image.getElement();\n    return [\n      1 / image.scaleX,\n      0,\n      0,\n      0,\n      1 / image.scaleY,\n      0,\n      -image.left / width,\n      -image.top / height,\n      1,\n    ];\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({\n    imageData: { data, width, height },\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const image = this.image;\n    if (!resources.blendImage) {\n      resources.blendImage = createCanvasElement();\n    }\n    const canvas1 = resources.blendImage;\n    const context = canvas1.getContext('2d')!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas1.width = width;\n      canvas1.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n    context.setTransform(\n      image.scaleX,\n      0,\n      0,\n      image.scaleY,\n      image.left,\n      image.top,\n    );\n    context.drawImage(image.getElement(), 0, 0, width, height);\n    const blendData = context.getImageData(0, 0, width, height).data;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const a = data[i + 3];\n\n      const tr = blendData[i];\n      const tg = blendData[i + 1];\n      const tb = blendData[i + 2];\n      const ta = blendData[i + 3];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          data[i + 3] = (a * ta) / 255;\n          break;\n        case 'mask':\n          data[i + 3] = ta;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const matrix = this.calculateMatrix();\n    gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n    gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * TODO: Handle the possibility of missing image better.\n   * As of now a BlendImage filter without image can't be used with fromObject\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): {\n    type: 'BlendImage';\n    image: ReturnType<FabricImage['toObject']>;\n  } & BlendImageOwnProps {\n    return {\n      ...super.toObject(),\n      image: this.image && this.image.toObject(),\n    };\n  }\n\n  /**\n   * Create filter instance from an object representation\n   * @static\n   * @param {object} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting image loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<BlendImage>}\n   */\n  static async fromObject(\n    { type, image, ...filterOptions }: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<BaseFilter<'BlendImage', BlendImageOwnProps>> {\n    return FabricImage.fromObject(image, options).then(\n      (enlivedImage) =>\n        new this({ ...filterOptions, image: enlivedImage }) as BlendImage,\n    );\n  }\n}\n\nclassRegistry.setClass(BlendImage);\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  TWebGLPipelineState,\n  T2DPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/blur';\n\ntype BlurOwnProps = {\n  blur: number;\n};\n\nexport const blurDefaultValues: BlurOwnProps = {\n  blur: 0,\n};\n\n/**\n * Blur filter class\n * @example\n * const filter = new Blur({\n *   blur: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Blur extends BaseFilter<'Blur', BlurOwnProps> {\n  /**\n   * blur value, in percentage of image dimensions.\n   * specific to keep the image blur constant at different resolutions\n   * range between 0 and 1.\n   * @type Number\n   * @default\n   */\n  declare blur: BlurOwnProps['blur'];\n\n  declare horizontal: boolean;\n  declare aspectRatio: number;\n\n  static type = 'Blur';\n\n  static defaults = blurDefaultValues;\n\n  static uniformLocations = ['uDelta'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      // this aspectRatio is used to give the same blur to vertical and horizontal\n      this.aspectRatio = options.sourceWidth / options.sourceHeight;\n      options.passes++;\n      this._setupFrameBuffer(options);\n      this.horizontal = true;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n      this._setupFrameBuffer(options);\n      this.horizontal = false;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\n    // this code mimic the shader for output consistency\n    // it samples 31 pixels across the image over a distance that depends from the blur value.\n    this.aspectRatio = width / height;\n    this.horizontal = true;\n    let blurValue = this.getBlurValue() * width;\n    const imageData = new Uint8ClampedArray(data);\n    const samples = 15;\n    const bytesInRow = 4 * width;\n    for (let i = 0; i < data.length; i += 4) {\n      let r = 0.0,\n        g = 0.0,\n        b = 0.0,\n        a = 0.0,\n        totalA = 0;\n      const minIRow = i - (i % bytesInRow);\n      const maxIRow = minIRow + bytesInRow;\n      // for now let's keep noise out of the way\n      // let pixelOffset = 0;\n      // const offset = Math.random() * 3;\n      // if (offset > 2) {\n      //   pixelOffset = 4;\n      // } else if (offset < 1) {\n      //   pixelOffset = -4;\n      // }\n      for (let j = -samples + 1; j < samples; j++) {\n        const percent = j / samples;\n        const distance = Math.floor(blurValue * percent) * 4;\n        const weight = 1 - Math.abs(percent);\n        let sampledPixel = i + distance; // + pixelOffset;\n        // try to implement edge mirroring\n        if (sampledPixel < minIRow) {\n          sampledPixel = minIRow;\n        } else if (sampledPixel > maxIRow) {\n          sampledPixel = maxIRow;\n        }\n        const localAlpha = data[sampledPixel + 3] * weight;\n        r += data[sampledPixel] * localAlpha;\n        g += data[sampledPixel + 1] * localAlpha;\n        b += data[sampledPixel + 2] * localAlpha;\n        a += localAlpha;\n        totalA += weight;\n      }\n      imageData[i] = r / a;\n      imageData[i + 1] = g / a;\n      imageData[i + 2] = b / a;\n      imageData[i + 3] = a / totalA;\n    }\n    this.horizontal = false;\n    blurValue = this.getBlurValue() * height;\n    for (let i = 0; i < imageData.length; i += 4) {\n      let r = 0.0,\n        g = 0.0,\n        b = 0.0,\n        a = 0.0,\n        totalA = 0;\n      const minIRow = i % bytesInRow;\n      const maxIRow = imageData.length - bytesInRow + minIRow;\n      // for now let's keep noise out of the way\n      // let pixelOffset = 0;\n      // const offset = Math.random() * 3;\n      // if (offset > 2) {\n      //   pixelOffset = bytesInRow;\n      // } else if (offset < 1) {\n      //   pixelOffset = -bytesInRow;\n      // }\n      for (let j = -samples + 1; j < samples; j++) {\n        const percent = j / samples;\n        const distance = Math.floor(blurValue * percent) * bytesInRow;\n        const weight = 1 - Math.abs(percent);\n        let sampledPixel = i + distance; // + pixelOffset;\n        // try to implement edge mirroring\n        if (sampledPixel < minIRow) {\n          sampledPixel = minIRow;\n        } else if (sampledPixel > maxIRow) {\n          sampledPixel = maxIRow;\n        }\n        const localAlpha = imageData[sampledPixel + 3] * weight;\n        r += imageData[sampledPixel] * localAlpha;\n        g += imageData[sampledPixel + 1] * localAlpha;\n        b += imageData[sampledPixel + 2] * localAlpha;\n        a += localAlpha;\n        totalA += weight;\n      }\n      data[i] = r / a;\n      data[i + 1] = g / a;\n      data[i + 2] = b / a;\n      data[i + 3] = a / totalA;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const delta = this.chooseRightDelta();\n    gl.uniform2fv(uniformLocations.uDelta, delta);\n  }\n\n  isNeutralState() {\n    return this.blur === 0;\n  }\n\n  getBlurValue(): number {\n    let blurScale = 1;\n    const { horizontal, aspectRatio } = this;\n    if (horizontal) {\n      if (aspectRatio > 1) {\n        // image is wide, i want to shrink radius horizontal\n        blurScale = 1 / aspectRatio;\n      }\n    } else {\n      if (aspectRatio < 1) {\n        // image is tall, i want to shrink radius vertical\n        blurScale = aspectRatio;\n      }\n    }\n    return blurScale * this.blur * 0.12;\n  }\n\n  /**\n   * choose right value of image percentage to blur with\n   * @returns {Array} a numeric array with delta values\n   */\n  chooseRightDelta() {\n    const blur = this.getBlurValue();\n    return this.horizontal ? [blur, 0] : [0, blur];\n  }\n}\n\nclassRegistry.setClass(Blur);\n","export const fragmentSource = `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform vec2 uDelta;\n    varying vec2 vTexCoord;\n    const float nSamples = 15.0;\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\n    float random(vec3 scale) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n    }\n    void main() {\n      vec4 color = vec4(0.0);\n      float totalC = 0.0;\n      float totalA = 0.0;\n      float offset = random(v3offset);\n      for (float t = -nSamples; t <= nSamples; t++) {\n        float percent = (t + offset - 0.5) / nSamples;\n        vec4 sample = texture2D(uTexture, vTexCoord + uDelta * percent);\n        float weight = 1.0 - abs(percent);\n        float alpha = weight * sample.a;\n        color.rgb += sample.rgb * alpha;\n        color.a += alpha;\n        totalA += weight;\n        totalC += alpha;\n      }\n      gl_FragColor.rgb = color.rgb / totalC;\n      gl_FragColor.a = color.a / totalA;\n    }\n  ` as const;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/brightness';\n\ntype BrightnessOwnProps = {\n  brightness: number;\n};\n\nexport const brightnessDefaultValues: BrightnessOwnProps = {\n  brightness: 0,\n};\n\n/**\n * Brightness filter class\n * @example\n * const filter = new Brightness({\n *   brightness: 0.05\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Brightness extends BaseFilter<'Brightness', BrightnessOwnProps> {\n  /**\n   * Brightness value, from -1 to 1.\n   * translated to -255 to 255 for 2d\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Number} brightness\n   * @default\n   */\n  declare brightness: BrightnessOwnProps['brightness'];\n\n  static type = 'Brightness';\n\n  static defaults = brightnessDefaultValues;\n\n  static uniformLocations = ['uBrightness'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const brightness = Math.round(this.brightness * 255);\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] += brightness;\n      data[i + 1] += brightness;\n      data[i + 2] += brightness;\n    }\n  }\n\n  isNeutralState() {\n    return this.brightness === 0;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n  }\n}\n\nclassRegistry.setClass(Brightness);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBrightness;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += uBrightness;\n    gl_FragColor = color;\n  }\n`;\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  varying vec2 vTexCoord;\n  uniform mat4 uColorMatrix;\n  uniform vec4 uConstants;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color *= uColorMatrix;\n    color += uConstants;\n    gl_FragColor = color;\n  }`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TMatColorMatrix,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/colorMatrix';\n\nexport type ColorMatrixOwnProps = {\n  matrix: TMatColorMatrix;\n  colorsOnly: boolean;\n};\n\nexport const colorMatrixDefaultValues: ColorMatrixOwnProps = {\n  matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n  colorsOnly: true,\n};\n\n/**\n   * Color Matrix filter class\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\n   * @example <caption>Kodachrome filter</caption>\n   * const filter = new ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\nexport class ColorMatrix<\n  Name extends string = 'ColorMatrix',\n  OwnProps extends object = ColorMatrixOwnProps,\n  SerializedProps extends object = ColorMatrixOwnProps,\n> extends BaseFilter<Name, OwnProps, SerializedProps> {\n  /**\n   * Colormatrix for pixels.\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n   * outside the -1, 1 range.\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Array} matrix array of 20 numbers.\n   * @default\n   */\n  declare matrix: ColorMatrixOwnProps['matrix'];\n\n  /**\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n   * to save some calculation\n   * @type Boolean\n   * @default true\n   */\n  declare colorsOnly: ColorMatrixOwnProps['colorsOnly'];\n\n  static type = 'ColorMatrix';\n\n  static defaults = colorMatrixDefaultValues;\n\n  static uniformLocations = ['uColorMatrix', 'uConstants'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      m = this.matrix,\n      colorsOnly = this.colorsOnly;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n      data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n      data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n      if (!colorsOnly) {\n        const a = data[i + 3];\n        data[i] += a * m[3];\n        data[i + 1] += a * m[8];\n        data[i + 2] += a * m[13];\n        data[i + 3] =\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const m = this.matrix,\n      matrix = [\n        m[0],\n        m[1],\n        m[2],\n        m[3],\n        m[5],\n        m[6],\n        m[7],\n        m[8],\n        m[10],\n        m[11],\n        m[12],\n        m[13],\n        m[15],\n        m[16],\n        m[17],\n        m[18],\n      ],\n      constants = [m[4], m[9], m[14], m[19]];\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n    gl.uniform4fv(uniformLocations.uConstants, constants);\n  }\n\n  toObject(): { type: Name } & SerializedProps {\n    return {\n      ...super.toObject(),\n      matrix: [...this.matrix] as TMatColorMatrix,\n    };\n  }\n}\n\nclassRegistry.setClass(ColorMatrix);\n","import { ColorMatrix } from './ColorMatrix';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TMatColorMatrix } from './typedefs';\n\ntype FixedFiltersOwnProps = {\n  colorsOnly: boolean;\n};\n\nexport function createColorMatrixFilter(key: string, matrix: TMatColorMatrix) {\n  const newClass = class extends ColorMatrix<\n    typeof key,\n    FixedFiltersOwnProps,\n    FixedFiltersOwnProps\n  > {\n    static type = key;\n\n    static defaults = {\n      colorsOnly: false,\n      matrix,\n    };\n\n    toObject(): { type: string } & FixedFiltersOwnProps {\n      return { type: this.type, colorsOnly: this.colorsOnly };\n    }\n  };\n  classRegistry.setClass(newClass, key);\n  return newClass as typeof ColorMatrix<typeof key, FixedFiltersOwnProps>;\n}\n\nexport const Brownie = createColorMatrixFilter(\n  'Brownie',\n  [\n    0.5997, 0.34553, -0.27082, 0, 0.186, -0.0377, 0.86095, 0.15059, 0, -0.1449,\n    0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Vintage = createColorMatrixFilter(\n  'Vintage',\n  [\n    0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0,\n    0.02926, 0.0466, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Kodachrome = createColorMatrixFilter(\n  'Kodachrome',\n  [\n    1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0,\n    0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Technicolor = createColorMatrixFilter(\n  'Technicolor',\n  [\n    1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0,\n    -0.27589, -0.2311, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Polaroid = createColorMatrixFilter(\n  'Polaroid',\n  [\n    1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016,\n    1.483, 0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Sepia = createColorMatrixFilter(\n  'Sepia',\n  [\n    0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131,\n    0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const BlackWhite = createColorMatrixFilter(\n  'BlackWhite',\n  [\n    1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0,\n    1, 0,\n  ],\n);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLPipelineState } from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\n\ntype ComposedOwnProps = {\n  subFilters: BaseFilter<string, object, object>[];\n};\n\ntype ComposedSerializedProps = {\n  subFilters: Record<string, unknown>[];\n};\n\n/**\n * A container class that knows how to apply a sequence of filters to an input image.\n */\nexport class Composed extends BaseFilter<\n  'Composed',\n  ComposedOwnProps,\n  ComposedSerializedProps\n> {\n  /**\n   * A non sparse array of filters to apply\n   */\n  declare subFilters: ComposedOwnProps['subFilters'];\n\n  static type = 'Composed';\n\n  constructor(\n    options: { subFilters?: BaseFilter<string, object>[] } & Record<\n      string,\n      any\n    > = {},\n  ) {\n    super(options);\n    this.subFilters = options.subFilters || [];\n  }\n\n  /**\n   * Apply this container's filters to the input image provided.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be applied.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      options.passes += this.subFilters.length - 1;\n    }\n    this.subFilters.forEach((filter) => {\n      filter.applyTo(options);\n    });\n  }\n\n  /**\n   * Serialize this filter into JSON.\n   * @returns {Object} A JSON representation of this filter.\n   */\n  toObject() {\n    return {\n      type: this.type,\n      subFilters: this.subFilters.map((filter) => filter.toObject()),\n    };\n  }\n\n  isNeutralState() {\n    return !this.subFilters.some((filter) => !filter.isNeutralState());\n  }\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   * @static\n   * @param {oject} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting `BlendImage` filter loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<Composed>}\n   */\n  static fromObject(\n    object: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<Composed> {\n    return Promise.all(\n      ((object.subFilters || []) as BaseFilter<string, object>[]).map(\n        (filter) =>\n          classRegistry\n            .getClass<typeof BaseFilter>(filter.type)\n            .fromObject(filter, options),\n      ),\n    ).then(\n      (enlivedFilters) => new this({ subFilters: enlivedFilters }) as Composed,\n    );\n  }\n}\n\nclassRegistry.setClass(Composed);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/constrast';\n\ntype ContrastOwnProps = {\n  contrast: number;\n};\n\nexport const contrastDefaultValues: ContrastOwnProps = {\n  contrast: 0,\n};\n\n/**\n * Contrast filter class\n * @example\n * const filter = new Contrast({\n *   contrast: 0.25\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Contrast extends BaseFilter<'Contrast', ContrastOwnProps> {\n  /**\n   * contrast value, range from -1 to 1.\n   * @param {Number} contrast\n   * @default 0\n   */\n  declare contrast: ContrastOwnProps['contrast'];\n\n  static type = 'Contrast';\n\n  static defaults = contrastDefaultValues;\n\n  static uniformLocations = ['uContrast'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  isNeutralState() {\n    return this.contrast === 0;\n  }\n\n  /**\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const contrast = Math.floor(this.contrast * 255),\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = contrastF * (data[i] - 128) + 128;\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\n  }\n}\n\nclassRegistry.setClass(Contrast);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uContrast;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\n    gl_FragColor = color;\n  }`;\n","export const fragmentSource = {\n  Convolute_3_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_3_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_5_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_5_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_7_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_7_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_9_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_9_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/convolute';\n\nexport type ConvoluteOwnProps = {\n  opaque: boolean;\n  matrix: number[];\n};\n\nexport const convoluteDefaultValues: ConvoluteOwnProps = {\n  opaque: false,\n  matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n};\n\n/**\n * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n * @example <caption>Sharpen filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 0, -1,  0,\n *            -1,  5, -1,\n *             0, -1,  0 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Blur filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter with opaqueness</caption>\n * const filter = new Convolute({\n *   opaque: true,\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Convolute extends BaseFilter<'Convolute', ConvoluteOwnProps> {\n  /*\n   * Opaque value (true/false)\n   */\n  declare opaque: ConvoluteOwnProps['opaque'];\n\n  /*\n   * matrix for the filter, max 9x9\n   */\n  declare matrix: ConvoluteOwnProps['matrix'];\n\n  static type = 'Convolute';\n\n  static defaults = convoluteDefaultValues;\n\n  static uniformLocations = ['uMatrix', 'uOpaque', 'uHalfSize', 'uSize'];\n\n  getCacheKey() {\n    return `${this.type}_${Math.sqrt(this.matrix.length)}_${\n      this.opaque ? 1 : 0\n    }` as keyof typeof fragmentSource;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.getCacheKey()];\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      weights = this.matrix,\n      side = Math.round(Math.sqrt(weights.length)),\n      halfSide = Math.floor(side / 2),\n      sw = imageData.width,\n      sh = imageData.height,\n      output = options.ctx.createImageData(sw, sh),\n      dst = output.data,\n      // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0;\n    let r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n\n    for (y = 0; y < sh; y++) {\n      for (x = 0; x < sw; x++) {\n        dstOff = (y * sw + x) * 4;\n        // calculate the weighed sum of the source image pixels that\n        // fall under the convolution matrix\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 0;\n\n        for (cy = 0; cy < side; cy++) {\n          for (cx = 0; cx < side; cx++) {\n            scy = y + cy - halfSide;\n            scx = x + cx - halfSide;\n\n            // eslint-disable-next-line max-depth\n            if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n              continue;\n            }\n\n            srcOff = (scy * sw + scx) * 4;\n            wt = weights[cy * side + cx];\n\n            r += data[srcOff] * wt;\n            g += data[srcOff + 1] * wt;\n            b += data[srcOff + 2] * wt;\n            // eslint-disable-next-line max-depth\n            if (!alphaFac) {\n              a += data[srcOff + 3] * wt;\n            }\n          }\n        }\n        dst[dstOff] = r;\n        dst[dstOff + 1] = g;\n        dst[dstOff + 2] = b;\n        if (!alphaFac) {\n          dst[dstOff + 3] = a;\n        } else {\n          dst[dstOff + 3] = data[dstOff + 3];\n        }\n      }\n    }\n    options.imageData = output;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      ...super.toObject(),\n      opaque: this.opaque,\n      matrix: [...this.matrix],\n    };\n  }\n}\n\nclassRegistry.setClass(Convolute);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform vec3 uGamma;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    vec3 correction = (1.0 / uGamma);\n    color.r = pow(color.r, correction.r);\n    color.g = pow(color.g, correction.g);\n    color.b = pow(color.b, correction.b);\n    gl_FragColor = color;\n    gl_FragColor.rgb *= color.a;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/gamma';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nconst GAMMA = 'Gamma' as const;\n\nexport type GammaInput = [number, number, number];\n\nexport type GammaOwnProps = {\n  gamma: GammaInput;\n};\n\nexport const gammaDefaultValues: GammaOwnProps = {\n  gamma: [1, 1, 1],\n};\n\n/**\n * Gamma filter class\n * @example\n * const filter = new Gamma({\n *   gamma: [1, 0.5, 2.1]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Gamma extends BaseFilter<typeof GAMMA, GammaOwnProps> {\n  /**\n   * Gamma array value, from 0.01 to 2.2.\n   * @param {Array} gamma\n   * @default\n   */\n  declare gamma: GammaOwnProps['gamma'];\n  declare rgbValues?: {\n    r: Uint8Array;\n    g: Uint8Array;\n    b: Uint8Array;\n  };\n\n  static type = GAMMA;\n\n  static defaults = gammaDefaultValues;\n\n  static uniformLocations = ['uGamma'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  constructor(options: { gamma?: GammaInput } = {}) {\n    super(options);\n    this.gamma =\n      options.gamma ||\n      ((\n        this.constructor as typeof Gamma\n      ).defaults.gamma.concat() as GammaInput);\n  }\n\n  /**\n   * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const gamma = this.gamma,\n      rInv = 1 / gamma[0],\n      gInv = 1 / gamma[1],\n      bInv = 1 / gamma[2];\n\n    if (!this.rgbValues) {\n      this.rgbValues = {\n        r: new Uint8Array(256),\n        g: new Uint8Array(256),\n        b: new Uint8Array(256),\n      };\n    }\n\n    // This is an optimization - pre-compute a look-up table for each color channel\n    // instead of performing these pow calls for each pixel in the image.\n    const rgb = this.rgbValues;\n    for (let i = 0; i < 256; i++) {\n      rgb.r[i] = Math.pow(i / 255, rInv) * 255;\n      rgb.g[i] = Math.pow(i / 255, gInv) * 255;\n      rgb.b[i] = Math.pow(i / 255, bInv) * 255;\n    }\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = rgb.r[data[i]];\n      data[i + 1] = rgb.g[data[i + 1]];\n      data[i + 2] = rgb.b[data[i + 2]];\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n  }\n\n  isNeutralState() {\n    const { gamma } = this;\n    return gamma[0] === 1 && gamma[1] === 1 && gamma[2] === 1;\n  }\n\n  toObject(): { type: typeof GAMMA; gamma: GammaInput } {\n    return {\n      type: GAMMA,\n      gamma: this.gamma.concat() as GammaInput,\n    };\n  }\n}\n\nclassRegistry.setClass(Gamma);\n","import type { TGrayscaleMode } from '../Grayscale';\n\nexport const fragmentSource: Record<TGrayscaleMode, string> = {\n  average: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      float average = (color.r + color.b + color.g) / 3.0;\n      gl_FragColor = vec4(average, average, average, color.a);\n    }\n    `,\n  lightness: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n  luminosity: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/grayscale';\n\nexport type TGrayscaleMode = 'average' | 'lightness' | 'luminosity';\n\ntype GrayscaleOwnProps = {\n  mode: TGrayscaleMode;\n};\n\nexport const grayscaleDefaultValues: GrayscaleOwnProps = {\n  mode: 'average',\n};\n\n/**\n * Grayscale image filter class\n * @example\n * const filter = new Grayscale();\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Grayscale extends BaseFilter<'Grayscale', GrayscaleOwnProps> {\n  declare mode: TGrayscaleMode;\n\n  static type = 'Grayscale';\n\n  static defaults = grayscaleDefaultValues;\n\n  static uniformLocations = ['uMode'];\n\n  /**\n   * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0, value: number; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      switch (this.mode) {\n        case 'average':\n          value = (r + g + b) / 3;\n          break;\n        case 'lightness':\n          value = (Math.min(r, g, b) + Math.max(r, g, b)) / 2;\n          break;\n        case 'luminosity':\n          value = 0.21 * r + 0.72 * g + 0.07 * b;\n          break;\n      }\n\n      data[i + 2] = data[i + 1] = data[i] = value;\n    }\n  }\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.mode];\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const mode = 1;\n    gl.uniform1i(uniformLocations.uMode, mode);\n  }\n\n  /**\n   * Grayscale filter isNeutralState implementation\n   * The filter is never neutral\n   * on the image\n   **/\n  isNeutralState() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Grayscale);\n","import { cos } from '../util/misc/cos';\nimport { sin } from '../util/misc/sin';\nimport {\n  ColorMatrix,\n  type ColorMatrixOwnProps,\n  colorMatrixDefaultValues,\n} from './ColorMatrix';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\n\nexport type HueRotationOwnProps = ColorMatrixOwnProps & {\n  rotation: number;\n};\n\nexport type HueRotationSerializedProps = {\n  rotation: number;\n};\n\nexport const hueRotationDefaultValues: HueRotationOwnProps = {\n  ...colorMatrixDefaultValues,\n  rotation: 0,\n};\n\n/**\n * HueRotation filter class\n * @example\n * const filter = new HueRotation({\n *   rotation: -0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class HueRotation extends ColorMatrix<\n  'HueRotation',\n  HueRotationOwnProps,\n  HueRotationSerializedProps\n> {\n  /**\n   * HueRotation value, from -1 to 1.\n   */\n  declare rotation: HueRotationOwnProps['rotation'];\n\n  static type = 'HueRotation';\n\n  static defaults = hueRotationDefaultValues;\n\n  calculateMatrix() {\n    const rad = this.rotation * Math.PI,\n      cosine = cos(rad),\n      sine = sin(rad),\n      aThird = 1 / 3,\n      aThirdSqtSin = Math.sqrt(aThird) * sine,\n      OneMinusCos = 1 - cosine;\n    this.matrix = [\n      cosine + OneMinusCos / 3,\n      aThird * OneMinusCos - aThirdSqtSin,\n      aThird * OneMinusCos + aThirdSqtSin,\n      0,\n      0,\n      aThird * OneMinusCos + aThirdSqtSin,\n      cosine + aThird * OneMinusCos,\n      aThird * OneMinusCos - aThirdSqtSin,\n      0,\n      0,\n      aThird * OneMinusCos - aThirdSqtSin,\n      aThird * OneMinusCos + aThirdSqtSin,\n      cosine + aThird * OneMinusCos,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n    ];\n  }\n\n  isNeutralState() {\n    return this.rotation === 0;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    this.calculateMatrix();\n    super.applyTo(options);\n  }\n\n  toObject() {\n    return {\n      type: this.type,\n      rotation: this.rotation,\n    };\n  }\n}\n\nclassRegistry.setClass(HueRotation);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/invert';\n\nexport type InvertOwnProps = {\n  alpha: boolean;\n  invert: boolean;\n};\n\nexport const invertDefaultValues: InvertOwnProps = {\n  alpha: false,\n  invert: true,\n};\n\n/**\n * @example\n * const filter = new Invert();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Invert extends BaseFilter<'Invert', InvertOwnProps> {\n  /**\n   * Invert also alpha.\n   * @param {Boolean} alpha\n   * @default\n   **/\n  declare alpha: InvertOwnProps['alpha'];\n\n  /**\n   * Filter invert. if false, does nothing\n   * @param {Boolean} invert\n   * @default\n   */\n  declare invert: InvertOwnProps['invert'];\n\n  static type = 'Invert';\n\n  static defaults = invertDefaultValues;\n\n  static uniformLocations = ['uInvert', 'uAlpha'];\n\n  /**\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];\n      data[i + 1] = 255 - data[i + 1];\n      data[i + 2] = 255 - data[i + 2];\n\n      if (this.alpha) {\n        data[i + 3] = 255 - data[i + 3];\n      }\n    }\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Invert filter isNeutralState implementation\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * @param {Object} options\n   **/\n  isNeutralState() {\n    return !this.invert;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\n  }\n}\n\nclassRegistry.setClass(Invert);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform int uInvert;\n  uniform int uAlpha;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    if (uInvert == 1) {\n      if (uAlpha == 1) {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\n      } else {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n      }\n    } else {\n      gl_FragColor = color;\n    }\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/noise';\n\nexport type NoiseOwnProps = {\n  noise: number;\n};\n\nexport const noiseDefaultValues: NoiseOwnProps = {\n  noise: 0,\n};\n\n/**\n * Noise filter class\n * @example\n * const filter = new Noise({\n *   noise: 700\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Noise extends BaseFilter<'Noise', NoiseOwnProps> {\n  /**\n   * Noise value, from\n   * @param {Number} noise\n   * @default\n   */\n  declare noise: NoiseOwnProps['noise'];\n\n  static type = 'Noise';\n\n  static defaults = noiseDefaultValues;\n\n  static uniformLocations = ['uNoise', 'uSeed'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const noise = this.noise;\n    for (let i = 0; i < data.length; i += 4) {\n      const rand = (0.5 - Math.random()) * noise;\n      data[i] += rand;\n      data[i + 1] += rand;\n      data[i + 2] += rand;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\n  }\n\n  isNeutralState() {\n    return this.noise === 0;\n  }\n}\n\nclassRegistry.setClass(Noise);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uStepH;\n  uniform float uNoise;\n  uniform float uSeed;\n  varying vec2 vTexCoord;\n  float rand(vec2 co, float seed, float vScale) {\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n  }\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/pixelate';\n\nexport type PixelateOwnProps = {\n  blocksize: number;\n};\n\nexport const pixelateDefaultValues: PixelateOwnProps = {\n  blocksize: 4,\n};\n\n/**\n * Pixelate filter class\n * @example\n * const filter = new Pixelate({\n *   blocksize: 8\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Pixelate extends BaseFilter<'Pixelate', PixelateOwnProps> {\n  declare blocksize: PixelateOwnProps['blocksize'];\n\n  static type = 'Pixelate';\n\n  static defaults = pixelateDefaultValues;\n\n  static uniformLocations = ['uBlocksize'];\n\n  /**\n   * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\n    for (let i = 0; i < height; i += this.blocksize) {\n      for (let j = 0; j < width; j += this.blocksize) {\n        const index = i * 4 * width + j * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n        const a = data[index + 3];\n\n        for (let _i = i; _i < Math.min(i + this.blocksize, height); _i++) {\n          for (let _j = j; _j < Math.min(j + this.blocksize, width); _j++) {\n            const index = _i * 4 * width + _j * 4;\n            data[index] = r;\n            data[index + 1] = g;\n            data[index + 2] = b;\n            data[index + 3] = a;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicate when the filter is not gonna apply changes to the image\n   **/\n  isNeutralState() {\n    return this.blocksize === 1;\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n  }\n}\n\nclassRegistry.setClass(Pixelate);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBlocksize;\n  uniform float uStepW;\n  uniform float uStepH;\n  varying vec2 vTexCoord;\n  void main() {\n    float blockW = uBlocksize * uStepW;\n    float blockH = uBlocksize * uStepH;\n    int posX = int(vTexCoord.x / blockW);\n    int posY = int(vTexCoord.y / blockH);\n    float fposX = float(posX);\n    float fposY = float(posY);\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\n    vec4 color = texture2D(uTexture, squareCoords);\n    gl_FragColor = color;\n  }\n`;\n","import { classRegistry } from '../ClassRegistry';\nimport { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport { fragmentShader } from './shaders/removeColor';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nexport type RemoveColorOwnProps = {\n  color: string;\n  distance: number;\n  useAlpha: boolean;\n};\n\nexport const removeColorDefaultValues: RemoveColorOwnProps = {\n  color: '#FFFFFF',\n  distance: 0.02,\n  useAlpha: false,\n};\n\n/**\n * Remove white filter class\n * @example\n * const filter = new RemoveColor({\n *   threshold: 0.2,\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class RemoveColor extends BaseFilter<\n  'RemoveColor',\n  RemoveColorOwnProps\n> {\n  /**\n   * Color to remove, in any format understood by {@link Color}.\n   * @param {String} type\n   * @default\n   */\n  declare color: RemoveColorOwnProps['color'];\n\n  /**\n   * distance to actual color, as value up or down from each r,g,b\n   * between 0 and 1\n   **/\n  declare distance: RemoveColorOwnProps['distance'];\n\n  /**\n   * For color to remove inside distance, use alpha channel for a smoother deletion\n   * NOT IMPLEMENTED YET\n   **/\n  declare useAlpha: RemoveColorOwnProps['useAlpha'];\n\n  static type = 'RemoveColor';\n\n  static defaults = removeColorDefaultValues;\n\n  static uniformLocations = ['uLow', 'uHigh'];\n\n  getFragmentSource() {\n    return fragmentShader;\n  }\n\n  /**\n   * Applies filter to canvas element\n   * @param {Object} canvasEl Canvas element to apply filter to\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const distance = this.distance * 255,\n      source = new Color(this.color).getSource(),\n      lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n      highC = [\n        source[0] + distance,\n        source[1] + distance,\n        source[2] + distance,\n      ];\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      if (\n        r > lowC[0] &&\n        g > lowC[1] &&\n        b > lowC[2] &&\n        r < highC[0] &&\n        g < highC[1] &&\n        b < highC[2]\n      ) {\n        data[i + 3] = 0;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource(),\n      distance = this.distance,\n      lowC = [\n        0 + source[0] / 255 - distance,\n        0 + source[1] / 255 - distance,\n        0 + source[2] / 255 - distance,\n        1,\n      ],\n      highC = [\n        source[0] / 255 + distance,\n        source[1] / 255 + distance,\n        source[2] / 255 + distance,\n        1,\n      ];\n    gl.uniform4fv(uniformLocations.uLow, lowC);\n    gl.uniform4fv(uniformLocations.uHigh, highC);\n  }\n}\n\nclassRegistry.setClass(RemoveColor);\n","export const fragmentShader = `\nprecision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uLow;\nuniform vec4 uHigh;\nvarying vec2 vTexCoord;\nvoid main() {\n  gl_FragColor = texture2D(uTexture, vTexCoord);\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\n    gl_FragColor.a = 0.0;\n  }\n}\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { XY } from '../Point';\n\nexport type TResizeType = 'bilinear' | 'hermite' | 'sliceHack' | 'lanczos';\n\nexport type ResizeOwnProps = {\n  resizeType: TResizeType;\n  scaleX: number;\n  scaleY: number;\n  lanczosLobes: number;\n};\n\nexport const resizeDefaultValues: ResizeOwnProps = {\n  resizeType: 'hermite',\n  scaleX: 1,\n  scaleY: 1,\n  lanczosLobes: 3,\n};\n\ntype ResizeDuring2DResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n};\n\ntype ResizeDuringWEBGLResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n  horizontal: boolean;\n  width: number;\n  height: number;\n  taps: number[];\n  tempScale: number;\n  dH: number;\n  dW: number;\n};\n\n/**\n * Resize image filter class\n * @example\n * const filter = new Resize();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Resize extends BaseFilter<'Resize', ResizeOwnProps> {\n  /**\n   * Resize type\n   * for webgl resizeType is just lanczos, for canvas2d can be:\n   * bilinear, hermite, sliceHack, lanczos.\n   * @default\n   */\n  declare resizeType: ResizeOwnProps['resizeType'];\n\n  /**\n   * Scale factor for resizing, x axis\n   * @param {Number} scaleX\n   * @default\n   */\n  declare scaleX: ResizeOwnProps['scaleX'];\n\n  /**\n   * Scale factor for resizing, y axis\n   * @param {Number} scaleY\n   * @default\n   */\n  declare scaleY: ResizeOwnProps['scaleY'];\n\n  /**\n   * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n   * @param {Number} lanczosLobes\n   * @default\n   */\n  declare lanczosLobes: ResizeOwnProps['lanczosLobes'];\n\n  static type = 'Resize';\n\n  static defaults = resizeDefaultValues;\n\n  static uniformLocations = ['uDelta', 'uTaps'];\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    this: ResizeDuringWEBGLResize,\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform2fv(\n      uniformLocations.uDelta,\n      this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height],\n    );\n    gl.uniform1fv(uniformLocations.uTaps, this.taps);\n  }\n\n  getFilterWindow(this: ResizeDuringWEBGLResize) {\n    const scale = this.tempScale;\n    return Math.ceil(this.lanczosLobes / scale);\n  }\n\n  getCacheKey(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return `${this.type}_${filterWindow}`;\n  }\n\n  getFragmentSource(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return this.generateShader(filterWindow);\n  }\n\n  getTaps(this: ResizeDuringWEBGLResize) {\n    const lobeFunction = this.lanczosCreate(this.lanczosLobes),\n      scale = this.tempScale,\n      filterWindow = this.getFilterWindow(),\n      taps = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      taps[i - 1] = lobeFunction(i * scale);\n    }\n    return taps;\n  }\n\n  /**\n   * Generate vertex and shader sources from the necessary steps numbers\n   * @param {Number} filterWindow\n   */\n  generateShader(filterWindow: number) {\n    const offsets = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      offsets[i - 1] = `${i}.0 * uDelta`;\n    }\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec2 uDelta;\n      varying vec2 vTexCoord;\n      uniform float uTaps[${filterWindow}];\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        float sum = 1.0;\n        ${offsets\n          .map(\n            (offset, i) => `\n              color += texture2D(uTexture, vTexCoord + ${offset}) * uTaps[${i}] + texture2D(uTexture, vTexCoord - ${offset}) * uTaps[${i}];\n              sum += 2.0 * uTaps[${i}];\n            `,\n          )\n          .join('\\n')}\n        gl_FragColor = color / sum;\n      }\n    `;\n  }\n\n  applyToForWebgl(this: ResizeDuringWEBGLResize, options: TWebGLPipelineState) {\n    options.passes++;\n    this.width = options.sourceWidth;\n    this.horizontal = true;\n    this.dW = Math.round(this.width * this.scaleX);\n    this.dH = options.sourceHeight;\n    this.tempScale = this.dW / this.width;\n    this.taps = this.getTaps();\n    options.destinationWidth = this.dW;\n    super.applyTo(options);\n    options.sourceWidth = options.destinationWidth;\n\n    this.height = options.sourceHeight;\n    this.horizontal = false;\n    this.dH = Math.round(this.height * this.scaleY);\n    this.tempScale = this.dH / this.height;\n    this.taps = this.getTaps();\n    options.destinationHeight = this.dH;\n    super.applyTo(options);\n    options.sourceHeight = options.destinationHeight;\n  }\n\n  /**\n   * Apply the resize filter to the image\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      (this as unknown as ResizeDuringWEBGLResize).applyToForWebgl(options);\n    } else {\n      (this as unknown as ResizeDuring2DResize).applyTo2d(options);\n    }\n  }\n\n  isNeutralState() {\n    return this.scaleX === 1 && this.scaleY === 1;\n  }\n\n  lanczosCreate(lobes: number) {\n    return (x: number) => {\n      if (x >= lobes || x <= -lobes) {\n        return 0.0;\n      }\n      if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n        return 1.0;\n      }\n      x *= Math.PI;\n      const xx = x / lobes;\n      return ((Math.sin(x) / x) * Math.sin(xx)) / xx;\n    };\n  }\n\n  applyTo2d(this: ResizeDuring2DResize, options: T2DPipelineState) {\n    const imageData = options.imageData,\n      scaleX = this.scaleX,\n      scaleY = this.scaleY;\n\n    this.rcpScaleX = 1 / scaleX;\n    this.rcpScaleY = 1 / scaleY;\n\n    const oW = imageData.width;\n    const oH = imageData.height;\n    const dW = Math.round(oW * scaleX);\n    const dH = Math.round(oH * scaleY);\n    let newData: ImageData;\n\n    if (this.resizeType === 'sliceHack') {\n      newData = this.sliceByTwo(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'hermite') {\n      newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'bilinear') {\n      newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'lanczos') {\n      newData = this.lanczosResize(options, oW, oH, dW, dH);\n    } else {\n      // this should never trigger, is here just for safety net.\n      newData = new ImageData(dW, dH);\n    }\n    options.imageData = newData;\n  }\n\n  /**\n   * Filter sliceByTwo\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  sliceByTwo(\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const imageData = options.imageData;\n    const mult = 0.5;\n    let doneW = false;\n    let doneH = false;\n    let stepW = oW * mult;\n    let stepH = oH * mult;\n    const resources = options.filterBackend.resources;\n    let sX = 0;\n    let sY = 0;\n    const dX = oW;\n    let dY = 0;\n    if (!resources.sliceByTwo) {\n      resources.sliceByTwo = createCanvasElement();\n    }\n    const tmpCanvas = resources.sliceByTwo;\n    if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n      tmpCanvas.width = oW * 1.5;\n      tmpCanvas.height = oH;\n    }\n    const ctx = tmpCanvas.getContext('2d')!;\n    ctx.clearRect(0, 0, oW * 1.5, oH);\n    ctx.putImageData(imageData, 0, 0);\n\n    dW = Math.floor(dW);\n    dH = Math.floor(dH);\n\n    while (!doneW || !doneH) {\n      oW = stepW;\n      oH = stepH;\n      if (dW < Math.floor(stepW * mult)) {\n        stepW = Math.floor(stepW * mult);\n      } else {\n        stepW = dW;\n        doneW = true;\n      }\n      if (dH < Math.floor(stepH * mult)) {\n        stepH = Math.floor(stepH * mult);\n      } else {\n        stepH = dH;\n        doneH = true;\n      }\n      ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n      sX = dX;\n      sY = dY;\n      dY += stepH;\n    }\n    return ctx.getImageData(sX, sY, dW, dH);\n  }\n\n  /**\n   * Filter lanczosResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  lanczosResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ): ImageData {\n    function process(u: number): ImageData {\n      let v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n      center.x = (u + 0.5) * ratioX;\n      icenter.x = Math.floor(center.x);\n      for (v = 0; v < dH; v++) {\n        center.y = (v + 0.5) * ratioY;\n        icenter.y = Math.floor(center.y);\n        a = 0;\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n        for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n          if (i < 0 || i >= oW) {\n            continue;\n          }\n          fX = Math.floor(1000 * Math.abs(i - center.x));\n          if (!cacheLanc[fX]) {\n            cacheLanc[fX] = {};\n          }\n          for (let j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n            if (j < 0 || j >= oH) {\n              continue;\n            }\n            fY = Math.floor(1000 * Math.abs(j - center.y));\n            if (!cacheLanc[fX][fY]) {\n              cacheLanc[fX][fY] = lanczos(\n                Math.sqrt(\n                  Math.pow(fX * rcpRatioX, 2) + Math.pow(fY * rcpRatioY, 2),\n                ) / 1000,\n              );\n            }\n            weight = cacheLanc[fX][fY];\n            if (weight > 0) {\n              idx = (j * oW + i) * 4;\n              a += weight;\n              red += weight * srcData[idx];\n              green += weight * srcData[idx + 1];\n              blue += weight * srcData[idx + 2];\n              alpha += weight * srcData[idx + 3];\n            }\n          }\n        }\n        idx = (v * dW + u) * 4;\n        destData[idx] = red / a;\n        destData[idx + 1] = green / a;\n        destData[idx + 2] = blue / a;\n        destData[idx + 3] = alpha / a;\n      }\n\n      if (++u < dW) {\n        return process(u);\n      } else {\n        return destImg;\n      }\n    }\n\n    const srcData = options.imageData.data,\n      destImg = options.ctx.createImageData(dW, dH),\n      destData = destImg.data,\n      lanczos = this.lanczosCreate(this.lanczosLobes),\n      ratioX = this.rcpScaleX,\n      ratioY = this.rcpScaleY,\n      rcpRatioX = 2 / this.rcpScaleX,\n      rcpRatioY = 2 / this.rcpScaleY,\n      range2X = Math.ceil((ratioX * this.lanczosLobes) / 2),\n      range2Y = Math.ceil((ratioY * this.lanczosLobes) / 2),\n      cacheLanc: Record<number, Record<number, number>> = {},\n      center: XY = { x: 0, y: 0 },\n      icenter: XY = { x: 0, y: 0 };\n\n    return process(0);\n  }\n\n  /**\n   * bilinearFiltering\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  bilinearFiltering(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    let a;\n    let b;\n    let c;\n    let d;\n    let x;\n    let y;\n    let i;\n    let j;\n    let xDiff;\n    let yDiff;\n    let chnl;\n    let color;\n    let offset = 0;\n    let origPix;\n    const ratioX = this.rcpScaleX;\n    const ratioY = this.rcpScaleY;\n    const w4 = 4 * (oW - 1);\n    const img = options.imageData;\n    const pixels = img.data;\n    const destImage = options.ctx.createImageData(dW, dH);\n    const destPixels = destImage.data;\n    for (i = 0; i < dH; i++) {\n      for (j = 0; j < dW; j++) {\n        x = Math.floor(ratioX * j);\n        y = Math.floor(ratioY * i);\n        xDiff = ratioX * j - x;\n        yDiff = ratioY * i - y;\n        origPix = 4 * (y * oW + x);\n\n        for (chnl = 0; chnl < 4; chnl++) {\n          a = pixels[origPix + chnl];\n          b = pixels[origPix + 4 + chnl];\n          c = pixels[origPix + w4 + chnl];\n          d = pixels[origPix + w4 + 4 + chnl];\n          color =\n            a * (1 - xDiff) * (1 - yDiff) +\n            b * xDiff * (1 - yDiff) +\n            c * yDiff * (1 - xDiff) +\n            d * xDiff * yDiff;\n          destPixels[offset++] = color;\n        }\n      }\n    }\n    return destImage;\n  }\n\n  /**\n   * hermiteFastResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  hermiteFastResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const ratioW = this.rcpScaleX,\n      ratioH = this.rcpScaleY,\n      ratioWHalf = Math.ceil(ratioW / 2),\n      ratioHHalf = Math.ceil(ratioH / 2),\n      img = options.imageData,\n      data = img.data,\n      img2 = options.ctx.createImageData(dW, dH),\n      data2 = img2.data;\n    for (let j = 0; j < dH; j++) {\n      for (let i = 0; i < dW; i++) {\n        const x2 = (i + j * dW) * 4;\n        let weight = 0;\n        let weights = 0;\n        let weightsAlpha = 0;\n        let gxR = 0;\n        let gxG = 0;\n        let gxB = 0;\n        let gxA = 0;\n        const centerY = (j + 0.5) * ratioH;\n        for (let yy = Math.floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n          const dy = Math.abs(centerY - (yy + 0.5)) / ratioHHalf,\n            centerX = (i + 0.5) * ratioW,\n            w0 = dy * dy;\n          for (let xx = Math.floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n            let dx = Math.abs(centerX - (xx + 0.5)) / ratioWHalf;\n            const w = Math.sqrt(w0 + dx * dx);\n            /* eslint-disable max-depth */\n            if (w > 1 && w < -1) {\n              continue;\n            }\n            //hermite filter\n            weight = 2 * w * w * w - 3 * w * w + 1;\n            if (weight > 0) {\n              dx = 4 * (xx + yy * oW);\n              //alpha\n              gxA += weight * data[dx + 3];\n              weightsAlpha += weight;\n              //colors\n              if (data[dx + 3] < 255) {\n                weight = (weight * data[dx + 3]) / 250;\n              }\n              gxR += weight * data[dx];\n              gxG += weight * data[dx + 1];\n              gxB += weight * data[dx + 2];\n              weights += weight;\n            }\n            /* eslint-enable max-depth */\n          }\n        }\n        data2[x2] = gxR / weights;\n        data2[x2 + 1] = gxG / weights;\n        data2[x2 + 2] = gxB / weights;\n        data2[x2 + 3] = gxA / weightsAlpha;\n      }\n    }\n    return img2;\n  }\n}\n\nclassRegistry.setClass(Resize);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/saturation';\n\nexport type SaturationOwnProps = {\n  saturation: number;\n};\n\nexport const saturationDefaultValues: SaturationOwnProps = {\n  saturation: 0,\n};\n\n/**\n * Saturate filter class\n * @example\n * const filter = new Saturation({\n *   saturation: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Saturation extends BaseFilter<'Saturation', SaturationOwnProps> {\n  /**\n   * Saturation value, from -1 to 1.\n   * Increases/decreases the color saturation.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} saturation\n   * @default\n   */\n  declare saturation: SaturationOwnProps['saturation'];\n\n  static type = 'Saturation';\n\n  static defaults = saturationDefaultValues;\n\n  static uniformLocations = ['uSaturation'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.saturation;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const max = Math.max(r, g, b);\n      data[i] += max !== r ? (max - r) * adjust : 0;\n      data[i + 1] += max !== g ? (max - g) * adjust : 0;\n      data[i + 2] += max !== b ? (max - b) * adjust : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n  }\n\n  isNeutralState() {\n    return this.saturation === 0;\n  }\n}\n\nclassRegistry.setClass(Saturation);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uSaturation;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float rgMax = max(color.r, color.g);\n    float rgbMax = max(rgMax, color.b);\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/vibrance';\n\nexport type VibranceOwnProps = {\n  vibrance: number;\n};\n\nexport const vibranceDefaultValues: VibranceOwnProps = {\n  vibrance: 0,\n};\n\n/**\n * Vibrance filter class\n * @example\n * const filter = new Vibrance({\n *   vibrance: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Vibrance extends BaseFilter<'Vibrance', VibranceOwnProps> {\n  /**\n   * Vibrance value, from -1 to 1.\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} vibrance\n   * @default\n   */\n  declare vibrance: VibranceOwnProps['vibrance'];\n\n  static type = 'Vibrance';\n\n  static defaults = vibranceDefaultValues;\n\n  static uniformLocations = ['uVibrance'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.vibrance;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const max = Math.max(r, g, b);\n      const avg = (r + g + b) / 3;\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\n      data[i] += max !== r ? (max - r) * amt : 0;\n      data[i + 1] += max !== g ? (max - g) * amt : 0;\n      data[i + 2] += max !== b ? (max - b) * amt : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {TWebGLUniformLocationMap} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n  }\n\n  isNeutralState() {\n    return this.vibrance === 0;\n  }\n}\n\nclassRegistry.setClass(Vibrance);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uVibrance;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float max = max(color.r, max(color.g, color.b));\n    float avg = (color.r + color.g + color.b) / 3.0;\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","const getDefaultsFromPostinstall = () => (undefined);\nexport { getDefaultsFromPostinstall };","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\nimport { getDefaultsFromPostinstall } from './postinstall';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromPostinstall() ||\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks whether host is a cloud workstation or not.\n * @public\n */\nexport function isCloudWorkstation(host: string): boolean {\n  return host.endsWith('.cloudworkstations.dev');\n}\n\n/**\n * Makes a fetch request to the given server.\n * Mostly used for forwarding cookies in Firebase Studio.\n * @public\n */\nexport async function pingServer(endpoint: string): Promise<boolean> {\n  const result = await fetch(endpoint, {\n    credentials: 'include'\n  });\n  return result.ok;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\nimport { isCloudWorkstation } from './url';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n\ninterface EmulatorStatusMap {\n  [name: string]: boolean;\n}\nconst emulatorStatus: EmulatorStatusMap = {};\n\ninterface EmulatorSummary {\n  prod: string[];\n  emulator: string[];\n}\n\n// Checks whether any products are running on an emulator\nfunction getEmulatorSummary(): EmulatorSummary {\n  const summary: EmulatorSummary = {\n    prod: [],\n    emulator: []\n  };\n  for (const key of Object.keys(emulatorStatus)) {\n    if (emulatorStatus[key]) {\n      summary.emulator.push(key);\n    } else {\n      summary.prod.push(key);\n    }\n  }\n  return summary;\n}\n\nfunction getOrCreateEl(id: string): { created: boolean; element: HTMLElement } {\n  let parentDiv = document.getElementById(id);\n  let created = false;\n  if (!parentDiv) {\n    parentDiv = document.createElement('div');\n    parentDiv.setAttribute('id', id);\n    created = true;\n  }\n  return { created, element: parentDiv };\n}\n\nlet previouslyDismissed = false;\n/**\n * Updates Emulator Banner. Primarily used for Firebase Studio\n * @param name\n * @param isRunningEmulator\n * @public\n */\nexport function updateEmulatorBanner(\n  name: string,\n  isRunningEmulator: boolean\n): void {\n  if (\n    typeof window === 'undefined' ||\n    typeof document === 'undefined' ||\n    !isCloudWorkstation(window.location.host) ||\n    emulatorStatus[name] === isRunningEmulator ||\n    emulatorStatus[name] || // If already set to use emulator, can't go back to prod.\n    previouslyDismissed\n  ) {\n    return;\n  }\n\n  emulatorStatus[name] = isRunningEmulator;\n\n  function prefixedId(id: string): string {\n    return `__firebase__banner__${id}`;\n  }\n  const bannerId = '__firebase__banner';\n  const summary = getEmulatorSummary();\n  const showError = summary.prod.length > 0;\n\n  function tearDown(): void {\n    const element = document.getElementById(bannerId);\n    if (element) {\n      element.remove();\n    }\n  }\n\n  function setupBannerStyles(bannerEl: HTMLElement): void {\n    bannerEl.style.display = 'flex';\n    bannerEl.style.background = '#7faaf0';\n    bannerEl.style.position = 'fixed';\n    bannerEl.style.bottom = '5px';\n    bannerEl.style.left = '5px';\n    bannerEl.style.padding = '.5em';\n    bannerEl.style.borderRadius = '5px';\n    bannerEl.style.alignItems = 'center';\n  }\n\n  function setupIconStyles(prependIcon: SVGElement, iconId: string): void {\n    prependIcon.setAttribute('width', '24');\n    prependIcon.setAttribute('id', iconId);\n    prependIcon.setAttribute('height', '24');\n    prependIcon.setAttribute('viewBox', '0 0 24 24');\n    prependIcon.setAttribute('fill', 'none');\n    prependIcon.style.marginLeft = '-6px';\n  }\n\n  function setupCloseBtn(): HTMLSpanElement {\n    const closeBtn = document.createElement('span');\n    closeBtn.style.cursor = 'pointer';\n    closeBtn.style.marginLeft = '16px';\n    closeBtn.style.fontSize = '24px';\n    closeBtn.innerHTML = ' &times;';\n    closeBtn.onclick = () => {\n      previouslyDismissed = true;\n      tearDown();\n    };\n    return closeBtn;\n  }\n\n  function setupLinkStyles(\n    learnMoreLink: HTMLAnchorElement,\n    learnMoreId: string\n  ): void {\n    learnMoreLink.setAttribute('id', learnMoreId);\n    learnMoreLink.innerText = 'Learn more';\n    learnMoreLink.href =\n      'https://firebase.google.com/docs/studio/preview-apps#preview-backend';\n    learnMoreLink.setAttribute('target', '__blank');\n    learnMoreLink.style.paddingLeft = '5px';\n    learnMoreLink.style.textDecoration = 'underline';\n  }\n\n  function setupDom(): void {\n    const banner = getOrCreateEl(bannerId);\n    const firebaseTextId = prefixedId('text');\n    const firebaseText: HTMLSpanElement =\n      document.getElementById(firebaseTextId) || document.createElement('span');\n    const learnMoreId = prefixedId('learnmore');\n    const learnMoreLink: HTMLAnchorElement =\n      (document.getElementById(learnMoreId) as HTMLAnchorElement) ||\n      document.createElement('a');\n    const prependIconId = prefixedId('preprendIcon');\n    const prependIcon: SVGElement =\n      (document.getElementById(\n        prependIconId\n      ) as HTMLOrSVGElement as SVGElement) ||\n      document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    if (banner.created) {\n      // update styles\n      const bannerEl = banner.element;\n      setupBannerStyles(bannerEl);\n      setupLinkStyles(learnMoreLink, learnMoreId);\n      const closeBtn = setupCloseBtn();\n      setupIconStyles(prependIcon, prependIconId);\n      bannerEl.append(prependIcon, firebaseText, learnMoreLink, closeBtn);\n      document.body.appendChild(bannerEl);\n    }\n\n    if (showError) {\n      firebaseText.innerText = `Preview backend disconnected.`;\n      prependIcon.innerHTML = `<g clip-path=\"url(#clip0_6013_33858)\">\n<path d=\"M4.8 17.6L12 5.6L19.2 17.6H4.8ZM6.91667 16.4H17.0833L12 7.93333L6.91667 16.4ZM12 15.6C12.1667 15.6 12.3056 15.5444 12.4167 15.4333C12.5389 15.3111 12.6 15.1667 12.6 15C12.6 14.8333 12.5389 14.6944 12.4167 14.5833C12.3056 14.4611 12.1667 14.4 12 14.4C11.8333 14.4 11.6889 14.4611 11.5667 14.5833C11.4556 14.6944 11.4 14.8333 11.4 15C11.4 15.1667 11.4556 15.3111 11.5667 15.4333C11.6889 15.5444 11.8333 15.6 12 15.6ZM11.4 13.6H12.6V10.4H11.4V13.6Z\" fill=\"#212121\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_6013_33858\">\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\n</clipPath>\n</defs>`;\n    } else {\n      prependIcon.innerHTML = `<g clip-path=\"url(#clip0_6083_34804)\">\n<path d=\"M11.4 15.2H12.6V11.2H11.4V15.2ZM12 10C12.1667 10 12.3056 9.94444 12.4167 9.83333C12.5389 9.71111 12.6 9.56667 12.6 9.4C12.6 9.23333 12.5389 9.09444 12.4167 8.98333C12.3056 8.86111 12.1667 8.8 12 8.8C11.8333 8.8 11.6889 8.86111 11.5667 8.98333C11.4556 9.09444 11.4 9.23333 11.4 9.4C11.4 9.56667 11.4556 9.71111 11.5667 9.83333C11.6889 9.94444 11.8333 10 12 10ZM12 18.4C11.1222 18.4 10.2944 18.2333 9.51667 17.9C8.73889 17.5667 8.05556 17.1111 7.46667 16.5333C6.88889 15.9444 6.43333 15.2611 6.1 14.4833C5.76667 13.7056 5.6 12.8778 5.6 12C5.6 11.1111 5.76667 10.2833 6.1 9.51667C6.43333 8.73889 6.88889 8.06111 7.46667 7.48333C8.05556 6.89444 8.73889 6.43333 9.51667 6.1C10.2944 5.76667 11.1222 5.6 12 5.6C12.8889 5.6 13.7167 5.76667 14.4833 6.1C15.2611 6.43333 15.9389 6.89444 16.5167 7.48333C17.1056 8.06111 17.5667 8.73889 17.9 9.51667C18.2333 10.2833 18.4 11.1111 18.4 12C18.4 12.8778 18.2333 13.7056 17.9 14.4833C17.5667 15.2611 17.1056 15.9444 16.5167 16.5333C15.9389 17.1111 15.2611 17.5667 14.4833 17.9C13.7167 18.2333 12.8889 18.4 12 18.4ZM12 17.2C13.4444 17.2 14.6722 16.6944 15.6833 15.6833C16.6944 14.6722 17.2 13.4444 17.2 12C17.2 10.5556 16.6944 9.32778 15.6833 8.31667C14.6722 7.30555 13.4444 6.8 12 6.8C10.5556 6.8 9.32778 7.30555 8.31667 8.31667C7.30556 9.32778 6.8 10.5556 6.8 12C6.8 13.4444 7.30556 14.6722 8.31667 15.6833C9.32778 16.6944 10.5556 17.2 12 17.2Z\" fill=\"#212121\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_6083_34804\">\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\n</clipPath>\n</defs>`;\n      firebaseText.innerText = 'Preview backend running in this workspace.';\n    }\n    firebaseText.setAttribute('id', firebaseTextId);\n  }\n  if (document.readyState === 'loading') {\n    window.addEventListener('DOMContentLoaded', setupDom);\n  } else {\n    setupDom();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Type placeholder for `WorkerGlobalScope` from `webworker`\n */\ndeclare class WorkerGlobalScope {}\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment.\n * Note: This will return true for certain test frameworks that are incompletely\n * mimicking a browser, and should not lead to assuming all browser APIs are\n * available.\n */\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' || isWebWorker();\n}\n\n/**\n * Detect Web Worker context.\n */\nexport function isWebWorker(): boolean {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    typeof self !== 'undefined' &&\n    self instanceof WorkerGlobalScope\n  );\n}\n\n/**\n * Detect Cloudflare Worker context.\n */\nexport function isCloudflareWorker(): boolean {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.userAgent === 'Cloudflare-Workers'\n  );\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/** Returns true if we are running in Safari or WebKit */\nexport function isSafariOrWebkit(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    (navigator.userAgent.includes('Safari') ||\n      navigator.userAgent.includes('WebKit')) &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // TypeScript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data JavaScript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in JavaScript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance!);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance!, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance!\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp | null | undefined\n): obj is FirebaseServerApp {\n  if (obj === null || obj === undefined) {\n    return false;\n  }\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport {\n  deepEqual,\n  getDefaultAppConfig,\n  isBrowser,\n  isWebWorker\n} from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: true,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = true;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\nimport { logger } from './logger';\n\nconst MAX_HEADER_BYTES = 1024;\nexport const MAX_NUM_STORED_HEARTBEATS = 30;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (heartbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    try {\n      const platformLogger = this.container\n        .getProvider('platform-logger')\n        .getImmediate();\n\n      // This is the \"Firebase user agent\" string from the platform logger\n      // service, not the browser user agent.\n      const agent = platformLogger.getPlatformInfoString();\n      const date = getUTCDateString();\n      if (this._heartbeatsCache?.heartbeats == null) {\n        this._heartbeatsCache = await this._heartbeatsCachePromise;\n        // If we failed to construct a heartbeats cache, then return immediately.\n        if (this._heartbeatsCache?.heartbeats == null) {\n          return;\n        }\n      }\n      // Do not store a heartbeat if one is already stored for this day\n      // or if a header has already been sent today.\n      if (\n        this._heartbeatsCache.lastSentHeartbeatDate === date ||\n        this._heartbeatsCache.heartbeats.some(\n          singleDateHeartbeat => singleDateHeartbeat.date === date\n        )\n      ) {\n        return;\n      } else {\n        // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({ date, agent });\n\n        // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n        // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n        if (\n          this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS\n        ) {\n          const earliestHeartbeatIdx = getEarliestHeartbeatIdx(\n            this._heartbeatsCache.heartbeats\n          );\n          this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n        }\n      }\n\n      return this._storage.overwrite(this._heartbeatsCache);\n    } catch (e) {\n      logger.warn(e);\n    }\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    try {\n      if (this._heartbeatsCache === null) {\n        await this._heartbeatsCachePromise;\n      }\n      // If it's still null or the array is empty, there is no data to send.\n      if (\n        this._heartbeatsCache?.heartbeats == null ||\n        this._heartbeatsCache.heartbeats.length === 0\n      ) {\n        return '';\n      }\n      const date = getUTCDateString();\n      // Extract as many heartbeats from the cache as will fit under the size limit.\n      const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n        this._heartbeatsCache.heartbeats\n      );\n      const headerString = base64urlEncodeWithoutPadding(\n        JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n      );\n      // Store last sent date to prevent another being logged/sent for the same day.\n      this._heartbeatsCache.lastSentHeartbeatDate = date;\n      if (unsentEntries.length > 0) {\n        // Store any unsent entries if they exist.\n        this._heartbeatsCache.heartbeats = unsentEntries;\n        // This seems more likely than emptying the array (below) to lead to some odd state\n        // since the cache isn't empty and this will be called again on the next request,\n        // and is probably safest if we await it.\n        await this._storage.overwrite(this._heartbeatsCache);\n      } else {\n        this._heartbeatsCache.heartbeats = [];\n        // Do not wait for this, to reduce latency.\n        void this._storage.overwrite(this._heartbeatsCache);\n      }\n      return headerString;\n    } catch (e) {\n      logger.warn(e);\n      return '';\n    }\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n\n/**\n * Returns the index of the heartbeat with the earliest date.\n * If the heartbeats array is empty, -1 is returned.\n */\nexport function getEarliestHeartbeatIdx(\n  heartbeats: SingleDateHeartbeat[]\n): number {\n  if (heartbeats.length === 0) {\n    return -1;\n  }\n\n  let earliestHeartbeatIdx = 0;\n  let earliestHeartbeatDate = heartbeats[0].date;\n\n  for (let i = 1; i < heartbeats.length; i++) {\n    if (heartbeats[i].date < earliestHeartbeatDate) {\n      earliestHeartbeatDate = heartbeats[i].date;\n      earliestHeartbeatIdx = i;\n    }\n  }\n\n  return earliestHeartbeatIdx;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a JavaScript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in keys, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _isFirebaseServerApp } from '@firebase/app'; // eslint-disable-line import/no-extraneous-dependencies\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  private serverAppAppCheckToken?: string;\n  private appName: string;\n  constructor(\n    app: FirebaseApp,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appName = app.name;\n    if (_isFirebaseServerApp(app) && app.settings.appCheckToken) {\n      this.serverAppAppCheckToken = app.settings.appCheckToken;\n    }\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (this.serverAppAppCheckToken) {\n      if (forceRefresh) {\n        throw new Error(\n          'Attempted reuse of `FirebaseServerApp.appCheckToken` after previous usage failed.'\n        );\n      }\n      return Promise.resolve({ token: this.serverAppAppCheckToken });\n    }\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, EmulatorMockTokenOptions } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\nexport interface RepoInfoEmulatorOptions {\n  mockUserToken?: string | EmulatorMockTokenOptions;\n}\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false,\n    public readonly emulatorOptions: RepoInfoEmulatorOptions | null = null\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are received from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt = Math.max(\n        0,\n        new Date().getTime() - this.lastConnectionAttemptTime_\n      );\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap will be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whether the tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexicographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `IteratedDataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: IteratedDataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n * Represents a child snapshot of a `Reference` that is being iterated over. The key will never be undefined.\n */\nexport interface IteratedDataSnapshot extends DataSnapshot {\n  key: string; // key of the location of this snapshot.\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {\n  key: string;\n  parent: ReferenceImpl;\n}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thenablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thenablePushRef.then = promise.then.bind(promise);\n  thenablePushRef.catch = promise.then.bind(promise, undefined);\n  return thenablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type = 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type = 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type = 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type = 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type = 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type = 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type = 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type = 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type = 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type = 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type = 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  deepEqual,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort,\n  isCloudWorkstation,\n  pingServer,\n  updateEmulatorBanner\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo, RepoInfoEmulatorOptions } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  hostAndPort: string,\n  emulatorOptions: RepoInfoEmulatorOptions,\n  tokenProvider?: AuthTokenProvider\n): void {\n  const portIndex = hostAndPort.lastIndexOf(':');\n  const host = hostAndPort.substring(0, portIndex);\n  const useSsl = isCloudWorkstation(host);\n  repo.repoInfo_ = new RepoInfo(\n    hostAndPort,\n    /* secure= */ useSsl,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true,\n    emulatorOptions\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated with the provided\n * {@link @firebase/app#FirebaseApp}. Initializes a new instance with default settings if\n * no instance exists or if the existing instance uses a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n\n  const hostAndPort = `${host}:${port}`;\n  const repo = db._repoInternal;\n  if (db._instanceStarted) {\n    // If the instance has already been started, then silenty fail if this function is called again\n    // with the same parameters. If the parameters differ then assert.\n    if (\n      hostAndPort === db._repoInternal.repoInfo_.host &&\n      deepEqual(options, repo.repoInfo_.emulatorOptions)\n    ) {\n      return;\n    }\n    fatal(\n      'connectDatabaseEmulator() cannot initialize or alter the emulator configuration after the database instance has started.'\n    );\n  }\n\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Workaround to get cookies in Firebase Studio\n  if (isCloudWorkstation(host)) {\n    void pingServer(host);\n    updateEmulatorBanner('Database', true);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, hostAndPort, options, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","<template>\n  <div>\n    <div v-for=\"(count, date) in dailyCounts\" :key=\"date\">\n      {{ date }}: {{ count }}명\n    </div>\n    방문자 수: <b>{{ visitorCount }}</b>\n  </div>\n</template>\n\n<script>\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getDatabase,\n  ref,\n  get,\n  runTransaction,\n  onValue,\n} from \"firebase/database\";\n\n// Firebase 설정\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDdvQbWbBmkDWSJeivHI01mJTVSnnYctTs\",\n  authDomain: \"alien-mood.firebaseapp.com\",\n  databaseURL: \"https://alien-mood-default-rtdb.firebaseio.com\",\n  projectId: \"alien-mood\",\n  storageBucket: \"alien-mood.firebasestorage.app\",\n  messagingSenderId: \"450783398597\",\n  appId: \"1:450783398597:web:70b656cd69807231633eac\",\n  measurementId: \"G-F6ZE81HPV7\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\n\nexport default {\n  name: \"VisitorCounter\",\n  data() {\n    return {\n      visitorCount: 0,\n      dailyCounts: {},\n    };\n  },\n  mounted() {\n    const countRef = ref(db, \"visitorCount\");\n    // 전체 방문자 카운트 증가\n    runTransaction(countRef, (current) => (current || 0) + 1);\n    onValue(countRef, (snapshot) => {\n      this.visitorCount = snapshot.val() || 0;\n    });\n\n    // 오늘 날짜 구하기 (YYYY-MM-DD)\n    const today = new Date().toISOString().slice(0, 10);\n    const todayRef = ref(db, `dailyCounts/${today}`);\n    // 오늘 방문자 카운트 증가\n    runTransaction(todayRef, (current) => (current || 0) + 1);\n\n    // 날짜별 전체 카운트 가져오기\n    const dailyCountsRef = ref(db, \"dailyCounts\");\n    onValue(dailyCountsRef, (snapshot) => {\n      if (snapshot.exists()) {\n        this.dailyCounts = snapshot.val();\n      }\n    });\n  },\n};\n</script>\n","import { render } from \"./VisitorCounter.vue?vue&type=template&id=3f237415\"\nimport script from \"./VisitorCounter.vue?vue&type=script&lang=js\"\nexport * from \"./VisitorCounter.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div style=\"position: relative; width: 100%; height: 100%\">\n    <!-- Fabric.js 캔버스 -->\n\n    <div>\n      <h2>방문자 수</h2>\n      <VisitorCounter></VisitorCounter>\n    </div>\n    <canvas\n      ref=\"canvas\"\n      style=\"border: 1px solid #ccc; width: 100%; height: 100%\"\n    ></canvas>\n\n    <!-- 하단 패널 -->\n    <div\n      class=\"edit-panel\"\n      :class=\"{ open: panelOpen }\"\n      @touchstart=\"onTouchStart\"\n      @touchmove=\"onTouchMove\"\n      @touchend=\"onTouchEnd\"\n    >\n      <div class=\"panel-handle\" @click=\"togglePanel\"></div>\n      <div class=\"panel-content\">\n        <!-- 이모티콘 추가 버튼 -->\n        <button\n          v-for=\"img in StickerList\"\n          :key=\"img.src\"\n          @click=\"addImage(img.src)\"\n          style=\"background: none; border: none; cursor: pointer\"\n        >\n          <img :src=\"img.src\" :alt=\"img.label\" width=\"32\" height=\"32\" />\n        </button>\n        <!-- 도형 추가 버튼 -->\n        <button @click=\"addRectangle\">도형 추가</button>\n        <button @click=\"addTextbox\">텍스트 추가</button>\n        <!-- 기본 이미지 교체 버튼 -->\n        <button\n          v-for=\"(img, idx) in backroundList\"\n          :key=\"'replace-img-' + idx\"\n          @click=\"replaceDefaultImage(img.src)\"\n        >\n          배경 이미지 변경 {{ idx + 1 }}\n        </button>\n        <!-- 파일 첨부 버튼 -->\n        <button @click=\"triggerFileInput\">이미지 첨부</button>\n        <input\n          ref=\"fileInput\"\n          type=\"file\"\n          accept=\"image/*\"\n          style=\"display: none\"\n          @change=\"onFileChange\"\n        />\n        <!-- SVG 색상 변경 버튼 (예시) -->\n        <div>\n          <button\n            v-for=\"(btn, idx) in colorButtonList\"\n            :key=\"btn.label + idx\"\n            @click=\"changeSvgColorsByIds(btn.colors)\"\n          >\n            {{ btn.label }}\n          </button>\n        </div>\n        <!-- 옷 종류별 아이콘 버튼 -->\n        <div style=\"display: flex; gap: 8px\">\n          <button\n            v-for=\"clothes in clothesList\"\n            :key=\"clothes.name\"\n            @click=\"selectClothes(clothes)\"\n            style=\"background: none; border: none; cursor: pointer\"\n          >\n            <img\n              :src=\"clothes.icon\"\n              :alt=\"clothes.name\"\n              width=\"48\"\n              height=\"48\"\n            />\n            <div>{{ clothes.name }}</div>\n          </button>\n        </div>\n        <!-- 옷 색상 옵션 버튼 (입힌 옷이 있을 때만) -->\n        <div v-if=\"selectedClothes\" style=\"margin: 12px 0\">\n          <button\n            v-for=\"(btn, idx) in selectedClothes.colorButtons\"\n            :key=\"btn.label + idx\"\n            @click=\"changeClothesColors(btn.targets, selectedClothes.name, idx)\"\n            style=\"display: flex; align-items: center; gap: 8px\"\n          >\n            <span\n              v-if=\"btn.mainColor\"\n              :style=\"{\n                display: 'inline-block',\n                width: '18px',\n                height: '18px',\n                borderRadius: '50%',\n                background: btn.mainColor,\n                border: '1px solid #aaa',\n              }\"\n            ></span>\n            {{ btn.label }}\n          </button>\n        </div>\n        <!-- 포즈 선택 버튼 -->\n        <div style=\"display: flex; gap: 8px; margin-bottom: 12px\">\n          <button\n            v-for=\"pose in ['인간', '인간팔']\"\n            :key=\"pose\"\n            :style=\"{\n              background: currentPose === pose ? '#00bfff' : '#eee',\n              color: currentPose === pose ? '#fff' : '#333',\n              border: '1px solid #ccc',\n              borderRadius: '6px',\n              padding: '6px 16px',\n              cursor: 'pointer',\n            }\"\n            @click=\"changePose(pose)\"\n          >\n            {{ pose }}\n          </button>\n        </div>\n        <!-- 캔버스 저장 버튼 -->\n        <button @click=\"saveCanvasAsImage\">이미지로 저장</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n// 이미지, SVG 등 리소스 import\nconst req = require.context(\"@/assets/image\", false, /\\.png$/);\nconst additionalImages = req.keys().map((key, idx) => ({\n  src: req(key),\n  label: `emoji${idx + 1}`,\n}));\n\nimport { ref, onMounted, markRaw } from \"vue\";\nimport {\n  Canvas,\n  Rect,\n  Image as FabricImage,\n  Control,\n  util,\n  controlsUtils,\n  loadSVGFromURL,\n  Group,\n  IText,\n} from \"fabric\";\n\nimport image4 from \"@/assets/image/backround/다가오는솔라스 (1).jpg\";\nimport image5 from \"@/assets/image/backround/다가오는솔라스 (2).jpg\";\nimport image6 from \"@/assets/image/backround/다가오는솔라스 (4).jpg\";\nimport deleteIcon from \"@/assets/image/ui/delete.svg\";\nimport rotateIcon from \"@/assets/image/ui/cached.svg\";\nimport resizeIcon from \"@/assets/image/ui/open_in_full.svg\";\nimport human from \"@/assets/image/인간.svg\";\nimport humanArm from \"@/assets/image/인간팔.svg\";\nimport VisitorCounter from \"@/components/VisitorCounter.vue\";\n\n// Vue CLI/webpack용 require.context 사용\nconst svgContext = require.context(\"@/assets/image\", true, /\\.(svg|png|jpg)$/);\n\nfunction getImageUrl(filename) {\n  try {\n    return svgContext(\"./\" + filename);\n  } catch {\n    return \"\";\n  }\n}\n\nimport backroundDataRaw from \"@/assets/data/backround.json\";\nconst backroundList = (backroundDataRaw.default || backroundDataRaw).map(\n  (item) => ({\n    ...item,\n    src: getImageUrl(item.src),\n  })\n);\nimport stickerDataRaw from \"@/assets/data/sticker.json\";\nconst StickerList = (stickerDataRaw.default || stickerDataRaw).map((item) => ({\n  ...item,\n  src: getImageUrl(item.src),\n}));\n\nimport clothesDataRaw from \"@/assets/data/clothes.json\";\nconst clothesData = clothesDataRaw.default || clothesDataRaw;\nconst clothesListRaw = clothesData.clothesList || [];\nconst clothesList = clothesListRaw.map((item) => ({\n  ...item,\n  icon: getImageUrl(item.icon),\n  svgUrl: Object.fromEntries(\n    Object.entries(item.svgUrl).map(([k, v]) => [k, getImageUrl(v)])\n  ),\n}));\n\nexport default {\n  data() {\n    return {\n      // Fabric.js 캔버스 인스턴스\n      canvas: null,\n      // 복원 중 여부\n      isRestoring: false,\n      // 배경 이미지 목록\n      backroundList,\n      // 교체 가능한 기본 이미지 오브젝트\n      defaultImageObject: null,\n      // 현재 포즈 상태\n      currentPose: \"인간\",\n      //스티커 목록\n      StickerList,\n      // 옷 목록 (포즈별 SVG, 위치, 색상 옵션 포함)\n      clothesList,\n      // 현재 선택된 옷 데이터\n      selectedClothes: null,\n      // { [clothes.name]: index }\n      selectedColorIndexes: {},\n      //아래 변수들은 터치패널을 위한 변수들\n      panelOpen: false,\n      touchStartY: 0,\n      touchMoveY: 0,\n    };\n  },\n  components: {\n    VisitorCounter,\n  },\n  methods: {\n    togglePanel() {\n      this.panelOpen = !this.panelOpen;\n    },\n    onTouchStart(e) {\n      this.touchStartY = e.touches[0].clientY;\n    },\n    onTouchMove(e) {\n      this.touchMoveY = e.touches[0].clientY;\n    },\n    onTouchEnd() {\n      const delta = this.touchStartY - this.touchMoveY;\n      if (delta > 30) {\n        // 위로 드래그: 열기\n        this.panelOpen = true;\n      } else if (delta < -30) {\n        // 아래로 드래그: 닫기\n        this.panelOpen = false;\n      }\n    },\n    async addHumanControlLayer() {\n      // 기존 컨트롤 레이어가 있으면 삭제\n      if (this.humanControlLayer) {\n        this.canvas.remove(this.humanControlLayer);\n        this.humanControlLayer = null;\n      }\n      if (!this.humanSvgGroup) return;\n\n      const bounds = this.humanSvgGroup.getBoundingRect();\n      const controlLayer = new Rect({\n        left: this.humanSvgGroup.left,\n        top: this.humanSvgGroup.top,\n        width: bounds.width,\n        height: bounds.height,\n        originX: this.humanSvgGroup.originX,\n        originY: this.humanSvgGroup.originY,\n        fill: \"rgba(0,0,0,0)\", // 완전 투명\n        // fill: \"rgba(0,0,255,0.2)\", // 디버깅용: 파란 반투명\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n        padding: 20,\n      });\n      this.addCharacterControls(controlLayer);\n      this.canvas.add(controlLayer);\n      this.humanControlLayer = controlLayer;\n\n      // 컨트롤 레이어 이동 시 캐릭터/옷 동기화\n      controlLayer.on(\"moving\", () => {\n        this.humanSvgGroup.set({\n          left: controlLayer.left,\n          top: controlLayer.top,\n        });\n        if (this.clothesSvgGroup) {\n          const pos = this.selectedClothes?.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            left: controlLayer.left + pos.left * controlLayer.scaleX,\n            top: controlLayer.top + pos.top * controlLayer.scaleY,\n          });\n        }\n        this.canvas.renderAll();\n      });\n\n      // 컨트롤 레이어 스케일 시 캐릭터/옷 동기화\n      controlLayer.on(\"scaling\", () => {\n        this.humanSvgGroup.set({\n          scaleX: controlLayer.scaleX,\n          scaleY: controlLayer.scaleY,\n          left: controlLayer.left,\n          top: controlLayer.top,\n        });\n        if (this.clothesSvgGroup) {\n          const pos = this.selectedClothes?.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            scaleX: controlLayer.scaleX,\n            scaleY: controlLayer.scaleY,\n            left: controlLayer.left + pos.left * controlLayer.scaleX,\n            top: controlLayer.top + pos.top * controlLayer.scaleY,\n          });\n        }\n        this.canvas.renderAll();\n      });\n\n      // ★ 컨트롤 레이어 회전 시 캐릭터/옷 동기화\n      controlLayer.on(\"rotating\", () => {\n        this.humanSvgGroup.set({\n          angle: controlLayer.angle,\n        });\n        if (this.clothesSvgGroup) {\n          this.clothesSvgGroup.set({\n            angle: controlLayer.angle,\n          });\n        }\n        this.canvas.renderAll();\n      });\n\n      // // 캐릭터와 옷은 직접 선택 불가\n      // this.humanSvgGroup.set({ selectable: false, evented: false });\n      // if (this.clothesSvgGroup) {\n      //   this.clothesSvgGroup.set({ selectable: false, evented: false });\n      // }\n\n      // 항상 z-index 정렬\n      this.canvas.renderAll();\n    },\n\n    // 포즈에 따라 인간 SVG를 캔버스에 추가\n    async addHumanSvg() {\n      // 기존 인간 SVG가 있으면 삭제\n      let prevLeft = 100;\n      let prevTop = this.canvas.height / 2;\n      let prevScaleX = 1;\n      let prevScaleY = 1;\n      let prevAngle = 0;\n      if (this.humanSvgGroup) {\n        // 기존 중심, 스케일, 각도 기억\n        prevLeft = this.humanSvgGroup.left;\n        prevTop = this.humanSvgGroup.top;\n        prevScaleX = this.humanSvgGroup.scaleX;\n        prevScaleY = this.humanSvgGroup.scaleY;\n        prevAngle = this.humanSvgGroup.angle;\n        this.canvas.remove(this.humanSvgGroup);\n        this.humanSvgGroup = null;\n      }\n      const humanSvgUrl = this.currentPose === \"인간팔\" ? humanArm : human;\n      const loadedSVG = await loadSVGFromURL(humanSvgUrl);\n      let svgGroup = util.groupSVGElements(loadedSVG.objects);\n      svgGroup.set({\n        left: prevLeft,\n        top: prevTop,\n        originX: \"center\",\n        originY: \"center\",\n        scaleX: prevScaleX,\n        scaleY: prevScaleY,\n        angle: prevAngle,\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n        lockMovementX: false,\n        lockMovementY: false,\n        lockScalingX: false,\n        lockScalingY: false,\n        lockRotation: false,\n      });\n\n      this.addCharacterControls(svgGroup);\n      this.canvas.add(svgGroup);\n      this.humanSvgGroup = svgGroup;\n      this.addHumanMoveListener();\n      await this.addHumanControlLayer();\n      this.canvas.renderAll();\n    },\n    // 옷 선택 시 캔버스에 추가 (포즈별 SVG/위치 적용)\n    async selectClothes(clothes) {\n      if (this.clothesSvgGroup) {\n        this.canvas.remove(this.clothesSvgGroup);\n      }\n      const svgUrl =\n        typeof clothes.svgUrl === \"object\"\n          ? clothes.svgUrl[this.currentPose] || clothes.svgUrl[\"인간\"]\n          : clothes.svgUrl;\n      const loadedSVG = await loadSVGFromURL(svgUrl);\n      let svgGroup = util.groupSVGElements(loadedSVG.objects);\n\n      // 인간 SVG 기준 + 옷 position 값 더해서 위치/스케일 맞추기\n      const human = this.humanSvgGroup;\n      const pos = clothes.position?.[this.currentPose] || { left: 0, top: 0 };\n\n      // 옷 그룹을 인간과 완전히 동일하게 맞춤\n      svgGroup.set({\n        left: human.left,\n        top: human.top,\n        originX: human.originX,\n        originY: human.originY,\n        scaleX: human.scaleX,\n        scaleY: human.scaleY,\n        angle: human.angle,\n        selectable: false,\n        evented: false,\n        hasControls: false,\n        hasBorders: false,\n        lockMovementX: true,\n        lockMovementY: true,\n        lockScalingX: true,\n        lockScalingY: true,\n        lockRotation: true,\n      });\n\n      // 옷 내부 오브젝트에만 offset 적용\n      svgGroup.forEachObject((obj) => {\n        obj.left += pos.left;\n        obj.top += pos.top;\n      });\n      svgGroup.setCoords();\n      this.canvas.add(svgGroup);\n      this.clothesSvgGroup = svgGroup;\n      this.selectedClothes = clothes;\n      this.canvas.renderAll();\n\n      // 마지막으로 선택한 색상 옵션 적용\n      const idx = this.selectedColorIndexes[clothes.name] ?? 0;\n      const btn = clothes.colorButtons[idx];\n      if (btn) {\n        this.changeClothesColors(btn.targets, clothes.name, idx);\n      }\n      await this.addHumanControlLayer();\n    },\n    // 인간을 움직일 때 옷도 같이 움직이게 이벤트 연결\n    addHumanMoveListener() {\n      if (!this.humanSvgGroup) return;\n      this.humanSvgGroup.set({ selectable: true, evented: true });\n\n      // 이동 시 옷 따라오기\n      this.humanSvgGroup.on(\"moving\", () => {\n        if (this.clothesSvgGroup && this.selectedClothes) {\n          const pos = this.selectedClothes.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            left:\n              this.humanSvgGroup.left + pos.left * this.humanSvgGroup.scaleX,\n            top: this.humanSvgGroup.top + pos.top * this.humanSvgGroup.scaleY,\n          });\n          this.canvas.renderAll();\n        }\n      });\n\n      // 크기 조절(스케일) 시 옷도 같이 스케일\n      this.humanSvgGroup.on(\"scaling\", () => {\n        if (this.clothesSvgGroup && this.selectedClothes) {\n          // scaleX, scaleY 동기화\n          this.clothesSvgGroup.set({\n            scaleX: this.humanSvgGroup.scaleX,\n            scaleY: this.humanSvgGroup.scaleY,\n          });\n          // 위치도 스케일에 맞게 보정\n          const pos = this.selectedClothes.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            left:\n              this.humanSvgGroup.left + pos.left * this.humanSvgGroup.scaleX,\n            top: this.humanSvgGroup.top + pos.top * this.humanSvgGroup.scaleY,\n          });\n          this.canvas.renderAll();\n        }\n      });\n    },\n    // 포즈 변경 시 인간/옷 SVG 갱신\n    async changePose(pose) {\n      this.currentPose = pose;\n      if (this.humanSvgGroup) this.canvas.remove(this.humanSvgGroup);\n      if (this.clothesSvgGroup) this.canvas.remove(this.clothesSvgGroup);\n      await this.addHumanSvg();\n      this.addCharacterControls(this.humanSvgGroup);\n      if (this.selectedClothes) {\n        await this.selectClothes(this.selectedClothes);\n      }\n      await this.addHumanControlLayer();\n    },\n    // 옷 SVG 색상 변경 (id/class 모두 지원, 재귀 순회)\n    changeClothesColors(targets, clothesName, idx) {\n      if (!this.clothesSvgGroup) return;\n      // 색상 적용\n      function changeRecursive(obj) {\n        if (obj._objects) {\n          obj._objects.forEach((child) => changeRecursive(child));\n        } else {\n          targets.forEach(({ type, value, color }) => {\n            if (\n              (type === \"id\" &&\n                (obj.id === value || (obj.get && obj.get(\"id\") === value))) ||\n              (type === \"class\" &&\n                (obj.className === value ||\n                  (obj.get && obj.get(\"class\") === value)))\n            ) {\n              obj.set(\"fill\", color);\n            }\n          });\n        }\n      }\n      changeRecursive(this.clothesSvgGroup);\n      this.canvas.requestRenderAll();\n\n      // 선택된 색상 인덱스 저장\n      this.selectedColorIndexes = {\n        ...this.selectedColorIndexes,\n        [clothesName]: idx,\n      };\n    },\n\n    // 캔버스 이미지를 파일로 저장 (파일명 입력 가능, 기본값: 오늘기분외계인)\n    saveCanvasAsImage() {\n      let filename = prompt(\"저장할 파일 이름을 입력하세요.\", \"오늘기분외계인\");\n      if (filename === null) return; // 취소 시 저장하지 않음\n      if (!filename || filename.trim() === \"\") {\n        filename = \"오늘기분외계인\";\n      }\n      if (!filename.endsWith(\".jpg\") && !filename.endsWith(\".png\")) {\n        filename += \".jpg\";\n      }\n      const dataUrl = this.canvas.toDataURL({\n        format: \"jpg\",\n        quality: 1.0,\n      });\n      const link = document.createElement(\"a\");\n      link.href = dataUrl;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n    // 일반 SVG 색상 변경 (id 기준)\n    changeSvgColorsByIds(idColorList) {\n      if (!this.svgGroup) return;\n      this.svgGroup.forEachObject((obj) => {\n        idColorList.forEach(({ id, color }) => {\n          if (obj.id === id || obj.get(\"id\") === id) {\n            obj.set(\"fill\", color);\n          }\n        });\n      });\n      this.canvas.requestRenderAll();\n    },\n    // 커스텀 컨트롤(삭제/회전/크기조절) 렌더링 함수들\n    renderDeleteIcon(ctx, left, top, _styleOverride, fabricObject) {\n      const size = 28;\n      const padding = 16;\n      const hitSize = size + padding * 2;\n      const img = new Image();\n      img.src = deleteIcon;\n      ctx.save();\n      ctx.translate(left, top);\n      ctx.rotate(util.degreesToRadians(fabricObject.angle));\n      ctx.globalAlpha = 0.7;\n      ctx.drawImage(img, -size / 2, -size / 2, size, size);\n      ctx.globalAlpha = 0.01;\n      ctx.beginPath();\n      ctx.arc(0, 0, hitSize / 2, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.globalAlpha = 1.0;\n      ctx.restore();\n    },\n    renderRotateIcon(ctx, left, top, _styleOverride, fabricObject) {\n      const size = 28;\n      const padding = 16;\n      const hitSize = size + padding * 2;\n      const img = new Image();\n      img.src = rotateIcon;\n      ctx.save();\n      ctx.translate(left, top);\n      ctx.rotate(util.degreesToRadians(fabricObject.angle));\n      ctx.globalAlpha = 0.7;\n      ctx.drawImage(img, -size / 2, -size / 2, size, size);\n      ctx.globalAlpha = 0.01;\n      ctx.beginPath();\n      ctx.arc(0, 0, hitSize / 2, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.globalAlpha = 1.0;\n      ctx.restore();\n    },\n    renderResizeIcon(ctx, left, top, _styleOverride, fabricObject) {\n      const size = 24;\n      const padding = 16;\n      const hitSize = size + padding * 2;\n      const img = new Image();\n      img.src = resizeIcon;\n      ctx.save();\n      ctx.translate(left, top);\n      ctx.rotate(util.degreesToRadians(fabricObject.angle));\n      ctx.globalAlpha = 0.7;\n      ctx.drawImage(img, -size / 2, -size / 2, size, size);\n      ctx.globalAlpha = 0.01;\n      ctx.beginPath();\n      ctx.arc(0, 0, hitSize / 2, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.globalAlpha = 1.0;\n      ctx.restore();\n    },\n    // 오브젝트 삭제 핸들러\n    deleteObject(_eventData, transform) {\n      const canvasInstance = transform.target.canvas;\n      // 텍스트에 배경이 연결되어 있으면 같이 삭제\n      if (\n        transform.target.type === \"i-text\" &&\n        transform.target._bgRect &&\n        canvasInstance.contains(transform.target._bgRect)\n      ) {\n        canvasInstance.remove(transform.target._bgRect);\n      }\n      canvasInstance.remove(transform.target);\n      canvasInstance.requestRenderAll();\n    },\n    addCharacterControls(obj) {\n      if (obj.controls.deleteControl) delete obj.controls.deleteControl;\n      obj.setControlsVisibility({\n        tl: false,\n        tr: false,\n        bl: false,\n        br: false,\n        mt: false,\n        mb: false,\n        ml: false,\n        mr: false,\n        mtr: true, // 회전 핸들\n        deleteControl: false, // 삭제 버튼 없음\n        rotateControl: true, // 커스텀 회전\n        resizeControl: true, // 커스텀 리사이즈\n      });\n\n      obj.controls.rotateControl = new Control({\n        x: 0,\n        y: -0.5,\n        offsetY: -40,\n        cursorStyle: \"crosshair\",\n        render: this.renderRotateIcon,\n        cornerSize: 28,\n        actionHandler: controlsUtils.rotationWithSnapping,\n        hitbox: { width: 60, height: 60 },\n      });\n      obj.controls.resizeControl = new Control({\n        x: 0.5,\n        y: 0.5,\n        cursorStyle: \"se-resize\",\n        render: this.renderResizeIcon,\n        cornerSize: 28,\n        actionHandler: controlsUtils.scalingEqually,\n        hitbox: { width: 60, height: 60 },\n      });\n\n      obj.set({\n        cornerColor: \"#00000000\",\n        cornerSize: 18,\n        cornerStyle: \"circle\",\n        borderColor: \"#00bfff\",\n        borderDashArray: [6, 4],\n        transparentCorners: false,\n        hasBorders: false,\n        hasControls: false,\n      });\n\n      obj.on(\"selected\", () => {\n        obj.set({ hasBorders: true, hasControls: true });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: false, // 삭제 버튼 없음\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n      obj.on(\"deselected\", () => {\n        obj.set({ hasBorders: false, hasControls: false });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: false, // 삭제 버튼 없음\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n    },\n    // 커스텀 컨트롤 추가\n    addCustomControls(obj) {\n      obj.setControlsVisibility({\n        tl: false,\n        tr: false,\n        bl: false,\n        br: false,\n        mt: false,\n        mb: false,\n        ml: false,\n        mr: false,\n        mtr: true,\n        deleteControl: true,\n        rotateControl: true,\n        resizeControl: true,\n      });\n\n      obj.controls.deleteControl = new Control({\n        x: 0.5,\n        y: -0.5,\n        cursorStyle: \"pointer\",\n        mouseUpHandler: this.deleteObject,\n        render: this.renderDeleteIcon,\n        cornerSize: 28,\n        hitbox: { width: 60, height: 60 },\n      });\n      obj.controls.rotateControl = new Control({\n        x: 0,\n        y: -0.5,\n        offsetY: -40,\n        cursorStyle: \"crosshair\",\n        render: this.renderRotateIcon,\n        cornerSize: 28,\n        actionHandler: controlsUtils.rotationWithSnapping,\n        hitbox: { width: 60, height: 60 },\n      });\n      obj.controls.resizeControl = new Control({\n        x: 0.5,\n        y: 0.5,\n        cursorStyle: \"se-resize\",\n        render: this.renderResizeIcon,\n        cornerSize: 28,\n        actionHandler: controlsUtils.scalingEqually,\n        hitbox: { width: 60, height: 60 },\n      });\n\n      obj.set({\n        cornerColor: \"#00000000\",\n        cornerSize: 18,\n        cornerStyle: \"circle\",\n        borderColor: \"#00bfff\",\n        borderDashArray: [6, 4],\n        transparentCorners: false,\n        hasBorders: false,\n        hasControls: false,\n        // editable: true, // ← 이 줄은 필요 없음!\n      });\n\n      obj.on(\"selected\", () => {\n        obj.set({ hasBorders: true, hasControls: true });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: true,\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n      obj.on(\"deselected\", () => {\n        obj.set({ hasBorders: false, hasControls: false });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: true,\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n    },\n    // 도형(사각형) 추가\n    addRectangle() {\n      const rect = new Rect({\n        left: this.canvas.width / 2,\n        top: this.canvas.height / 2,\n        fill: \"#ffe066\",\n        width: 200,\n        height: 200,\n        objectCaching: false,\n        originX: \"center\",\n        originY: \"center\",\n        centeredRotation: true,\n        padding: 16,\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n      });\n      this.addCustomControls(rect);\n      this.canvas.add(rect);\n      this.canvas.setActiveObject(rect);\n      this.canvas.renderAll();\n    },\n    // 텍스트 추가\n    addTextbox() {\n      const text = \"1.방문자 카운팅 \";\n      const padding = 24;\n      const textbox = new IText(text, {\n        left: this.canvas.width / 2,\n        top: this.canvas.height / 2,\n        originX: \"center\",\n        originY: \"center\",\n        fontSize: 32,\n        fill: \"#222\",\n        fontFamily: \"sans-serif\",\n        editable: true,\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n        backgroundColor: \"transparent\",\n        textAlign: \"center\",\n      });\n\n      // 배경 사각형 생성\n      const bgRect = new Rect({\n        left: textbox.left,\n        top: textbox.top,\n        originX: \"center\",\n        originY: \"center\",\n        width: textbox.width + padding * 2,\n        height: textbox.height + padding * 2,\n        rx: 18,\n        ry: 18,\n        fill: \"#fffbe6\",\n        selectable: false,\n        evented: false,\n        hasBorders: false,\n        hasControls: false,\n      });\n\n      // 텍스트에 배경 참조 저장\n      textbox._bgRect = bgRect;\n\n      this.canvas.add(bgRect);\n      this.canvas.add(textbox);\n\n      // 항상 텍스트 바로 아래에 배경이 오도록 순서 조정 함수\n      const ensureBgBelowText = () => {\n        const objs = this.canvas.getObjects();\n        const bgIdx = objs.indexOf(bgRect);\n        const textIdx = objs.indexOf(textbox);\n        if (bgIdx > -1 && textIdx > -1 && bgIdx !== textIdx - 1) {\n          objs.splice(bgIdx, 1);\n          objs.splice(textIdx, 0, bgRect);\n          this.canvas._objects = objs;\n        }\n      };\n\n      // 텍스트 이동/수정/스케일/회전 시 배경도 같이 이동 및 크기 조정\n      const updateBgRect = () => {\n        textbox.setCoords();\n        bgRect.set({\n          width: textbox.width * textbox.scaleX + padding * 2,\n          height: textbox.height * textbox.scaleY + padding * 2,\n          left: textbox.left,\n          top: textbox.top,\n          scaleX: 1,\n          scaleY: 1,\n          angle: textbox.angle,\n        });\n        ensureBgBelowText();\n        this.canvas.requestRenderAll();\n      };\n\n      // 이벤트 연결\n      textbox.on(\"changed\", updateBgRect);\n      textbox.on(\"scaling\", updateBgRect);\n      textbox.on(\"moving\", updateBgRect);\n      textbox.on(\"rotating\", updateBgRect);\n\n      // 최초 위치/순서 보장\n      ensureBgBelowText();\n\n      this.addCustomControls(textbox);\n      this.canvas.setActiveObject(textbox);\n      this.canvas.renderAll();\n    },\n\n    // 이미지 추가 (최대 3개)\n    addImage(imageSrc) {\n      const img = new window.Image();\n      img.src = imageSrc;\n      img.onload = () => {\n        let width = img.width;\n        let height = img.height;\n        // 가로가 400px을 넘으면 비율 유지하며 축소\n        if (width > 400) {\n          const scale = 400 / width;\n          width = 400;\n          height = height * scale;\n        }\n        const fabricImage = new FabricImage(img, {\n          left: this.canvas.width / 2,\n          top: this.canvas.height / 2,\n          originX: \"center\",\n          originY: \"center\",\n          width,\n          height,\n          selectable: true,\n          evented: true,\n          hasControls: false,\n          hasBorders: false,\n        });\n        this.addCustomControls(fabricImage);\n        this.canvas.add(fabricImage);\n        this.canvas.setActiveObject(fabricImage);\n        this.canvas.renderAll();\n      };\n    },\n    // 파일 첨부로 이미지 추가\n    onFileChange(event) {\n      const files = event.target.files;\n      if (!files || files.length === 0) return;\n\n      // \"사용자가 추가한 이미지\"만 카운트 (selectable !== false)\n      let imageCount = this.canvas\n        .getObjects()\n        .filter(\n          (obj) => obj.type === \"image\" && obj.selectable !== false\n        ).length;\n\n      if (imageCount >= 3) {\n        alert(\"이미지는 최대 3개까지만 추가할 수 있습니다.\");\n        return;\n      }\n\n      // 항상 첫 번째 파일만 추가\n      const file = files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const img = new window.Image();\n        img.src = e.target.result;\n        img.onload = () => {\n          let width = img.width;\n          let height = img.height;\n          let scale = 1;\n          // 가로가 400px을 넘으면 비율 유지하며 축소 (scale만 조정)\n          if (width > 400) {\n            scale = 400 / width;\n          }\n          const fabricImage = new FabricImage(img, {\n            left: this.canvas.width / 2,\n            top: this.canvas.height / 2,\n            originX: \"center\",\n            originY: \"center\",\n            // 원본 width/height 유지\n            width: width,\n            height: height,\n            scaleX: scale,\n            scaleY: scale,\n            selectable: true,\n            evented: true,\n            hasControls: false,\n            hasBorders: false,\n          });\n          this.addCustomControls(fabricImage);\n          this.canvas.add(fabricImage);\n          this.canvas.setActiveObject(fabricImage);\n          this.canvas.renderAll();\n        };\n      };\n      reader.readAsDataURL(file);\n    },\n    // 기본 이미지 교체\n    replaceDefaultImage(newImageSrc) {\n      if (!this.defaultImageObject) return;\n      const img = new window.Image();\n      img.src = newImageSrc;\n      img.onload = () => {\n        this.defaultImageObject.setElement(img);\n        this.defaultImageObject.set({\n          width: 200,\n          height: 200,\n          scaleX: 1,\n          scaleY: 1,\n        });\n        this.canvas.renderAll();\n      };\n    },\n    // 파일 첨부 input 트리거\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n\n    // 캔버스 초기화 및 기본 오브젝트 추가\n    async initializeCanvas() {\n      this.canvas = markRaw(\n        new Canvas(this.$refs.canvas, {\n          width: window.innerWidth,\n          height: window.innerHeight,\n          selection: true,\n          backgroundColor: \"#ffffff\",\n        })\n      );\n      this.canvas.on(\"after:render\", () => {\n        const ctx = this.canvas.getContext();\n        const objs = this.canvas.getObjects();\n        objs.forEach((obj, idx) => {\n          // 오브젝트의 좌상단 좌표 계산\n          const p = obj.getPointByOrigin\n            ? obj.getPointByOrigin(\"left\", \"top\")\n            : { x: obj.left, y: obj.top };\n          ctx.save();\n          ctx.font = \"bold 18px sans-serif\";\n          ctx.fillStyle = \"red\";\n          ctx.strokeStyle = \"white\";\n          ctx.lineWidth = 3;\n          ctx.strokeText(idx + \"\", p.x + 8, p.y + 24);\n          ctx.fillText(idx + \"\", p.x + 8, p.y + 24);\n          ctx.restore();\n        });\n      });\n      // 기본 이미지 추가\n      const img = new window.Image();\n      img.src = this.backroundList[0].src;\n      img.onload = async () => {\n        const fabricImage = new FabricImage(img, {\n          left: this.canvas.width / 2,\n          top: this.canvas.height / 2,\n          originX: \"center\",\n          originY: \"center\",\n          width: 200,\n          height: 200,\n          selectable: false,\n          evented: false,\n          hasControls: false,\n          hasBorders: false,\n          lockMovementX: true,\n          lockMovementY: true,\n          lockScalingX: true,\n          lockScalingY: true,\n          lockRotation: true,\n        });\n        this.canvas.add(fabricImage);\n        this.defaultImageObject = fabricImage;\n        this.canvas.renderAll();\n\n        // 기본 이미지가 추가된 후 인간 추가\n        await this.addHumanSvg();\n        await this.addHumanControlLayer();\n      };\n\n      // mouse:up 이벤트는 한 번만 등록!\n      this.canvas.on(\"mouse:down\", (opt) => {\n        const target = this.canvas.getActiveObject();\n        const objs = this.canvas.getObjects();\n\n        // 1. 기본 이미지는 항상 맨 아래\n        if (this.defaultImageObject) {\n          const idx = objs.indexOf(this.defaultImageObject);\n          if (idx > -1) {\n            objs.splice(idx, 1);\n            objs.unshift(this.defaultImageObject);\n          }\n        }\n\n        // 캐릭터(인간 SVG 그룹)만 클릭 시 셋을 동시에 맨 위로!\n        if (target === this.humanSvgGroup) {\n          [\n            this.humanSvgGroup,\n            this.humanControlLayer,\n            this.clothesSvgGroup,\n          ].forEach((obj) => {\n            const idx = objs.indexOf(obj);\n            if (idx > -1) objs.splice(idx, 1);\n          });\n          if (this.humanSvgGroup) objs.push(this.humanSvgGroup);\n          if (this.humanControlLayer) objs.push(this.humanControlLayer);\n          if (this.clothesSvgGroup) objs.push(this.clothesSvgGroup);\n\n          this.canvas._objects = objs;\n          this.canvas.renderAll();\n          return;\n        }\n\n        // 텍스트(IText) 클릭 시 배경과 텍스트를 같이 맨 위로!\n        if (target && target.type === \"i-text\" && target._bgRect) {\n          // 둘 다 배열에서 제거\n          [target._bgRect, target].forEach((obj) => {\n            const idx = objs.indexOf(obj);\n            if (idx > -1) objs.splice(idx, 1);\n          });\n          // 반드시 배경 → 텍스트 순서로 push\n          objs.push(target._bgRect);\n          objs.push(target);\n\n          this.canvas._objects = objs;\n          this.canvas.renderAll();\n          return;\n        }\n\n        // 2. 캐릭터 3종 중 하나라도 클릭하면 셋을 동시에 맨 위로!\n        const isHumanPart = [\n          this.humanControlLayer,\n          this.humanSvgGroup,\n          this.clothesSvgGroup,\n        ].includes(target);\n\n        if (isHumanPart) {\n          [\n            this.humanSvgGroup,\n            this.humanControlLayer,\n            this.clothesSvgGroup,\n          ].forEach((obj) => {\n            const idx = objs.indexOf(obj);\n            if (idx > -1) objs.splice(idx, 1);\n          });\n          if (this.humanSvgGroup) objs.push(this.humanSvgGroup);\n          if (this.humanControlLayer) objs.push(this.humanControlLayer);\n          if (this.clothesSvgGroup) objs.push(this.clothesSvgGroup);\n        } else if (\n          target &&\n          ![\n            this.humanControlLayer,\n            this.humanSvgGroup,\n            this.clothesSvgGroup,\n            this.defaultImageObject,\n          ].includes(target)\n        ) {\n          const idx = objs.indexOf(target);\n          if (idx > -1) {\n            objs.splice(idx, 1);\n            objs.push(target);\n          }\n        }\n\n        this.canvas._objects = objs;\n        this.canvas.renderAll();\n      });\n    },\n  },\n  // 컴포넌트 마운트 시 캔버스 초기화\n  mounted: async function () {\n    await this.initializeCanvas();\n  },\n};\n</script>\n\n<style scoped>\n.edit-panel {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 60px; /* 닫힌 상태 */\n  background: #fff;\n  border-top-left-radius: 18px;\n  border-top-right-radius: 18px;\n  box-shadow: 0 -2px 12px rgba(0, 0, 0, 0.12);\n  transition: height 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 2000;\n  overflow: hidden;\n  touch-action: none;\n}\n.edit-panel.open {\n  height: 40vh; /* 열린 상태 */\n}\n.panel-handle {\n  width: 48px;\n  height: 6px;\n  background: #ccc;\n  border-radius: 3px;\n  margin: 10px auto 12px auto;\n  cursor: pointer;\n  touch-action: none;\n}\n.panel-content {\n  padding: 0 16px 16px 16px;\n  overflow-y: auto;\n  height: calc(60vh - 32px);\n}\n</style>\n","import { render } from \"./TestFinal.vue?vue&type=template&id=e0097ad6&scoped=true\"\nimport script from \"./TestFinal.vue?vue&type=script&lang=js\"\nexport * from \"./TestFinal.vue?vue&type=script&lang=js\"\n\nimport \"./TestFinal.vue?vue&type=style&index=0&id=e0097ad6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e0097ad6\"]])\n\nexport default __exports__","<template>\n  <div\n    class=\"mobile-wrapper relative bg-white max-w-[430px] mx-auto min-h-screen select-none\"\n    @touchstart=\"onTouchStart\"\n    @touchmove=\"onTouchMove\"\n    @touchend=\"onTouchEnd\"\n  >\n    <canvas\n      ref=\"canvas\"\n      style=\"border: 1px solid #ccc; width: 100%; height: 100%\"\n    ></canvas>\n    <div v-if=\"!hideUi\">\n      <!-- 오버레이: 패널이 열려 있을 때만 표시 -->\n      <div\n        v-if=\"panelOpen\"\n        class=\"fixed inset-0 z-10\"\n        style=\"background: transparent\"\n        @click=\"panelOpen = false\"\n      ></div>\n      <!-- 패널: 네비 위에서 바닥에 딱 붙어서 열림 -->\n      <div\n        class=\"edit-panel z-0 fixed pt-[28px] left-1/2 bottom-0 rounded-t-[28px] w-full max-w-[430px] -translate-x-1/2 bg-black-b700 flex flex-col transition-all duration-300\"\n        :style=\"{\n          height: panelOpen ? '282px' : '0px',\n          transform: panelOpen ? 'translate(-50%, 0)' : 'translate(-50%, 100%)', // 닫힐 때 아래로 내려감\n          overflow: panelOpen ? 'visible' : 'hidden',\n          pointerEvents: panelOpen ? 'auto' : 'none',\n        }\"\n      >\n        <div\n          class=\"panel-handle absolute left-1/2 top-[12px] w-[30px] h-[4px] rounded-full cursor-pointer bg-black-b200 -translate-x-1/2 select-none\"\n          @click=\"togglePanel\"\n        ></div>\n        <div\n          class=\"panel-content w-full h-full px-[30px] pb-[12px] flex-1 min-h-0 overflow-y-auto\"\n          :style=\"{ overflowY: panelOpen ? 'auto' : 'hidden' }\"\n        >\n          <!-- 탭별 내용 -->\n          <div v-if=\"activePanelTab === 0\" class=\"h-full px-[30px]\">\n            <div\n              class=\"flex flex-wrap gap-[15px] h-full pb-[56px] custom-scrollbar-hide\"\n              style=\"box-sizing: border-box\"\n            >\n              <div\n                v-for=\"(img, idx) in backroundList\"\n                :key=\"'replace-img-' + idx\"\n                class=\"flex-shrink-0 bg-red-50\"\n                :style=\"{\n                  width: 'calc((100% - 30px) / 3)', // (전체 - 2*15px gap) / 3\n                }\"\n              >\n                <button\n                  @click=\"replaceDefaultImage(img.src)\"\n                  class=\"w-full h-full aspect-square overflow-hidden\"\n                  style=\"padding: 0\"\n                >\n                  <img\n                    :src=\"img.src\"\n                    :alt=\"'배경 ' + (idx + 1)\"\n                    class=\"w-full h-full object-cover\"\n                    draggable=\"false\"\n                  />\n                </button>\n              </div>\n            </div>\n          </div>\n          <div v-else-if=\"activePanelTab === 1\">\n            <div class=\"avatar-panel\">\n              <!-- 탭 네비게이션 -->\n              <div\n                class=\"flex gap-[34px] h-[32px] leading-[18px] text-[18px] border-b-[1px] border-black-b200\"\n              >\n                <button\n                  v-for=\"(tab, idx) in avatarTabs\"\n                  :key=\"tab\"\n                  :class=\"[\n                    'flex-1 py-2',\n                    activeAvatarTab === idx\n                      ? 'text-blue-500 border-b-2 border-blue-500'\n                      : 'text-gray-500',\n                  ]\"\n                  @click=\"activeAvatarTab = idx\"\n                >\n                  {{ tab }}\n                </button>\n              </div>\n              <!-- 탭별 내용 -->\n              <div class=\"avatar-tab-content\">\n                <div v-if=\"activeAvatarTab === 0\">\n                  <!-- 자세(포즈) 관련 내용 -->\n                  <p>자세(포즈) 선택 영역</p>\n                  <!-- 포즈 선택 버튼 -->\n                  <div style=\"display: flex; gap: 8px\">\n                    <button\n                      v-for=\"pose in ['인간', '인간팔']\"\n                      :key=\"pose\"\n                      :style=\"{\n                        background: currentPose === pose ? '#00bfff' : '#eee',\n                        color: currentPose === pose ? '#fff' : '#333',\n                        border: '1px solid #ccc',\n                        borderRadius: '6px',\n                        padding: '6px 16px',\n                        cursor: 'pointer',\n                      }\"\n                      @click=\"changePose(pose)\"\n                    >\n                      {{ pose }}\n                    </button>\n                  </div>\n                </div>\n                <div v-else-if=\"activeAvatarTab === 1\">\n                  <!-- 얼굴형 관련 내용 -->\n                  <p>얼굴형 선택 영역</p>\n                </div>\n                <div v-else-if=\"activeAvatarTab === 2\">\n                  <!-- 머리 관련 내용 -->\n                  <p>머리 선택 영역</p>\n                </div>\n                <div v-else-if=\"activeAvatarTab === 3\">\n                  <!-- 눈 관련 내용 -->\n                  <p>눈 선택 영역</p>\n                </div>\n                <div v-else-if=\"activeAvatarTab === 4\">\n                  <!-- 입 관련 내용 -->\n                  <p>입 선택 영역</p>\n                </div>\n                <div v-else-if=\"activeAvatarTab === 5\">\n                  <!-- 옷/색상/포즈 등 -->\n                  <!-- 옷 종류별 아이콘 버튼 -->\n                  <div style=\"display: flex; gap: 8px\">\n                    <button\n                      v-for=\"clothes in clothesList\"\n                      :key=\"clothes.name\"\n                      @click=\"selectClothes(clothes)\"\n                      style=\"background: none; border: none; cursor: pointer\"\n                    >\n                      <img\n                        :src=\"clothes.icon\"\n                        :alt=\"clothes.name\"\n                        width=\"48\"\n                        height=\"48\"\n                      />\n                      <div>{{ clothes.name }}</div>\n                    </button>\n                  </div>\n                  <!-- 옷 색상 옵션 버튼 (입힌 옷이 있을 때만) -->\n                  <div v-if=\"selectedClothes\" style=\"margin: 12px 0\">\n                    <button\n                      v-for=\"(btn, idx) in selectedClothes.colorButtons\"\n                      :key=\"btn.label + idx\"\n                      @click=\"\n                        changeClothesColors(\n                          btn.targets,\n                          selectedClothes.name,\n                          idx\n                        )\n                      \"\n                      style=\"display: flex; align-items: center; gap: 8px\"\n                    >\n                      <span\n                        v-if=\"btn.mainColor\"\n                        :style=\"{\n                          display: 'inline-block',\n                          width: '18px',\n                          height: '18px',\n                          borderRadius: '50%',\n                          background: btn.mainColor,\n                          border: '1px solid #aaa',\n                        }\"\n                      ></span>\n                      {{ btn.label }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-else-if=\"activePanelTab === 2\">\n            <div\n              class=\"imgBox w-full h-[32px] text-center border-b text-black-b70 border-black-b600\"\n            >\n              <span>{{ imageCount }}/3</span>\n            </div>\n            <div class=\"flex gap-[15px] mt-2\">\n              <!-- 미리보기 썸네일 -->\n              <div\n                v-for=\"(img, idx) in uploadedImages\"\n                :key=\"img.fabricObj.id || img.url\"\n                class=\"w-[90px] h-[90px] bg-black-b600 rounded-[2px] flex items-center justify-center relative\"\n                style=\"position: relative\"\n              >\n                <img\n                  :src=\"img.url\"\n                  alt=\"첨부 이미지\"\n                  class=\"object-cover w-full h-full rounded-[2px]\"\n                />\n                <button\n                  @click=\"removePreviewImage(idx)\"\n                  style=\"\n                    position: absolute;\n                    top: 4px;\n                    right: 4px;\n                    background: rgba(0, 0, 0, 0.5);\n                    border-radius: 50%;\n                    width: 24px;\n                    height: 24px;\n                    color: #fff;\n                    border: none;\n                    font-size: 18px;\n                    cursor: pointer;\n                  \"\n                  title=\"삭제\"\n                >\n                  ×\n                </button>\n              </div>\n              <!-- 이미지가 3개 미만일 때만 업로드 버튼 노출 -->\n              <label\n                v-if=\"uploadedImages.length < 3\"\n                class=\"w-[90px] h-[90px] bg-black-b600 rounded-[2px] cursor-pointer p-0 flex items-center justify-center\"\n              >\n                <img\n                  src=\"@/assets/image/ui/add.svg\"\n                  alt=\"이미지 추가\"\n                  width=\"40\"\n                  height=\"40\"\n                />\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  @change=\"onFileChange\"\n                  style=\"display: none\"\n                />\n              </label>\n            </div>\n          </div>\n          <div v-else-if=\"activePanelTab === 3\">\n            <button\n              @click=\"addTextbox\"\n              class=\"w-[300px] h-[42px] bg-black-b600 rounded-[2px] cursor-pointer p-0 flex items-center justify-center\"\n              style=\"margin: 0 auto\"\n            >\n              <span\n                style=\"\n                  display: flex;\n                  flex-direction: column;\n                  align-items: center;\n                  color: #fff;\n                  font-size: 18px;\n                  font-weight: bold;\n                  gap: 8px;\n                \"\n              >\n                <img\n                  src=\"@/assets/image/ui/add.svg\"\n                  alt=\"이미지 추가\"\n                  width=\"40\"\n                  height=\"40\"\n                />\n              </span>\n            </button>\n          </div>\n          <div v-else-if=\"activePanelTab === 4\"></div>\n          <div v-else-if=\"activePanelTab === 5\">\n            <!-- 이모티콘 추가 버튼 -->\n            <button\n              v-for=\"img in StickerList\"\n              :key=\"img.src\"\n              @click=\"addSticker(img.src)\"\n              style=\"background: none; border: none; cursor: pointer\"\n            >\n              <img :src=\"img.src\" :alt=\"img.label\" width=\"32\" height=\"32\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- 네비게이션 바: 항상 하단 고정, 패널과 넓이 동일 -->\n      <div\n        class=\"panel-nav z-100 text-[20px] fixed left-1/2 bottom-0 flex justify-around items-center h-[48px] bg-black-b900/90 w-full max-w-[430px] -translate-x-1/2\"\n      >\n        <button\n          v-for=\"(tab, idx) in [\n            '배경',\n            '아바타',\n            '사진',\n            '텍스트',\n            '질문',\n            '스티커',\n          ]\"\n          :key=\"tab\"\n          :class=\"[\n            'flex-1 h-full',\n            activePanelTab === idx ? 'text-green-300 ' : 'text-black-b100',\n          ]\"\n          @click=\"openPanel(idx)\"\n        >\n          {{ tab }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n// 이미지, SVG 등 리소스 import\nconst req = require.context(\"@/assets/image\", false, /\\.png$/);\nconst additionalImages = req.keys().map((key, idx) => ({\n  src: req(key),\n  label: `emoji${idx + 1}`,\n}));\n\nimport { ref, onMounted, markRaw } from \"vue\";\nimport {\n  Canvas,\n  Rect,\n  Image as FabricImage,\n  Control,\n  util,\n  controlsUtils,\n  loadSVGFromURL,\n  Group,\n  IText,\n} from \"fabric\";\n\nimport deleteIcon from \"@/assets/image/ui/delete.svg\";\nimport rotateIcon from \"@/assets/image/ui/cached.svg\";\nimport resizeIcon from \"@/assets/image/ui/open_in_full.svg\";\nimport human from \"@/assets/image/인간.svg\";\nimport humanArm from \"@/assets/image/인간팔.svg\";\n\n// Vue CLI/webpack용 require.context 사용\nconst svgContext = require.context(\"@/assets/image\", true, /\\.(svg|png|jpg)$/);\n\nfunction getImageUrl(filename) {\n  try {\n    return svgContext(\"./\" + filename);\n  } catch {\n    return \"\";\n  }\n}\n\nimport backroundDataRaw from \"@/assets/data/backround.json\";\nconst backroundList = (backroundDataRaw.default || backroundDataRaw).map(\n  (item) => ({\n    ...item,\n    src: getImageUrl(item.src),\n  })\n);\nimport stickerDataRaw from \"@/assets/data/sticker.json\";\nconst StickerList = (stickerDataRaw.default || stickerDataRaw).map((item) => ({\n  ...item,\n  src: getImageUrl(item.src),\n}));\n\nimport clothesDataRaw from \"@/assets/data/clothes.json\";\nconst clothesData = clothesDataRaw.default || clothesDataRaw;\nconst clothesListRaw = clothesData.clothesList || [];\nconst clothesList = clothesListRaw.map((item) => ({\n  ...item,\n  icon: getImageUrl(item.icon),\n  svgUrl: Object.fromEntries(\n    Object.entries(item.svgUrl).map(([k, v]) => [k, getImageUrl(v)])\n  ),\n}));\n\nexport default {\n  props: {\n    hideUi: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      // Fabric.js 캔버스 인스턴스\n      canvas: null,\n      // 복원 중 여부\n      isRestoring: false,\n      // 배경 이미지 목록\n      backroundList,\n      // 교체 가능한 기본 이미지 오브젝트\n      defaultImageObject: null,\n      // 현재 포즈 상태\n      currentPose: \"인간\",\n      //스티커 목록\n      StickerList,\n      // 옷 목록 (포즈별 SVG, 위치, 색상 옵션 포함)\n      clothesList,\n      // 현재 선택된 옷 데이터\n      selectedClothes: null,\n      // { [clothes.name]: index }\n      selectedColorIndexes: {},\n      avatarTabs: [\"자세\", \"얼굴형\", \"머리\", \"눈\", \"입\", \"장식\"],\n      activeAvatarTab: 0,\n      imageCount: 0,\n      // 캔버스에 추가된 이미지\n      uploadedImages: [], // { url, fabricObj } 배열\n\n      //아래 변수들은 터치패널을 위한 변수들\n      // panelOpen: false,\n      panelOpen: true,\n      touchStartY: 0,\n      touchMoveY: 0,\n      activePanelTab: 2,\n    };\n  },\n  components: {},\n  methods: {\n    openPanel(idx) {\n      this.activePanelTab = idx;\n      this.panelOpen = true;\n    },\n    togglePanel() {\n      this.panelOpen = !this.panelOpen;\n    },\n    onTouchStart(e) {\n      this.touchStartY = e.touches[0].clientY;\n    },\n    onTouchMove(e) {\n      this.touchMoveY = e.touches[0].clientY;\n    },\n    onTouchEnd() {\n      const delta = this.touchStartY - this.touchMoveY;\n      if (delta > 30) {\n        // 위로 드래그: 열기\n        this.panelOpen = true;\n      } else if (delta < -30) {\n        // 아래로 드래그: 닫기\n        this.panelOpen = false;\n      }\n    },\n    async addHumanControlLayer() {\n      // 기존 컨트롤 레이어가 있으면 삭제\n      if (this.humanControlLayer) {\n        this.canvas.remove(this.humanControlLayer);\n        this.humanControlLayer = null;\n      }\n      if (!this.humanSvgGroup) return;\n\n      const bounds = this.humanSvgGroup.getBoundingRect();\n      const controlLayer = new Rect({\n        left: this.humanSvgGroup.left,\n        top: this.humanSvgGroup.top,\n        width: bounds.width,\n        height: bounds.height,\n        originX: this.humanSvgGroup.originX,\n        originY: this.humanSvgGroup.originY,\n        fill: \"rgba(0,0,0,0)\", // 완전 투명\n        // fill: \"rgba(0,0,255,0.2)\", // 디버깅용: 파란 반투명\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n        padding: 12,\n      });\n      this.addCharacterControls(controlLayer);\n      this.canvas.add(controlLayer);\n      this.humanControlLayer = controlLayer;\n\n      // 컨트롤 레이어 이동 시 캐릭터/옷 동기화\n      controlLayer.on(\"moving\", () => {\n        this.humanSvgGroup.set({\n          left: controlLayer.left,\n          top: controlLayer.top,\n        });\n        if (this.clothesSvgGroup) {\n          const pos = this.selectedClothes?.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            left: controlLayer.left + pos.left * controlLayer.scaleX,\n            top: controlLayer.top + pos.top * controlLayer.scaleY,\n          });\n        }\n        this.canvas.renderAll();\n      });\n\n      // 컨트롤 레이어 스케일 시 캐릭터/옷 동기화\n      controlLayer.on(\"scaling\", () => {\n        this.humanSvgGroup.set({\n          scaleX: controlLayer.scaleX,\n          scaleY: controlLayer.scaleY,\n          left: controlLayer.left,\n          top: controlLayer.top,\n        });\n        if (this.clothesSvgGroup) {\n          const pos = this.selectedClothes?.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            scaleX: controlLayer.scaleX,\n            scaleY: controlLayer.scaleY,\n            left: controlLayer.left + pos.left * controlLayer.scaleX,\n            top: controlLayer.top + pos.top * controlLayer.scaleY,\n          });\n        }\n        this.canvas.renderAll();\n      });\n\n      // ★ 컨트롤 레이어 회전 시 캐릭터/옷 동기화\n      controlLayer.on(\"rotating\", () => {\n        this.humanSvgGroup.set({\n          angle: controlLayer.angle,\n        });\n        if (this.clothesSvgGroup) {\n          this.clothesSvgGroup.set({\n            angle: controlLayer.angle,\n          });\n        }\n        this.canvas.renderAll();\n      });\n\n      // // 캐릭터와 옷은 직접 선택 불가\n      // this.humanSvgGroup.set({ selectable: false, evented: false });\n      // if (this.clothesSvgGroup) {\n      //   this.clothesSvgGroup.set({ selectable: false, evented: false });\n      // }\n\n      // 항상 z-index 정렬\n      this.canvas.renderAll();\n    },\n\n    // 포즈에 따라 인간 SVG를 캔버스에 추가\n    async addHumanSvg() {\n      // 기존 인간 SVG가 있으면 삭제\n      let prevLeft = 100;\n      let prevTop = this.canvas.height / 2;\n      let prevScaleX = 1;\n      let prevScaleY = 1;\n      let prevAngle = 0;\n      if (this.humanSvgGroup) {\n        // 기존 중심, 스케일, 각도 기억\n        prevLeft = this.humanSvgGroup.left;\n        prevTop = this.humanSvgGroup.top;\n        prevScaleX = this.humanSvgGroup.scaleX;\n        prevScaleY = this.humanSvgGroup.scaleY;\n        prevAngle = this.humanSvgGroup.angle;\n        this.canvas.remove(this.humanSvgGroup);\n        this.humanSvgGroup = null;\n      }\n      const humanSvgUrl = this.currentPose === \"인간팔\" ? humanArm : human;\n      const loadedSVG = await loadSVGFromURL(humanSvgUrl);\n      let svgGroup = util.groupSVGElements(loadedSVG.objects);\n      svgGroup.set({\n        left: prevLeft,\n        top: prevTop,\n        originX: \"center\",\n        originY: \"center\",\n        scaleX: prevScaleX,\n        scaleY: prevScaleY,\n        angle: prevAngle,\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n        lockMovementX: false,\n        lockMovementY: false,\n        lockScalingX: false,\n        lockScalingY: false,\n        lockRotation: false,\n      });\n\n      this.addCharacterControls(svgGroup);\n      this.canvas.add(svgGroup);\n      this.humanSvgGroup = svgGroup;\n      this.addHumanMoveListener();\n      await this.addHumanControlLayer();\n      this.canvas.renderAll();\n    },\n    // 옷 선택 시 캔버스에 추가 (포즈별 SVG/위치 적용)\n    async selectClothes(clothes) {\n      if (this.clothesSvgGroup) {\n        this.canvas.remove(this.clothesSvgGroup);\n      }\n      const svgUrl =\n        typeof clothes.svgUrl === \"object\"\n          ? clothes.svgUrl[this.currentPose] || clothes.svgUrl[\"인간\"]\n          : clothes.svgUrl;\n      const loadedSVG = await loadSVGFromURL(svgUrl);\n      let svgGroup = util.groupSVGElements(loadedSVG.objects);\n\n      // 인간 SVG 기준 + 옷 position 값 더해서 위치/스케일 맞추기\n      const human = this.humanSvgGroup;\n      const pos = clothes.position?.[this.currentPose] || { left: 0, top: 0 };\n\n      // 옷 그룹을 인간과 완전히 동일하게 맞춤\n      svgGroup.set({\n        left: human.left,\n        top: human.top,\n        originX: human.originX,\n        originY: human.originY,\n        scaleX: human.scaleX,\n        scaleY: human.scaleY,\n        angle: human.angle,\n        selectable: false,\n        evented: false,\n        hasControls: false,\n        hasBorders: false,\n        lockMovementX: true,\n        lockMovementY: true,\n        lockScalingX: true,\n        lockScalingY: true,\n        lockRotation: true,\n      });\n\n      // 옷 내부 오브젝트에만 offset 적용\n      svgGroup.forEachObject((obj) => {\n        obj.left += pos.left;\n        obj.top += pos.top;\n      });\n      svgGroup.setCoords();\n      this.canvas.add(svgGroup);\n      this.clothesSvgGroup = svgGroup;\n      this.selectedClothes = clothes;\n      this.canvas.renderAll();\n\n      // 마지막으로 선택한 색상 옵션 적용\n      const idx = this.selectedColorIndexes[clothes.name] ?? 0;\n      const btn = clothes.colorButtons[idx];\n      if (btn) {\n        this.changeClothesColors(btn.targets, clothes.name, idx);\n      }\n      await this.addHumanControlLayer();\n    },\n    // 인간을 움직일 때 옷도 같이 움직이게 이벤트 연결\n    addHumanMoveListener() {\n      if (!this.humanSvgGroup) return;\n      this.humanSvgGroup.set({ selectable: true, evented: true });\n\n      // 이동 시 옷 따라오기\n      this.humanSvgGroup.on(\"moving\", () => {\n        if (this.clothesSvgGroup && this.selectedClothes) {\n          const pos = this.selectedClothes.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            left:\n              this.humanSvgGroup.left + pos.left * this.humanSvgGroup.scaleX,\n            top: this.humanSvgGroup.top + pos.top * this.humanSvgGroup.scaleY,\n          });\n          this.canvas.renderAll();\n        }\n      });\n\n      // 크기 조절(스케일) 시 옷도 같이 스케일\n      this.humanSvgGroup.on(\"scaling\", () => {\n        if (this.clothesSvgGroup && this.selectedClothes) {\n          // scaleX, scaleY 동기화\n          this.clothesSvgGroup.set({\n            scaleX: this.humanSvgGroup.scaleX,\n            scaleY: this.humanSvgGroup.scaleY,\n          });\n          // 위치도 스케일에 맞게 보정\n          const pos = this.selectedClothes.position?.[this.currentPose] || {\n            left: 0,\n            top: 0,\n          };\n          this.clothesSvgGroup.set({\n            left:\n              this.humanSvgGroup.left + pos.left * this.humanSvgGroup.scaleX,\n            top: this.humanSvgGroup.top + pos.top * this.humanSvgGroup.scaleY,\n          });\n          this.canvas.renderAll();\n        }\n      });\n    },\n    // 포즈 변경 시 인간/옷 SVG 갱신\n    async changePose(pose) {\n      this.currentPose = pose;\n      if (this.humanSvgGroup) this.canvas.remove(this.humanSvgGroup);\n      if (this.clothesSvgGroup) this.canvas.remove(this.clothesSvgGroup);\n      await this.addHumanSvg();\n      this.addCharacterControls(this.humanSvgGroup);\n      if (this.selectedClothes) {\n        await this.selectClothes(this.selectedClothes);\n      }\n      await this.addHumanControlLayer();\n    },\n    // 옷 SVG 색상 변경 (id/class 모두 지원, 재귀 순회)\n    changeClothesColors(targets, clothesName, idx) {\n      if (!this.clothesSvgGroup) return;\n      // 색상 적용\n      function changeRecursive(obj) {\n        if (obj._objects) {\n          obj._objects.forEach((child) => changeRecursive(child));\n        } else {\n          targets.forEach(({ type, value, color }) => {\n            if (\n              (type === \"id\" &&\n                (obj.id === value || (obj.get && obj.get(\"id\") === value))) ||\n              (type === \"class\" &&\n                (obj.className === value ||\n                  (obj.get && obj.get(\"class\") === value)))\n            ) {\n              obj.set(\"fill\", color);\n            }\n          });\n        }\n      }\n      changeRecursive(this.clothesSvgGroup);\n      this.canvas.requestRenderAll();\n\n      // 선택된 색상 인덱스 저장\n      this.selectedColorIndexes = {\n        ...this.selectedColorIndexes,\n        [clothesName]: idx,\n      };\n    },\n\n    // 캔버스 이미지를 파일로 저장 (파일명 입력 가능, 기본값: 오늘기분외계인)\n    saveCanvasAsImage() {\n      let filename = prompt(\"저장할 파일 이름을 입력하세요.\", \"오늘기분외계인\");\n      if (filename === null) return; // 취소 시 저장하지 않음\n      if (!filename || filename.trim() === \"\") {\n        filename = \"오늘기분외계인\";\n      }\n      if (!filename.endsWith(\".jpg\") && !filename.endsWith(\".png\")) {\n        filename += \".jpg\";\n      }\n      const dataUrl = this.canvas.toDataURL({\n        format: \"jpg\",\n        quality: 1.0,\n        multiplier: 4,\n      });\n      const link = document.createElement(\"a\");\n      link.href = dataUrl;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n    // 일반 SVG 색상 변경 (id 기준)\n    changeSvgColorsByIds(idColorList) {\n      if (!this.svgGroup) return;\n      this.svgGroup.forEachObject((obj) => {\n        idColorList.forEach(({ id, color }) => {\n          if (obj.id === id || obj.get(\"id\") === id) {\n            obj.set(\"fill\", color);\n          }\n        });\n      });\n      this.canvas.requestRenderAll();\n    },\n    // 커스텀 컨트롤(삭제/회전/크기조절) 렌더링 함수들\n    renderDeleteIcon(ctx, left, top, _styleOverride, fabricObject) {\n      const dpr = window.devicePixelRatio || 1;\n      const size = 36 * dpr;\n      const padding = 12 * dpr;\n      const hitSize = size + padding * 2;\n      const img = new window.Image();\n      img.src = deleteIcon;\n      ctx.save();\n      ctx.translate(left, top);\n      ctx.rotate(util.degreesToRadians(fabricObject.angle));\n      ctx.globalAlpha = 1;\n      ctx.drawImage(img, -size / 2, -size / 2, size, size);\n      ctx.globalAlpha = 0.01;\n      ctx.beginPath();\n      ctx.arc(0, 0, hitSize / 2, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.globalAlpha = 1.0;\n      ctx.restore();\n    },\n    renderRotateIcon(ctx, left, top, _styleOverride, fabricObject) {\n      const size = 36;\n      const padding = 12;\n      const hitSize = size + padding * 2;\n      const img = new Image();\n      img.src = rotateIcon;\n      ctx.save();\n      ctx.translate(left, top);\n      ctx.rotate(util.degreesToRadians(fabricObject.angle));\n      ctx.globalAlpha = 1;\n      ctx.drawImage(img, -size / 2, -size / 2, size, size);\n      ctx.globalAlpha = 0.01;\n      ctx.beginPath();\n      ctx.arc(0, 0, hitSize / 2, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.globalAlpha = 1.0;\n      ctx.restore();\n    },\n    renderResizeIcon(ctx, left, top, _styleOverride, fabricObject) {\n      const size = 36;\n      const padding = 12;\n      const hitSize = size + padding * 2;\n      const img = new Image();\n      img.src = resizeIcon;\n      ctx.save();\n      ctx.translate(left, top);\n      ctx.rotate(util.degreesToRadians(fabricObject.angle));\n      ctx.globalAlpha = 1;\n      ctx.drawImage(img, -size / 2, -size / 2, size, size);\n      ctx.globalAlpha = 0.01;\n      ctx.beginPath();\n      ctx.arc(0, 0, hitSize / 2, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.globalAlpha = 1.0;\n      ctx.restore();\n    },\n    // 오브젝트 삭제 핸들러\n    deleteObject(_eventData, transform) {\n      const canvasInstance = transform.target.canvas;\n\n      // 1. 텍스트에 배경이 연결되어 있으면 같이 삭제\n      if (\n        transform.target.type === \"i-text\" &&\n        transform.target._bgRect &&\n        canvasInstance.contains(transform.target._bgRect)\n      ) {\n        canvasInstance.remove(transform.target._bgRect);\n      }\n\n      // 2. 캐릭터(인간) 컨트롤 레이어 삭제 시, 인간/옷 그룹도 같이 삭제\n      if (\n        transform.target === this.humanControlLayer ||\n        transform.target === this.humanSvgGroup\n      ) {\n        // 인간 SVG 그룹 삭제\n        if (this.humanSvgGroup && canvasInstance.contains(this.humanSvgGroup)) {\n          canvasInstance.remove(this.humanSvgGroup);\n          this.humanSvgGroup = null;\n        }\n        // 옷 SVG 그룹 삭제\n        if (\n          this.clothesSvgGroup &&\n          canvasInstance.contains(this.clothesSvgGroup)\n        ) {\n          canvasInstance.remove(this.clothesSvgGroup);\n          this.clothesSvgGroup = null;\n          this.selectedClothes = null;\n        }\n        // 컨트롤 레이어 삭제\n        if (\n          this.humanControlLayer &&\n          canvasInstance.contains(this.humanControlLayer)\n        ) {\n          canvasInstance.remove(this.humanControlLayer);\n          this.humanControlLayer = null;\n        }\n        canvasInstance.requestRenderAll();\n        return;\n      }\n\n      // 3. 일반 오브젝트 삭제\n      canvasInstance.remove(transform.target);\n      canvasInstance.requestRenderAll();\n    },\n    addCharacterControls(obj) {\n      const dpr = window.devicePixelRatio || 1;\n      obj.setControlsVisibility({\n        tl: false,\n        tr: false,\n        bl: false,\n        br: false,\n        mt: false,\n        mb: false,\n        ml: false,\n        mr: false,\n        mtr: true, // 회전 핸들\n        deleteControl: true, // 삭제 버튼 활성화\n        rotateControl: true, // 커스텀 회전\n        resizeControl: true, // 커스텀 리사이즈\n      });\n      obj.controls.deleteControl = new Control({\n        x: 0.5,\n        y: -0.5,\n        cursorStyle: \"pointer\",\n        mouseUpHandler: this.deleteObject,\n        render: this.renderDeleteIcon,\n        cornerSize: 24 * dpr,\n        hitbox: { width: 60 * dpr, height: 60 * dpr },\n      });\n      obj.controls.rotateControl = new Control({\n        x: 0,\n        y: -0.5,\n        offsetY: -40 * dpr,\n        cursorStyle: \"crosshair\",\n        render: this.renderRotateIcon,\n        cornerSize: 24 * dpr,\n        actionHandler: controlsUtils.rotationWithSnapping,\n        hitbox: { width: 60 * dpr, height: 60 * dpr },\n      });\n      obj.controls.resizeControl = new Control({\n        x: 0.5,\n        y: 0.5,\n        cursorStyle: \"se-resize\",\n        render: this.renderResizeIcon,\n        cornerSize: 24 * dpr,\n        actionHandler: controlsUtils.scalingEqually,\n        hitbox: { width: 60 * dpr, height: 60 * dpr },\n      });\n\n      obj.set({\n        cornerColor: \"#00000000\",\n        cornerSize: 24 * dpr,\n        cornerStyle: \"circle\",\n        borderColor: \"#ffffff\",\n        borderDashArray: [6 * dpr, 4 * dpr],\n        transparentCorners: false,\n        hasBorders: false,\n        hasControls: false,\n      });\n\n      obj.on(\"selected\", () => {\n        obj.set({ hasBorders: true, hasControls: true });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: true,\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n      obj.on(\"deselected\", () => {\n        obj.set({ hasBorders: false, hasControls: false });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: true,\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n    },\n    // 커스텀 컨트롤 추가\n    addCustomControls(obj) {\n      const dpr = window.devicePixelRatio || 1;\n\n      obj.setControlsVisibility({\n        tl: false,\n        tr: false,\n        bl: false,\n        br: false,\n        mt: false,\n        mb: false,\n        ml: false,\n        mr: false,\n        mtr: true,\n        deleteControl: true,\n        rotateControl: true,\n        resizeControl: true,\n      });\n\n      obj.controls.deleteControl = new Control({\n        x: 0.5,\n        y: -0.5,\n        cursorStyle: \"pointer\",\n        mouseUpHandler: this.deleteObject,\n        render: this.renderDeleteIcon,\n        cornerSize: 24 * dpr,\n        hitbox: { width: 60 * dpr, height: 60 * dpr },\n      });\n      obj.controls.rotateControl = new Control({\n        x: 0,\n        y: -0.5,\n        offsetY: -40 * dpr,\n        cursorStyle: \"crosshair\",\n        render: this.renderRotateIcon,\n        cornerSize: 24 * dpr,\n        actionHandler: controlsUtils.rotationWithSnapping,\n        hitbox: { width: 60 * dpr, height: 60 * dpr },\n      });\n      obj.controls.resizeControl = new Control({\n        x: 0.5,\n        y: 0.5,\n        cursorStyle: \"se-resize\",\n        render: this.renderResizeIcon,\n        cornerSize: 24 * dpr,\n        actionHandler: controlsUtils.scalingEqually,\n        hitbox: { width: 60 * dpr, height: 60 * dpr },\n      });\n\n      obj.set({\n        cornerColor: \"#00000000\",\n        cornerSize: 24 * dpr,\n        cornerStyle: \"circle\",\n        borderColor: \"#ffffff\",\n        borderDashArray: [6 * dpr, 4 * dpr],\n        transparentCorners: false,\n        hasBorders: false,\n        hasControls: false,\n      });\n\n      obj.on(\"selected\", () => {\n        obj.set({ hasBorders: true, hasControls: true });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: true,\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n      obj.on(\"deselected\", () => {\n        obj.set({ hasBorders: false, hasControls: false });\n        obj.setControlsVisibility({\n          tl: false,\n          tr: false,\n          bl: false,\n          br: false,\n          mt: false,\n          mb: false,\n          ml: false,\n          mr: false,\n          mtr: true,\n          deleteControl: true,\n          rotateControl: true,\n          resizeControl: true,\n        });\n        obj.canvas.requestRenderAll();\n      });\n    },\n    // 도형(사각형) 추가\n    addRectangle() {\n      const rect = new Rect({\n        left: this.canvas.width / 2,\n        top: this.canvas.height / 2,\n        fill: \"#ffe066\",\n        width: 200,\n        height: 200,\n        objectCaching: false,\n        originX: \"center\",\n        originY: \"center\",\n        centeredRotation: true,\n        padding: 12,\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n      });\n      this.addCustomControls(rect);\n      this.canvas.add(rect);\n      this.canvas.setActiveObject(rect);\n      this.canvas.renderAll();\n    },\n    // 텍스트 추가\n    addTextbox() {\n      const text = \"1.방문자 카운팅 \";\n      const padding = 12;\n      const textbox = new IText(text, {\n        left: this.canvas.width / 2,\n        top: this.canvas.height / 2,\n        originX: \"center\",\n        originY: \"center\",\n        fontSize: 32,\n        fill: \"#222\",\n        fontFamily: \"sans-serif\",\n        editable: true,\n        selectable: true,\n        evented: true,\n        hasControls: false,\n        hasBorders: false,\n        backgroundColor: \"transparent\",\n        textAlign: \"center\",\n      });\n\n      // 배경 사각형 생성\n      const bgRect = new Rect({\n        left: textbox.left,\n        top: textbox.top,\n        originX: \"center\",\n        originY: \"center\",\n        width: textbox.width + padding * 2,\n        height: textbox.height + padding * 2,\n        rx: 18,\n        ry: 18,\n        fill: \"#fffbe6\",\n        selectable: false,\n        evented: false,\n        hasBorders: false,\n        hasControls: false,\n      });\n\n      // 텍스트에 배경 참조 저장\n      textbox._bgRect = bgRect;\n\n      this.canvas.add(bgRect);\n      this.canvas.add(textbox);\n\n      // 항상 텍스트 바로 아래에 배경이 오도록 순서 조정 함수\n      const ensureBgBelowText = () => {\n        const objs = this.canvas.getObjects();\n        const bgIdx = objs.indexOf(bgRect);\n        const textIdx = objs.indexOf(textbox);\n        if (bgIdx > -1 && textIdx > -1 && bgIdx !== textIdx - 1) {\n          objs.splice(bgIdx, 1);\n          objs.splice(textIdx, 0, bgRect);\n          this.canvas._objects = objs;\n        }\n      };\n\n      // 텍스트 이동/수정/스케일/회전 시 배경도 같이 이동 및 크기 조정\n      const updateBgRect = () => {\n        textbox.setCoords();\n        bgRect.set({\n          width: textbox.width * textbox.scaleX + padding * 2,\n          height: textbox.height * textbox.scaleY + padding * 2,\n          left: textbox.left,\n          top: textbox.top,\n          scaleX: 1,\n          scaleY: 1,\n          angle: textbox.angle,\n        });\n        ensureBgBelowText();\n        this.canvas.requestRenderAll();\n      };\n\n      // 이벤트 연결\n      textbox.on(\"changed\", updateBgRect);\n      textbox.on(\"scaling\", updateBgRect);\n      textbox.on(\"moving\", updateBgRect);\n      textbox.on(\"rotating\", updateBgRect);\n\n      // 최초 위치/순서 보장\n      ensureBgBelowText();\n\n      this.addCustomControls(textbox);\n      this.canvas.setActiveObject(textbox);\n      this.canvas.renderAll();\n    },\n\n    // 이미지 추가 (최대 3개)\n    addImage(imageSrc) {\n      const img = new window.Image();\n      img.src = imageSrc;\n      img.onload = () => {\n        let width = img.width;\n        let height = img.height;\n        const padding = 12; // 원하는 만큼\n\n        // fabric.Image 생성\n        const fabricImage = new FabricImage(img, {\n          left: 0,\n          top: 0,\n          originX: \"center\",\n          originY: \"center\",\n          width,\n          height,\n          selectable: false,\n          evented: false,\n          hasControls: false,\n          hasBorders: false,\n        });\n\n        // 투명한 Rect 생성 (이미지보다 padding*2만큼 크게)\n        const bgRect = new Rect({\n          left: 0,\n          top: 0,\n          originX: \"center\",\n          originY: \"center\",\n          width: width + padding * 2,\n          height: height + padding * 2,\n          fill: \"rgba(0,0,0,0)\",\n          selectable: false,\n          evented: false,\n          hasControls: false,\n          hasBorders: false,\n        });\n\n        // Group으로 묶기\n        const group = new Group([bgRect, fabricImage], {\n          left: this.canvas.width / 2,\n          top: this.canvas.height / 2,\n          originX: \"center\",\n          originY: \"center\",\n          selectable: true,\n          evented: true,\n          hasControls: false,\n          hasBorders: false,\n        });\n\n        this.addCustomControls(group);\n        this.canvas.add(group);\n        this.canvas.setActiveObject(group);\n        this.canvas.renderAll();\n\n        // 미리보기 배열에 추가 (group을 fabricObj로 저장)\n        this.uploadedImages.push({\n          url: imageSrc,\n          fabricObj: markRaw(group),\n        });\n        this.updateImageCount();\n      };\n    },\n    // 파일 첨부로 이미지 추가 삭제 카운트\n    onFileChange(event) {\n      const files = event.target.files;\n      if (!files || files.length === 0) return;\n\n      let imageCount = this.uploadedImages.length;\n      if (imageCount >= 3) {\n        alert(\"이미지는 최대 3개까지만 추가할 수 있습니다.\");\n        return;\n      }\n\n      const file = files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const img = new window.Image();\n        img.src = e.target.result;\n        img.onload = () => {\n          let width = img.width;\n          let height = img.height;\n          let scale = 1;\n          if (width > 400) {\n            scale = 400 / width;\n          }\n          const padding = 12;\n\n          // fabric.Image 생성\n          const fabricImage = new FabricImage(img, {\n            left: 0,\n            top: 0,\n            originX: \"center\",\n            originY: \"center\",\n            width: width,\n            height: height,\n            scaleX: scale,\n            scaleY: scale,\n            selectable: false,\n            evented: false,\n            hasControls: false,\n            hasBorders: false,\n          });\n\n          // 투명한 Rect 생성\n          const bgRect = new Rect({\n            left: 0,\n            top: 0,\n            originX: \"center\",\n            originY: \"center\",\n            width: width * scale + padding * 2,\n            height: height * scale + padding * 2,\n            fill: \"rgba(0,0,0,0)\",\n            selectable: false,\n            evented: false,\n            hasControls: false,\n            hasBorders: false,\n          });\n\n          // Group으로 묶기\n          const group = new Group([bgRect, fabricImage], {\n            left: this.canvas.width / 2,\n            top: this.canvas.height / 2,\n            originX: \"center\",\n            originY: \"center\",\n            selectable: true,\n            evented: true,\n            hasControls: false,\n            hasBorders: false,\n          });\n\n          this.addCustomControls(group);\n          this.canvas.add(group);\n          this.canvas.setActiveObject(group);\n          this.canvas.renderAll();\n\n          // 미리보기 배열에 group을 저장\n          this.uploadedImages.push({\n            url: e.target.result,\n            fabricObj: markRaw(group),\n          });\n          this.updateImageCount();\n        };\n      };\n      reader.readAsDataURL(file);\n\n      event.target.value = \"\";\n    },\n    //미리보기 상의 이미지 삭제\n    removePreviewImage(idx) {\n      const img = this.uploadedImages[idx];\n      if (img && img.fabricObj && this.canvas.contains(img.fabricObj)) {\n        this.canvas.remove(img.fabricObj);\n      }\n    },\n\n    // 이미지 삭제 시에도 호출\n    removeImageObject(obj) {\n      this.canvas.remove(obj);\n      this.canvas.renderAll();\n      this.updateImageCount();\n    },\n\n    // 캔버스의 사용자 이미지 개수 갱신\n    updateImageCount() {\n      this.imageCount = this.canvas\n        .getObjects()\n        .filter(\n          (obj) => obj.type === \"image\" && obj.selectable !== false\n        ).length;\n    },\n    // 기본 이미지 교체\n    replaceDefaultImage(newImageSrc) {\n      if (!this.defaultImageObject) return;\n      const img = new window.Image();\n      img.src = newImageSrc;\n      img.onload = () => {\n        // 캔버스와 이미지의 비율 계산\n        const canvasW = this.canvas.width;\n        const canvasH = this.canvas.height;\n        const imgW = img.width;\n        const imgH = img.height;\n        const scale = Math.max(canvasW / imgW, canvasH / imgH);\n\n        this.defaultImageObject.setElement(img);\n        this.defaultImageObject.set({\n          scaleX: scale,\n          scaleY: scale,\n          left: (canvasW - imgW * scale) / 2,\n          top: (canvasH - imgH * scale) / 2,\n          originX: \"left\",\n          originY: \"top\",\n          width: imgW,\n          height: imgH,\n        });\n        this.canvas.renderAll();\n      };\n    },\n\n    // 캔버스 초기화 및 기본 오브젝트 추가\n    async initializeCanvas() {\n      const wrapper = this.$el.querySelector(\".mobile-wrapper\") || this.$el;\n      const rect = wrapper.getBoundingClientRect();\n      const dpr = window.devicePixelRatio || 1;\n\n      const canvasWidth = rect.width * dpr;\n      const canvasHeight = rect.height * dpr;\n\n      this.canvas = markRaw(\n        new Canvas(this.$refs.canvas, {\n          width: canvasWidth,\n          height: canvasHeight,\n          selection: false,\n          backgroundColor: \"#ffffff\",\n        })\n      );\n\n      // CSS 크기는 원래 크기로\n      this.$refs.canvas.style.width = rect.width + \"px\";\n      this.$refs.canvas.style.height = rect.height + \"px\";\n\n      // 배경이미지\n      const img = new window.Image();\n      img.src = this.backroundList[0].src;\n      img.onload = async () => {\n        const canvasW = this.canvas.width;\n        const canvasH = this.canvas.height;\n        const imgW = img.width;\n        const imgH = img.height;\n        const scale = Math.max(canvasW / imgW, canvasH / imgH);\n\n        const fabricImage = new FabricImage(img, {\n          left: (canvasW - imgW * scale) / 2,\n          top: (canvasH - imgH * scale) / 2,\n          originX: \"left\",\n          originY: \"top\",\n          scaleX: scale,\n          scaleY: scale,\n          width: imgW,\n          height: imgH,\n          selectable: false,\n          evented: false,\n          hasControls: false,\n          hasBorders: false,\n          lockMovementX: true,\n          lockMovementY: true,\n          lockScalingX: true,\n          lockScalingY: true,\n          lockRotation: true,\n        });\n        this.canvas.add(fabricImage);\n        this.defaultImageObject = fabricImage;\n        this.canvas.renderAll();\n\n        // 배경 이미지가 추가된 후 인간 추가\n        await this.addHumanSvg();\n        await this.addHumanControlLayer();\n      };\n\n      // mouse:up 이벤트는 한 번만 등록!\n      this.canvas.on(\"mouse:down\", (opt) => {\n        const target = this.canvas.getActiveObject();\n        const objs = this.canvas.getObjects();\n\n        // 1. 기본 이미지는 항상 맨 아래\n        if (this.defaultImageObject) {\n          const idx = objs.indexOf(this.defaultImageObject);\n          if (idx > -1) {\n            objs.splice(idx, 1);\n            objs.unshift(this.defaultImageObject);\n          }\n        }\n\n        // 캐릭터(인간 SVG 그룹)만 클릭 시 셋을 동시에 맨 위로!\n        if (target === this.humanSvgGroup) {\n          [\n            this.humanSvgGroup,\n            this.humanControlLayer,\n            this.clothesSvgGroup,\n          ].forEach((obj) => {\n            const idx = objs.indexOf(obj);\n            if (idx > -1) objs.splice(idx, 1);\n          });\n          if (this.humanSvgGroup) objs.push(this.humanSvgGroup);\n          if (this.humanControlLayer) objs.push(this.humanControlLayer);\n          if (this.clothesSvgGroup) objs.push(this.clothesSvgGroup);\n\n          this.canvas._objects = objs;\n          this.canvas.renderAll();\n          return;\n        }\n\n        // 텍스트(IText) 클릭 시 배경과 텍스트를 같이 맨 위로!\n        if (target && target.type === \"i-text\" && target._bgRect) {\n          // 둘 다 배열에서 제거\n          [target._bgRect, target].forEach((obj) => {\n            const idx = objs.indexOf(obj);\n            if (idx > -1) objs.splice(idx, 1);\n          });\n          // 반드시 배경 → 텍스트 순서로 push\n          objs.push(target._bgRect);\n          objs.push(target);\n\n          this.canvas._objects = objs;\n          this.canvas.renderAll();\n          return;\n        }\n\n        // 2. 캐릭터 3종 중 하나라도 클릭하면 셋을 동시에 맨 위로!\n        const isHumanPart = [\n          this.humanControlLayer,\n          this.humanSvgGroup,\n          this.clothesSvgGroup,\n        ].includes(target);\n\n        if (isHumanPart) {\n          [\n            this.humanSvgGroup,\n            this.humanControlLayer,\n            this.clothesSvgGroup,\n          ].forEach((obj) => {\n            const idx = objs.indexOf(obj);\n            if (idx > -1) objs.splice(idx, 1);\n          });\n          if (this.humanSvgGroup) objs.push(this.humanSvgGroup);\n          if (this.humanControlLayer) objs.push(this.humanControlLayer);\n          if (this.clothesSvgGroup) objs.push(this.clothesSvgGroup);\n        } else if (\n          target &&\n          ![\n            this.humanControlLayer,\n            this.humanSvgGroup,\n            this.clothesSvgGroup,\n            this.defaultImageObject,\n          ].includes(target)\n        ) {\n          const idx = objs.indexOf(target);\n          if (idx > -1) {\n            objs.splice(idx, 1);\n            objs.push(target);\n          }\n        }\n\n        this.canvas._objects = objs;\n        this.canvas.renderAll();\n      });\n    },\n    addSticker(stickerSrc) {\n      const img = new window.Image();\n      img.src = stickerSrc;\n      img.onload = () => {\n        let width = img.width;\n        let height = img.height;\n        const padding = 12;\n\n        const fabricImage = new FabricImage(img, {\n          left: 0,\n          top: 0,\n          originX: \"center\",\n          originY: \"center\",\n          width,\n          height,\n          selectable: false,\n          evented: false,\n          hasControls: false,\n          hasBorders: false,\n        });\n\n        const bgRect = new Rect({\n          left: 0,\n          top: 0,\n          originX: \"center\",\n          originY: \"center\",\n          width: width + padding * 2,\n          height: height + padding * 2,\n          fill: \"rgba(0,0,0,0)\",\n          selectable: false,\n          evented: false,\n          hasControls: false,\n          hasBorders: false,\n        });\n\n        const group = new Group([bgRect, fabricImage], {\n          left: this.canvas.width / 2,\n          top: this.canvas.height / 2,\n          originX: \"center\",\n          originY: \"center\",\n          selectable: true,\n          evented: true,\n          hasControls: false,\n          hasBorders: false,\n        });\n\n        this.addCustomControls(group);\n        this.canvas.add(group);\n        this.canvas.setActiveObject(group);\n        this.canvas.renderAll();\n\n        // 스티커는 uploadedImages에 추가하지 않음!\n      };\n    },\n  },\n  // 컴포넌트 마운트 시 캔버스 초기화\n  mounted: async function () {\n    this.$nextTick(async () => {\n      await this.initializeCanvas();\n      if (this.canvas) {\n        this.canvas.on(\"object:removed\", (e) => {\n          const idx = this.uploadedImages.findIndex(\n            (img) => img.fabricObj === e.target\n          );\n          if (idx !== -1) {\n            this.uploadedImages.splice(idx, 1);\n            this.uploadedImages = this.uploadedImages.slice();\n          }\n          this.updateImageCount();\n        });\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n.custom-scrollbar-hide {\n  scrollbar-width: none; /* Firefox */\n}\n.custom-scrollbar-hide::-webkit-scrollbar {\n  display: none; /* Chrome, Safari */\n}\n.edit-panel {\n  transition-property: height, transform;\n  transition-duration: 0.3s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  flex-direction: column;\n  will-change: transform;\n}\n.edit-panel .panel-content {\n  min-height: 0;\n}\n.edit-panel.open {\n  height: 282px; /* 열린 상태 */\n}\n.panel-handle {\n  margin: 10px auto 12px auto;\n}\n.panel-content {\n  overflow-y: scroll;\n  scrollbar-width: none; /* Firefox */\n}\n.panel-content::-webkit-scrollbar {\n  display: none; /* Chrome, Safari */\n}\n</style>\n","import { render } from \"./MainCanvas.vue?vue&type=template&id=7963dfc4&scoped=true\"\nimport script from \"./MainCanvas.vue?vue&type=script&lang=js\"\nexport * from \"./MainCanvas.vue?vue&type=script&lang=js\"\n\nimport \"./MainCanvas.vue?vue&type=style&index=0&id=7963dfc4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7963dfc4\"]])\n\nexport default __exports__","<template>\n  <div class=\"relative\">\n    <!-- TopBar(툴바)는 항상 보임 -->\n    <div\n      class=\"TopBar h-[34px] flex items-center bg-gray-900 relative select-none\"\n    >\n      <span\n        class=\"absolute inset-0 flex items-center justify-center pointer-events-none text-[16px] text-[#9A9A9E]\"\n      >\n        2025. 06. 08\n      </span>\n      <template v-if=\"!showPopup\">\n        <button\n          class=\"text-green-300 flex absolute right-[20px] z-10\"\n          @click=\"openPopup\"\n        >\n          <img src=\"@/assets/image/ui/download.svg\" alt=\"\" /> <span>완료</span>\n        </button>\n      </template>\n      <template v-else>\n        <button\n          class=\"text-red-400 flex absolute left-[20px] z-10\"\n          @click=\"closePopup\"\n        >\n          취소\n        </button>\n        <button\n          class=\"text-blue-400 flex absolute right-[20px] z-10\"\n          @click=\"save\"\n        >\n          저장\n        </button>\n      </template>\n    </div>\n    <!-- MainCanvas: 네비/패널은 showPopup이 true면 숨김 -->\n    <div style=\"padding-top: 34px\">\n      <MainCanvas ref=\"mainCanvas\" :hideUi=\"showPopup\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport MainCanvas from \"@/components/MainCanvas.vue\";\nexport default {\n  components: {\n    MainCanvas,\n  },\n  data() {\n    return {\n      showPopup: false,\n    };\n  },\n  methods: {\n    openPopup() {\n      this.showPopup = true;\n    },\n    closePopup() {\n      this.showPopup = false;\n    },\n    save() {\n      if (this.$refs.mainCanvas && this.$refs.mainCanvas.saveCanvasAsImage) {\n        this.$refs.mainCanvas.saveCanvasAsImage();\n      }\n      this.showPopup = false;\n    },\n  },\n};\n</script>\n\n<style>\n.popup-backdrop {\n  position: fixed;\n  inset: 0;\n  background: rgba(0, 0, 0, 0.4);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n}\n\n.popup-content {\n  background: #fff;\n  padding: 32px 24px;\n  border-radius: 16px;\n  text-align: center;\n}\n</style>\n","import { render } from \"./CanvasUI.vue?vue&type=template&id=eb92ffb0\"\nimport script from \"./CanvasUI.vue?vue&type=script&lang=js\"\nexport * from \"./CanvasUI.vue?vue&type=script&lang=js\"\n\nimport \"./CanvasUI.vue?vue&type=style&index=0&id=eb92ffb0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GameRunner.vue?vue&type=template&id=80755d3a\"\nimport script from \"./GameRunner.vue?vue&type=script&lang=js\"\nexport * from \"./GameRunner.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","'use strict';\nvar toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = new Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in new Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(globalThis, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","'use strict';\nmodule.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n","var map = {\n\t\"./backround/다가오는솔라스 (1).jpg\": 1560,\n\t\"./backround/다가오는솔라스 (2).jpg\": 3713,\n\t\"./backround/다가오는솔라스 (3).jpg\": 6502,\n\t\"./backround/다가오는솔라스 (4).jpg\": 3055,\n\t\"./clothes/dress.svg\": 2904,\n\t\"./clothes/dress팔.svg\": 5892,\n\t\"./clothes/shirt.svg\": 1129,\n\t\"./clothes/shirt팔.svg\": 8199,\n\t\"./green.svg\": 2697,\n\t\"./sticker/Ae.png\": 2592,\n\t\"./sticker/Ai.png\": 5359,\n\t\"./sticker/Figma.png\": 9124,\n\t\"./sticker/Ps.png\": 2649,\n\t\"./sticker/css.png\": 3153,\n\t\"./sticker/html.png\": 7089,\n\t\"./sticker/vsCode.png\": 7792,\n\t\"./ui/add.svg\": 7222,\n\t\"./ui/cached.png\": 9783,\n\t\"./ui/cached.svg\": 8015,\n\t\"./ui/delete.svg\": 4684,\n\t\"./ui/deleteIcon.png\": 7155,\n\t\"./ui/download.svg\": 8713,\n\t\"./ui/open_in_full.png\": 5507,\n\t\"./ui/open_in_full.svg\": 795,\n\t\"./인간.svg\": 9759,\n\t\"./인간팔.svg\": 7608\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5350;","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String(new $Error(arg).stack); })('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable, sonarjs/slow-regex -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8660;\nmodule.exports = webpackEmptyContext;"],"names":["classof","$String","String","module","exports","argument","TypeError","ref","class","_createElementBlock","_hoisted_1","_createVNode","_component_CanvasUI","n","constructor","t","window","devicePixelRatio","o","super","this","configure","arguments","length","Object","assign","addFonts","fontPaths","s","removeFonts","forEach","clearFonts","restoreDefaults","e","reduce","a","Array","i","console","h","Error","concat","c","l","u","testPrecision","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","queryWebGL","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLPrecision","find","getExtension","loseContext","isSupported","d","g","p","document","isTouchSupported","navigator","maxTouchPoints","WebGLProbe","dispose","copyPasteData","m","v","y","Math","max","_","getFontCache","fontFamily","fontStyle","fontWeight","toLowerCase","charWidthsCache","r","clearFontCache","limitDimsByArea","perfLimitSizeTotal","sqrt","floor","x","C","b","PI","S","w","T","freeze","O","k","D","M","P","E","A","j","F","L","R","I","B","X","Y","W","V","z","G","H","N","U","q","K","J","Q","Z","$","tt","Map","has","getClass","get","setClass","set","type","getSVGClass","setSVGClass","et","remove","indexOf","splice","cancelAll","abort","cancelByCanvas","filter","target","canvas","cancelByTarget","st","on","__eventListeners","entries","off","push","once","call","_removeEventListener","fire","it","rt","abs","cos","nt","sign","sin","ot","add","addEquals","scalarAdd","scalarAddEquals","subtract","subtractEquals","scalarSubtract","scalarSubtractEquals","multiply","scalarMultiply","scalarMultiplyEquals","divide","scalarDivide","scalarDivideEquals","eq","lt","lte","gt","gte","lerp","min","distanceFrom","midPointFrom","toString","setXY","setX","setY","setFromPoint","swap","clone","rotate","at","transform","ht","isArray","_objects","ct","_onObjectAdded","_onObjectRemoved","_onStackOrderChanged","insertAt","forEachObject","getObjects","isType","item","isEmpty","size","contains","includes","some","complexity","sendObjectToBack","unshift","bringObjectToFront","sendObjectBackwards","findNewLowerIndex","bringObjectForward","findNewUpperIndex","moveObjectTo","isOverlapping","collectObjects","left","top","width","height","includeIntersecting","selectable","visible","intersectsWithRect","isContainedWithinRect","containsPoint","_setOptions","_setObject","_set","toggle","ut","requestAnimationFrame","dt","cancelAnimationFrame","ft","pt","createElement","mt","vt","yt","toDataURL","_t","Promise","toBlob","xt","Ct","bt","every","St","wt","Tt","Ot","reduceRight","kt","atan2","Dt","pow","angle","scaleX","scaleY","skewX","skewY","translateX","translateY","Mt","Pt","Et","At","tan","jt","Ft","Lt","flipX","flipY","Rt","It","signal","crossOrigin","aborted","src","addEventListener","onload","onerror","removeEventListener","Bt","reviver","all","map","fromObject","then","catch","finally","Xt","values","keys","Yt","Wt","Vt","parseFloat","Number","toFixed","zt","NUM_FRACTION_DIGITS","join","Gt","toLive","Ht","toObject","Nt","offsetX","Ut","qt","Kt","documentElement","body","scrollLeft","scrollTop","parentNode","host","nodeType","style","position","ownerDocument","Jt","defaultView","Qt","setAttribute","scale","Zt","$t","onselectstart","userSelect","te","createLowerCanvas","lower","el","ctx","getElementById","hasAttribute","_originalCanvasStyle","cssText","classList","cleanupDOM","removeAttribute","setDimensions","setCSSDimensions","calcOffset","getComputedStyle","parseInt","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","getBoundingClientRect","clientLeft","clientTop","ee","backgroundVpt","backgroundColor","overlayVpt","overlayColor","includeDefaultValues","svgViewportTransformation","renderOnAddRemove","skipOffscreen","enableRetinaScaling","imageSmoothingEnabled","controlsAboveOverlay","allowTouchScrolling","viewportTransform","se","lowerCanvasEl","elements","contextContainer","getDefaults","ownDefaults","initElements","_setDimensionsImpl","skipControlsDrawing","calcViewportBoundaries","requestRenderAll","setCoords","getRetinaScaling","_offset","getWidth","getHeight","setWidth","setHeight","cssOnly","backstoreOnly","hasLostContext","getZoom","setViewportTransform","zoomToPoint","setZoom","absolutePan","relativePan","getElement","clearContext","clearRect","clear","backgroundImage","overlayImage","renderAll","cancelRequestedRender","destroyed","renderCanvas","renderAndReset","nextRenderHandle","disposed","vptCoords","tl","tr","bl","br","drawControls","clipPath","patternQuality","_renderBackground","save","_renderObjects","restore","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","zoomX","zoomY","drawImage","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","beginPath","moveTo","lineTo","closePath","fillStyle","offsetY","gradientTransform","patternTransform","fill","getCenter","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","toJSON","excludeFromExport","_toObject","version","objects","__serializeBgOverlay","background","overlay","toSVG","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","additionalTransform","_renderText","styles","_setSVGObject","repeat","source","id","loadFromJSON","reject","JSON","parse","cloneWithoutData","format","quality","multiplier","toCanvasElement","f","destroy","kill","ie","re","changedTouches","clientX","clientY","ne","pointerType","oe","preventDefault","stopPropagation","ae","he","ce","le","calcOwnMatrix","setPositionByOrigin","ue","de","ge","fe","pe","me","ve","ye","_e","center","bottom","right","xe","Ce","be","originX","originY","Se","we","Te","pointer","Oe","getTotalAngle","round","ke","corner","controls","padding","getRelativeCenterPoint","translateToGivenOrigin","De","Me","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Pe","Ee","Ae","endsWith","je","toUpperCase","padStart","Fe","Le","setSource","_source","_tryParsingColor","sourceFromHex","sourceFromRgb","sourceFromHsl","isUnrecognised","getSource","toRgb","toRgba","toHsl","toHsla","toHex","toHexa","slice","getAlpha","setAlpha","toGrayscale","toBlackWhite","overlayWith","fromRgb","fromRgba","match","fromHsl","fromHsla","parseAngletoDegrees","fromHex","split","Re","exec","DPI","Ie","trim","meetOrSlice","alignX","alignY","Be","Xe","getSvgStyles","fillRule","strokeWidth","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","opacity","getSvgFilter","stroke","shadow","getSvgCommons","getSvgTransform","calcTransformMatrix","_toSVG","_createBaseSVGMarkup","_createBaseClipPathSVGMarkup","noStyle","withShadow","strokeUniform","absolutePositioned","addPaintOrder","paintFirst","Ye","RegExp","We","Ve","ze","Ge","He","Ne","Ue","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","fontSize","underline","overline","linethrough","textAlign","lineHeight","textBackgroundColor","path","pathStartOffset","pathSide","pathAlign","charSpacing","deltaY","direction","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","superscript","baseline","subscript","_fontSizeFraction","offsets","_fontSizeMult","qe","Ke","Je","Qe","Ze","$e","ts","es","raw","ss","is","rs","ns","cx","cy","display","visibility","os","as","hs","cs","ls","us","ds","gs","fs","ps","ms","vs","Cs","bs","ys","_s","xs","Ss","ws","Ts","Os","parseShadow","color","replace","blur","affectStroke","nonScaling","ks","Ds","Ms","Ps","minScaleLimit","objectCaching","inverted","centeredRotation","centeredScaling","dirty","Es","asin","As","js","Fs","Ls","Rs","__proto__","defaultEasing","easeInBack","easeInBounce","easeInCirc","easeInCubic","easeInElastic","easeInExpo","easeInOutBack","easeInOutBounce","easeInOutCirc","easeInOutCubic","easeInOutElastic","easeInOutExpo","easeInOutQuad","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInQuad","easeInQuart","easeInQuint","easeInSine","easeOutBack","easeOutBounce","easeOutCirc","easeOutCubic","easeOutElastic","easeOutExpo","easeOutQuad","easeOutQuart","easeOutQuint","easeOutSine","Is","Bs","startValue","byValue","duration","delay","easing","onStart","onChange","onComplete","tick","bind","_onStart","_onChange","_onComplete","_abort","value","endValue","calculate","state","_state","isDone","start","startTime","Date","register","setTimeout","durationProgress","valueProgress","unregister","Xs","Ys","Ws","Vs","zs","Gs","Hs","Ns","Us","qs","Ks","status","points","append","isPointContained","isPointInPolygon","intersectSegmentSegment","intersectLineLine","intersectSegmentLine","intersectLinePolygon","intersectSegmentPolygon","intersectPolygonPolygon","intersectPolygonRectangle","Js","getX","getXY","getY","getRelativeX","setRelativeX","getRelativeY","setRelativeY","getRelativeXY","group","setRelativeXY","isStrokeAccountedForInDimensions","getCoords","aCoords","calcACoords","intersectsWithObject","isContainedWithinObject","getBoundingRect","isOnScreen","isPartiallyOnScreen","getScaledWidth","_getTransformedDimensions","getScaledHeight","scaleToWidth","scaleToHeight","getCanvasRetinaScaling","getViewportTransform","transformMatrixKey","matrixCache","key","ownMatrixCache","_getNonTransformedDimensions","_calculateCurrentDimensions","translateToCenterPoint","translateToOriginPoint","getPointByOrigin","_getLeftTopCoords","Qs","Zs","$s","setOptions","_createCacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","maxCacheSideLimit","minCacheSideLimit","capped","_getCacheCanvasDimensions","getTotalObjectScaling","ceil","setTransform","translate","contextTop","getObjectScaling","getObjectOpacity","_constrainScale","cacheProperties","parent","stateProperties","isNotVisible","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setShadow","drawCacheOnCanvas","_removeCacheCanvas","drawObject","isCacheDirty","parentClipPaths","hasStroke","hasFill","needsItsOwnCache","ownCaching","isOnACache","willDrawShadow","drawClipPathOnCache","_setClippingProperties","_render","_drawClipPath","createClipPathLayer","fillRect","_removeShadow","globalAlpha","_setStrokeStyles","lineWidth","lineCap","lineDashOffset","lineJoin","miterLimit","gradientUnits","_applyPatternForTransformedGradient","strokeStyle","_applyPatternGradientTransform","_setFillStyles","_setLineDash","setLineDash","shadowColor","shadowBlur","browserShadowBlurConstant","shadowOffsetX","shadowOffsetY","_renderPaintInOrder","_renderStroke","_renderFill","createPattern","_findCenterFromElement","cloneAsImage","canvasProvider","withoutTransform","withoutShadow","setOnGroup","animate","_animate","colorProperties","isDescendantOf","getAncestors","findCommonAncestors","fork","otherFork","common","hasCommonAncestors","isInFrontOf","pop","customProperties","_removeDefaultValues","getPrototypeOf","_fromObject","extraParam","ti","ei","si","ii","sizeX","cornerSize","sizeY","transparentCorners","cornerStrokeColor","cornerColor","arc","ri","strokeRect","ni","shouldActivate","getActiveObject","isControlVisible","getActionHandler","actionHandler","getMouseDownHandler","mouseDownHandler","getMouseUpHandler","mouseUpHandler","cursorStyleHandler","cursorStyle","getActionName","actionName","getVisibility","_controlsVisibility","setVisibility","positionHandler","calcCornerCoords","touchSizeX","touchSizeY","cornerStyle","oi","lockRotation","ai","ex","ey","theta","snapAngle","snapThreshold","hi","uniScaleKey","uniformScaling","ci","li","ui","di","by","gestureScale","signX","signY","original","gi","fi","pi","mi","vi","counterAxis","skew","lockSkewing","origin","flip","yi","_i","xi","skewingSide","atan","Ci","bi","Si","altActionKey","wi","Ti","Oi","ki","Di","ml","mr","mb","mtr","withConnection","Mi","Pi","Ei","createControls","noScaleCache","_currentTransform","action","startsWith","getActiveControl","__corner","control","coord","oCoords","findControl","hasControls","touchCorner","calcOCoords","forEachControl","_calcCornerCoords","touchCornerSize","selectionBackgroundColor","_activeObject","strokeBorders","_drawBorders","borderColor","borderDashArray","drawControlsConnectingLines","_renderControls","hasBorders","borderScaleFactor","isMoving","borderOpacityWhenMoving","drawBorders","forActiveSelection","cornerDashArray","setControlVisible","setControlsVisibility","clearContextTop","onDeselect","onSelect","shouldStartDragging","onDragStart","canDrop","renderDragSourceEffect","renderDropTargetEffect","Ai","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","create","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockSkewingX","lockSkewingY","lockScalingFlip","evented","perPixelTargetFind","activeOn","hoverCursor","moveCursor","ji","Fi","data","getImageData","Li","options","strokeProjectionMagnitude","strokeUniformScalar","createSideVector","projectOrthogonally","applySkew","calcOrthogonalProjection","isSkewed","scaleUnitVector","Ri","Ii","getOrthogonalRotationFactor","AB","AC","alpha","bisector","projectBevel","projectMiter","projectRoundNoSkew","projectRoundWithSkew","projectRound","projectPoints","project","originPoint","projectedPoint","Bi","projectButt","projectSquare","Xi","Yi","Wi","Vi","zi","Intl","Segmenter","granularity","segment","from","Gi","Hi","charCodeAt","isNaN","charAt","Ni","capitalize","escapeXml","graphemeSplit","Ui","textDecorationThickness","qi","end","Ki","Ji","Qi","nodeName","getAttribute","Zi","parentElement","$i","er","sr","ir","rr","nr","or","ar","hr","cr","lr","ur","dr","gr","fr","pr","vr","yr","_r","xr","Cr","test","matchAll","Sr","transformMatrix","wr","Tr","Or","kr","Dr","font","Mr","Pr","Er","_initRxRy","rx","ry","bezierCurveTo","fromElement","ATTRIBUTE_NAMES","Boolean","Ar","jr","Fr","Lr","Rr","Ir","calcLayoutResult","shouldPerformLayout","calcBoundingBox","prevStrategy","strategy","shouldLayoutClipPath","getInitialSize","overrides","relativeCorrection","Br","Xr","Yr","Wr","Vr","_subscriptions","performLayout","bubbles","_prevLayoutStrategy","onBeforeLayout","getLayoutResult","commitLayout","onAfterLayout","attachHandlers","trigger","subscribe","unsubscribe","delete","unsubscribeTargets","targets","subscribeTargets","context","deep","layoutManager","correction","result","prevCenter","nextCenter","offset","layoutObjects","layoutObject","zr","Gr","Hr","groupInit","__objectSelectionTracker","__objectSelectionMonitor","__objectSelectionDisposer","enterGroup","canEnterGroup","_filterObjectsBeforeEnteringGroup","_onAfterObjectsChange","exitGroup","_shouldSetNestedCoords","subTargetCheck","removeAll","_activeObjects","_watchObject","_enterGroup","_exitGroup","preserveObjectStacking","triggerLayout","__serializeObjects","_createSVGBgRect","interactive","Nr","Ur","qr","Kr","Jr","Qr","Zr","$r","tn","cachesBoundsOfCurve","boundsOfCurveCache","nn","en","sn","rn","an","hn","cn","ln","un","dn","gn","iterator","angleFinder","fn","command","destX","destY","pn","mn","vn","yn","_n","xn","lastIndex","Cn","bn","Sn","setProperty","wn","random","Tn","ontimeout","onreadystatechange","readyState","open","send","On","cropX","cropY","offsetLeft","offsetTop","kn","addTransformToObject","animateColor","applyTransformToObject","calcAngleBetweenVectors","calcDimensionsMatrix","calcPlaneChangeMatrix","calcVectorRotation","cancelAnimFrame","capValue","composeMatrix","copyCanvasElement","createCanvasElement","createImage","createRotateMatrix","createScaleMatrix","createSkewXMatrix","createSkewYMatrix","createTranslateMatrix","createVector","crossProduct","degreesToRadians","dotProduct","ease","enlivenObjectEnlivables","enlivenObjects","findScaleToCover","findScaleToFit","getBoundsOfCurve","getOrthonormalVector","getPathSegmentsInfo","getPointOnPath","getPointer","getRandomInt","getRegularPolygonPath","getSmoothPathFromPoints","getSvgAttributes","getUnitVector","groupSVGElements","hasStyleChanged","invertTransform","isBetweenVectors","isIdentityMatrix","isTouchEvent","isTransparent","joinPath","loadImage","magnitude","makeBoundingBoxFromPoints","makePathSimpler","matrixToSVG","mergeClipPaths","multiplyTransformMatrices","multiplyTransformMatrixArray","parsePath","parsePreserveAspectRatioAttribute","parseUnit","pick","projectStrokeOnPoints","qrDecompose","radiansToDegrees","removeFromArray","removeTransformFromObject","removeTransformMatrixForSvgParsing","request","requestAnimFrame","resetObjectTransform","rotatePoint","rotateVector","saveObjectTransform","sendObjectToPlane","sendPointToPlane","sendVectorToPlane","setStyle","sizeAfterTransform","string","stylesFromArray","stylesToArray","transformPath","transformPoint","Dn","containerClass","createUpperCanvas","upper","applyCanvasStyle","createContainerElement","replaceChild","container","className","removeChild","Mn","upperCanvasEl","wrapperEl","_objectsToRender","deselected","_discardActiveObject","_hoveredTarget","_hoveredTargets","_chooseObjectsToRender","contextTopDirty","_groupSelector","isDrawingMode","renderTopLayer","_isCurrentlyDrawing","freeDrawingBrush","selection","_drawSelection","renderTop","setTargetFindTolerance","targetFindTolerance","pixelFindCanvasEl","pixelFindContext","isTargetTransparent","_isSelectionKeyPressed","selectionKey","_shouldClearSelection","getActiveObjects","_shouldCenterTransform","_getOriginFromCorner","_setupCurrentTransform","getScenePoint","centeredKey","actionPerformed","lastX","lastY","shiftKey","altKey","setCursor","cursor","deltaX","selectionLineWidth","selectionColor","selectionBorderColor","selectionDashArray","findTarget","skipTargetFind","getViewportPoint","searchPossibleTargets","altSelectionKey","_pointIsInObjectSelectionArea","_checkTarget","isEditing","_searchPossibleTargets","_pointer","_absolutePointer","_resetTransformEventData","_setBrushStyles","willReadFrequently","getTopContext","getSelectionContext","getSelectionElement","_fireSelectionEvents","selected","setActiveObject","_setActiveObject","object","endCurrentTransform","discardActiveObject","_finalizeCurrentTransform","_scaling","_realizeGroupTransformOnObject","selectionFullyContained","defaultCursor","freeDrawingCursor","notAllowedCursor","stopContextMenu","fireRightClick","fireMiddleClick","enablePointerEvents","Pn","hiddenTextarea","focus","__disposer","exitTextEditing","exitEditing","onMouseMove","updateSelectionOnMouseMove","En","An","passive","jn","viewportPoint","scenePoint","absolutePointer","Fn","Ln","Rn","mouse","in","out","targetIn","targetOut","canvasIn","canvasOut","drag","In","addOrRemove","_getEventPrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onClick","_onDragStart","_onDragEnd","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","removeListeners","_onMouseUp","_onTouchEnd","clearTimeout","_willAddMouseDown","__onMouseWheel","_isClick","_dragSource","_onDragProgress","_renderDragEffects","_dropTarget","dataTransfer","dropEffect","subTargets","dragSource","didDrop","dropTarget","_draggedoverTarget","findDragTargets","_fireEnterLeaveEvents","_basicEventHandler","detail","_cacheTransformEventData","_handleEvent","getPointerId","identifier","pointerId","_isMainEvent","isPrimary","touches","mainTouchId","__onMouseDown","_target","__onMouseUp","__onMouseMove","_shouldRender","button","_onMouseUpInDrawingMode","handleSelection","_setCursorFromEvent","isClick","currentTarget","currentSubTargets","_onMouseDownInDrawingMode","onMouseDown","alreadySelected","_onMouseMoveInDrawingMode","onMouseUp","handleMultiSelection","_transformObject","_fireOverOutEvents","textEditingManager","fireSyntheticInOutEvents","oldTarget","fireCanvas","nextTarget","previousTarget","_performTransformAction","reverse","multiSelectAdd","Bn","x1","y1","x2","y2","Xn","r1","r2","Yn","Wn","Vn","zn","NaN","Gn","Hn","Nn","Un","getElementsByTagName","qn","Kn","Jn","Qn","Zn","coords","colorStops","addColorStop","sort","_renderPathCommands","pathOffset","createLinearGradient","createRadialGradient","viewBoxWidth","viewBoxHeight","$n","to","isImageSource","isCanvasSource","sourceToString","complete","naturalWidth","naturalHeight","so","io","ro","_setPath","setBoundingBox","_calcBoundsFromPath","quadraticCurveTo","sourcePath","_getOffsetTransform","_calcDimensions","oo","ao","ho","setRadius","radius","startAngle","endAngle","counterClockwise","getRadiusX","getRadiusY","go","fo","po","mo","_setWidthHeight","calcLinePoints","vo","yo","_o","getRx","getRy","xo","Co","bo","exactBoundingBox","So","initialized","isOpen","_projectStrokeOnPoints","strokeOffset","strokeDiff","layoutProperties","wo","To","isEmptyStyles","line","styleHas","cleanStyle","_textLines","removeStyle","_extendStyles","lineIndex","charIndex","get2DCursorLocation","_getLineStyle","_setLineStyle","_getStyleDeclaration","_setStyleDeclaration","getSelectionStyles","getStyleAtPosition","getCompleteStyleDeclaration","setSelectionStyles","_forceClearCache","_styleProperties","_deleteStyleDeclaration","_deleteLineStyle","Oo","ko","Do","Mo","Po","Eo","text","setPathInfo","initDimensions","segmentsInfo","_splitText","_splitTextIntoLines","textLines","lines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","isEndOfWrapping","getLineWidth","__charBounds","kernedWidth","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderTextStroke","_renderTextFill","textBaseline","_getFontDeclaration","_renderTextLine","_renderChars","_getLeftOffset","_getTopOffset","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","renderLeft","_measureChar","measureText","getHeightOfChar","measureLine","_measureLine","_getWidthOfCharSpacing","_getGraphemeBox","_setGraphemeOnPath","numOfSpaces","__lineHeights","_renderTextCommon","_renderChar","_applyPatternGradientTransformText","handleFiller","fillText","strokeText","setSuperscript","_setScript","setSubscript","__lineWidths","genericFonts","textLayoutProperties","textAnchor","textDecoration","dx","dy","textContent","_getSVGLeftTopOffsets","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","getSvgTextDecoration","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","getSvgSpanStyles","_getSVGLineTopOffset","Ao","dragEnterHandler","dragOverHandler","dragLeaveHandler","dragEndHandler","dropHandler","_dispose","isPointerOverSelection","getSelectionStartFromPointer","selectionStart","selectionEnd","__mouseDownInPlace","isActive","__dragStartFired","setCursorByClick","initDelayedCursor","__isDraggingOver","getDragStartSelection","__dragStartSelection","setDragImage","_getCursorBoundaries","leftOffset","topOffset","border","__dragImageDisposer","appendChild","setData","stringify","effectAllowed","abortCursorAnimation","editable","defaultPrevented","targetCanDrop","getData","types","removeChars","trimEnd","insertChars","enterEditing","_updateTextarea","index","jo","Fo","initBehavior","_tick","_onTickComplete","_animateCursor","toValue","_currentCursorOpacity","renderCursorOrSelection","_currentTickState","cursorDuration","_currentTickCompleteState","cursorDelay","restartCursorIfNeeded","selectAll","_fireSelectionChanged","cmdAll","getSelectedText","findWordBoundaryLeft","_reSpace","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","selectLine","enterEditingImpl","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","activeElement","__selectionStartOnMouseDown","editingBorderColor","fromStringToGraphemeSelection","fromGraphemeToStringSelection","cursorOffsetCache","inCompositionMode","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","compositionStart","clientWidth","clientHeight","charHeight","_savedProps","_restoreEditingProps","_exitEditing","exitEditingImpl","_removeExtraneousStyles","removeStyleFromTo","shiftLineStyles","insertNewlineStyleObject","insertCharStyleObject","insertNewStyleBlock","setSelectionStartEndWithShift","_selectionDirection","Lo","autocapitalize","autocorrect","autocomplete","spellcheck","wrap","hiddenTextareaContainer","keydown","keyup","input","copy","cut","paste","compositionstart","compositionupdate","compositionend","onKeyDown","keysMapRtl","keysMap","keyCode","ctrlKeysMapDown","ctrlKey","metaKey","stopImmediatePropagation","onKeyUp","_copyDone","ctrlKeysMapUp","onInput","fromPaste","copiedText","disableStyleCopyPaste","copiedTextStyle","onCompositionStart","onCompositionEnd","onCompositionUpdate","compositionEnd","_getWidthBeforeCursor","getDownCursorOffset","_getSelectionForOffset","_getIndexOnLine","getUpCursorOffset","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","Ro","Io","_mouseDownHandler","doubleClickHandler","tripleClickHandler","draggableTextDelegate","Bo","Xo","Yo","Wo","Vo","zo","Go","cursorColor","caching","Ho","setSelectionStart","_updateAndFire","setSelectionEnd","findAncestorsWithClipPath","renderSelection","renderCursor","_getCursorBoundariesOffsets","__getCursorBoundariesOffsets","renderCursorAt","_renderCursor","getCursorRenderingData","_renderSelection","compositionColor","getCurrentCharFontSize","_getCurrentCharIndex","getCurrentCharColor","No","dynamicMinWidth","_styleMap","_generateStyleMap","splitByGrapheme","isWrapping","_wrapText","getGraphemeDataForRender","wordsData","_wrapLine","wordSplit","word","_measureWord","largestWordWidth","_wordJoiners","getMinWidth","minWidth","Uo","qo","Ko","Set","Jo","multiSelectionStacking","findIndex","Qo","applyFilters","sourceWidth","sourceHeight","imageData","originalEl","originalImageData","canvasEl","filterBackend","applyTo","putImageData","Zo","tileSize","textureSize","Float32Array","setupGLContext","captureGPUInfo","createWebGLCanvas","premultipliedAlpha","depth","stencil","antialias","clearColor","gl","getCachedTexture","originalWidth","originalHeight","destinationWidth","destinationHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","aPosition","programCache","pass","targetCanvas","createFramebuffer","bindFramebuffer","FRAMEBUFFER","copyGLTo2D","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","NEAREST","RGBA","UNSIGNED_BYTE","CLAMP_TO_EDGE","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameteri","texImage2D","evictCachesForKey","copyGLTo2DPutImageData","Uint8Array","imageBuffer","Uint8ClampedArray","readPixels","ImageData","gpuInfo","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","$o","ta","enableGLFiltering","ea","ia","ra","na","filters","cacheKey","setElement","_element","removeTexture","_originalElement","CSS_CANVAS","resizeFilter","applyResizeFilters","getCrossOrigin","getOriginalSize","_stroke","getSrc","hasCrop","imageSmoothing","getSvgSrc","srcFromAttribute","setSrc","minimumScaleTrigger","_filteredEl","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","isNeutralState","_needsResize","_resetWidthHeight","preserveAspectRatio","fromURL","href","oa","minX","minY","createElementNS","firstChild","aa","tagName","ha","ca","getElementsByTagNameNS","la","ua","da","children","cloneNode","ga","fa","pa","ma","regexUrl","doc","clipPaths","gradientDefs","cssRules","createObject","resolveGradient","resolveClipPath","extractPropertyDefinition","clipRule","va","ya","allElements","async","_a","attributes","name","setAttributeNS","childNodes","Ca","responseXML","ba","Sa","wa","pointIndex","Ta","Oa","ka","Da","commandIndex","Ma","Pa","controlFill","controlStroke","Ea","connectToCommandIndex","connectToPointIndex","connectionDashArray","Aa","controlPointStyle","pointStyle","ja","changeWidth","createObjectDefaultControls","createPathControls","createPolyActionHandler","createPolyControls","createPolyPositionHandler","createResizeControls","createTextboxDefaultControls","dragHandler","factoryPolyActionHandler","getLocalPoint","polyActionHandler","renderCircleControl","renderSquareControl","rotationStyleHandler","rotationWithSnapping","scaleCursorStyleHandler","scaleOrSkewActionName","scaleSkewCursorStyleHandler","scalingEqually","scalingX","scalingXOrSkewingY","scalingY","scalingYOrSkewingX","skewCursorStyleHandler","skewHandlerX","skewHandlerY","wrapWithFireEvent","wrapWithFixedAnchor","Fa","Ra","Ia","Ba","Xa","Ya","Wa","defaults","getFragmentSource","getVertexSource","createProgram","VERTEX_SHADER","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","getUniformLocations","uStepW","getUniformLocation","uStepH","program","attributeLocations","getAttributeLocations","uniformLocations","getAttribLocation","sendAttributeData","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","finish","_swapTextures","applyToWebGL","applyTo2d","getCacheKey","retrieveShader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","activeTexture","TEXTURE0","unbindAdditionalTexture","createHelpLayer","helpLayer","Va","screen","difference","lighten","darken","exclusion","tint","za","mode","uniform4fv","uColor","Ga","mask","Ha","Na","image","TEXTURE1","calculateMatrix","resources","blendImage","uniform1i","uImage","uniformMatrix3fv","uTransformMatrix","Ua","aspectRatio","horizontal","getBlurValue","chooseRightDelta","uniform2fv","uDelta","qa","brightness","uBrightness","Ka","matrix","colorsOnly","Ja","uniformMatrix4fv","uColorMatrix","uConstants","Qa","Za","$a","th","eh","sh","ih","rh","nh","subFilters","oh","contrast","uContrast","ah","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","hh","opaque","createImageData","uniform1fv","uMatrix","ch","lh","gamma","rgbValues","uniform3fv","uGamma","uh","average","lightness","luminosity","dh","uMode","gh","rotation","fh","ph","invert","uInvert","uAlpha","mh","noise","uNoise","uSeed","vh","blocksize","uBlocksize","yh","distance","uLow","uHigh","useAlpha","_h","uTaps","taps","getFilterWindow","tempScale","lanczosLobes","generateShader","getTaps","lanczosCreate","applyToForWebgl","dW","dH","rcpScaleX","rcpScaleY","resizeType","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","xh","saturation","uSaturation","Ch","vibrance","uVibrance","BaseFilter","BlackWhite","BlendColor","BlendImage","Blur","Brightness","Brownie","ColorMatrix","Composed","Contrast","Convolute","Gamma","Grayscale","HueRotation","Invert","Kodachrome","Noise","Pixelate","Polaroid","RemoveColor","Resize","Saturation","Sepia","Technicolor","Vibrance","Vintage","getDefaultsFromPostinstall","CONSTANTS","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","assert","assertion","message","assertionError","stringToByteArray$1","str","byteArrayToString","bytes","pos","c1","fromCharCode","c2","c3","c4","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","DecodeBase64StringError","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","base64Decode","error","deepCopy","deepExtend","undefined","dateValue","getTime","prop","hasOwnProperty","isValidKey","getGlobal","self","global","getDefaultsFromGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","process","defaultsJsonString","getDefaultsFromCookie","cookie","decoded","info","getDefaultEmulatorHost","productName","_b","emulatorHosts","getDefaultEmulatorHostnameAndPort","separatorIndex","lastIndexOf","port","substring","getDefaultAppConfig","config","Deferred","resolve","promise","wrapCallback","callback","isCloudWorkstation","pingServer","endpoint","fetch","credentials","ok","createMockUserToken","token","projectId","uid","header","alg","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","signature","emulatorStatus","getEmulatorSummary","summary","prod","emulator","getOrCreateEl","parentDiv","created","element","previouslyDismissed","updateEmulatorBanner","isRunningEmulator","location","prefixedId","bannerId","showError","tearDown","setupBannerStyles","bannerEl","borderRadius","alignItems","setupIconStyles","prependIcon","iconId","marginLeft","setupCloseBtn","closeBtn","innerHTML","onclick","setupLinkStyles","learnMoreLink","learnMoreId","innerText","setupDom","banner","firebaseTextId","firebaseText","prependIconId","getUA","isMobileCordova","isReactNative","isNodeSdk","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","ERROR_NAME","FirebaseError","code","customData","setPrototypeOf","captureStackTrace","ErrorFactory","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","PATTERN","jsonEval","decode","claims","parts","isValidFormat","isAdmin","obj","safeGet","contextObj","res","deepEqual","aKeys","bKeys","aProp","bProp","isObject","thing","querystring","querystringParams","params","arrayVal","encodeURIComponent","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","update","lengthMinusBlock","inbuf","digest","totalBits","errorPrefix","fnName","argName","stringToByteArray","high","low","stringLength","getModularInstance","_delegate","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","component","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","optional","getComponent","setComponent","isComponentEager","instanceDeferred","clearInstance","services","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","normalizedDeferredIdentifier","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","callbacks","normalizeIdentifierForFactory","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","toISOString","method","Logger","_logLevel","_logHandler","_userLogHandler","val","setLogLevel","logHandler","userLogHandler","debug","log","warn","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","success","cacheDonePromiseForTransaction","tx","done","DOMException","idbProxyTraps","receiver","objectStoreNames","objectStore","replaceTraps","wrapFunction","func","transaction","apply","unwrap","storeNames","transformCachableValue","Proxy","IDBRequest","newValue","openDB","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","logger","PLATFORM_LOG_STRING","name$q","name$p","name$n","name$o","name$l","name$m","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","_apps","_serverApps","_components","_addComponent","app","_registerComponent","componentName","serverApp","_getProvider","heartbeatController","triggerHeartbeat","_isFirebaseServerApp","settings","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","MAX_NUM_STORED_HEARTBEATS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","platformLogger","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","earliestHeartbeatIdx","getEarliestHeartbeatIdx","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","today","heartbeatsCache","maxSize","heartbeatEntry","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","earliestHeartbeatDate","registerCoreComponents","version$1","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","varArgs","arg","firstLog_","enableLogging$1","logger_","persistent","logWrapper","prefix","fatal","warnIfPageIsSecure","protocol","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","called","wrappedFn","attachEvent","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","len","dataSegs","each","doubleToIEEE754String","ebits","fbits","bias","Infinity","LN2","bits","hexByteString","hexByte","substr","isChromeExtensionContentScript","isWindowsStoreApp","Windows","UI","INTEGER_REGEXP_","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Deno","unrefTimer","AppCheckTokenProvider","appCheckProvider","appCheckToken","serverAppAppCheckToken","appCheck","getToken","forceRefresh","addTokenChangeListener","listener","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","appName_","firebaseOptions_","authProvider_","auth_","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","emulatorOptions","_host","_domain","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","query","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","arg1","arg2","arg3","arg4","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","markConnectionHealthy","shutdown_","myDisconnFrame","dataStr","base64data","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","write","iframe","contentWindow","contentDocument","alive","myID","myPW","newRequest_","theURL","curDataString","nextSeg","theSeg","seg","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","rstate","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","platform","env","proxy","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","oldAndroidRegex","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","pathString","hash","merge","refreshAuthToken","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","eventType","listeners","validateEventType_","eventData","getInitialEvent","OnlineMonitor","getInstance","online_","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","newEmptyPath","pathGetFront","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathEquals","other","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","onResponse","curReqNum","initConnection_","_path","_queryObject","outstandingGet","sendGet_","listen","currentHashFn","tag","queryId","_queryIdentifier","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","tryAppCheck","authMethod","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","interrupt","resume","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","queries","clientName","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","cmp","getNext","hasNext","peek","LLRBNode","RED","SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","setMaxNode$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","setNodeFromJSON","setMaxNode","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","Default","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","next","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON","json","jsonLeaf","childData","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","limit_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","index_","hasStart","isViewFromLeft","getIndexStartValue","getIndexStartName","hasEnd","getIndexEndValue","getIndexEndName","hasLimit","hasAnchoredLimit","getLimit","queryParamsToRestQueryStringParameters","queryParams","orderBy","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","getListenId_","listens_","listenId","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","childKey","sparseSnapshotTreeForEachTree","prefixPath","sparseSnapshotTreeForEachChild","tree","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","query_","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","filtered","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","childPath","childSnap","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeGetWrite","record","writeTreeRemoveWrite","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layeredCache","subMerge","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","trackChildChange","oldChange","oldType","getChanges","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorRevertUserWrite","viewProcessorAckUserWrite","LISTEN_COMPLETE","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","newEventCache","completeEventChildren","updateFullNode","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","filtersNodes","changedSnap","oldServerSnap","newServerCache","serverFilter","getIndexedFilter","newServerNode","oldChild","newEventSnap","viewProcessorCacheHasChild","changedChildren","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","mergePath","serverCachePath","oldServerNode","oldEventCache","serverChildren","viewGetCompleteServerCache","view","cache","viewApplyOperation","processor_","viewGenerateEventsForChanges_","eventRegistration","eventRegistrations_","eventGenerator_","referenceConstructor$1","referenceConstructor","syncPointSetReferenceConstructor","syncPointApplyOperation","syncPoint","optCompleteServerCache","views","syncPointGetCompleteServerCache","syncTreeSetReferenceConstructor","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","changeTree","syncTreeApplyTaggedQueryOverwrite","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedQueryMerge","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","existing","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidPathString","isValidRootPathString","validateFirebaseData","hasDotValue","hasActualChild","validateUrl","parsedUrl","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsForChangedPath","changedPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","startListening","infoEvents","stopListening","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","repoGenerateServerValues","taggedChildren","taggedSnap","affectedPath","repoRerunTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","repoSendTransactionQueue","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","currentOutputSnapshotResolved","unwatcher","abortReason","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","applyLocally","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","PUSH_CHARS","lastPushTime","lastRandChars","QueryImpl","_repo","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","parentPath","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","hostAndPort","tokenProvider","portIndex","useSsl","repoManagerDatabaseFromApp","authProvider","dbUrl","databaseURL","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appRepos","_repoInternal","_instanceStarted","_root","_rootInternal","_checkNotDeleted","apiName","getDatabase","connectDatabaseEmulator","mockUserToken","registerDatabase","SDK_VERSION$1","simpleListen","echo","onEcho","firebaseConfig","apiKey","authDomain","storageBucket","messagingSenderId","measurementId","require","svgContext","label","getImageUrl","filename","backroundDataRaw","default","stickerDataRaw","clothesData","clothesDataRaw","clothesListRaw","clothesList","icon","svgUrl","fromEntries","onTouchstart","_cache","$options","onTouchStart","onTouchmove","onTouchMove","onTouchend","onTouchEnd","_createElementVNode","$props","hideUi","_hoisted_2","$data","panelOpen","onClick","$event","_normalizeStyle","togglePanel","overflowY","activePanelTab","_hoisted_3","_hoisted_4","_Fragment","_renderList","backroundList","img","replaceDefaultImage","alt","draggable","_hoisted_7","_hoisted_8","_hoisted_9","avatarTabs","tab","_normalizeClass","activeAvatarTab","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","pose","currentPose","changePose","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","clothes","selectClothes","_toDisplayString","selectedClothes","_hoisted_23","colorButtons","btn","changeClothesColors","mainColor","_hoisted_25","_hoisted_26","imageCount","_hoisted_27","uploadedImages","fabricObj","removePreviewImage","title","_hoisted_29","_hoisted_30","_imports_0","accept","onFileChange","_hoisted_31","addTextbox","_hoisted_32","_hoisted_33","StickerList","addSticker","_hoisted_36","openPanel","_hoisted_37","isRestoring","defaultImageObject","selectedColorIndexes","touchStartY","touchMoveY","components","methods","addHumanControlLayer","humanControlLayer","humanSvgGroup","bounds","controlLayer","Rect","addCharacterControls","clothesSvgGroup","addHumanSvg","prevLeft","prevTop","prevScaleX","prevScaleY","prevAngle","humanSvgUrl","humanArm","human","loadedSVG","loadSVGFromURL","svgGroup","util","addHumanMoveListener","clothesName","changeRecursive","saveCanvasAsImage","prompt","dataUrl","link","download","click","changeSvgColorsByIds","idColorList","renderDeleteIcon","_styleOverride","fabricObject","dpr","hitSize","Image","deleteIcon","renderRotateIcon","rotateIcon","renderResizeIcon","resizeIcon","deleteObject","_eventData","canvasInstance","_bgRect","deleteControl","rotateControl","resizeControl","Control","hitbox","controlsUtils","addCustomControls","addRectangle","rect","textbox","IText","bgRect","ensureBgBelowText","objs","bgIdx","textIdx","updateBgRect","addImage","imageSrc","fabricImage","FabricImage","Group","markRaw","updateImageCount","files","alert","file","reader","FileReader","readAsDataURL","removeImageObject","newImageSrc","canvasW","canvasH","imgW","imgH","initializeCanvas","wrapper","$el","querySelector","canvasWidth","canvasHeight","Canvas","$refs","opt","isHumanPart","stickerSrc","mounted","$nextTick","showPopup","closePopup","openPopup","_component_MainCanvas","MainCanvas","mainCanvas","CanvasUI","activeTab","tabs","vhRaf","lastVh","setRealViewportHeight","startVhPolling","beforeUnmount","innerHeight","content","contentArea","check","$default","isCallable","$this","dummy","Wrapper","NewTarget","NewTargetPrototype","globalThis","getBuiltIn","createPropertyDescriptor","hasOwn","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","DESCRIPTORS","IS_PURE","DOM_EXCEPTION","NativeDOMException","$DOMException","DOMExceptionPrototype","argumentsLength","that","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","descriptor","BUGGY_DESCRIPTOR","writable","configurable","FORCED_CONSTRUCTOR","forced","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","constant","constantName","IndexSizeError","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","webpackContext","webpackContextResolve","__webpack_require__","uncurryThis","$Error","TEST","V8_OR_CHAKRA_STACK_ENTRY","IS_V8_OR_CHAKRA_STACK","dropEntries","prepareStackTrace","webpackEmptyContext"],"sourceRoot":""}